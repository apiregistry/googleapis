#%RAML 1.0
title: Google Cloud Dataproc API
version: v1alpha1
baseUri: https://dataproc.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/dataproc/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): dataproc:v1alpha1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  CancelJobRequest:
    type: object
    description: A request to cancel a job.
  CancelOperationRequest:
    type: object
    description: The request message for Operations.CancelOperation.
  Cluster:
    type: object
    properties:
      clusterUuid?:
        type: string
        description: '[Output-only] A cluster UUID (Unique Universal Identifier).
          Cloud Dataproc generates this value when it creates the cluster.'
      statusHistory?:
        type: array
        description: '[Output-only] Previous cluster statuses.'
        items: ClusterStatus
      configuration?: ClusterConfiguration
      createTime?:
        type: string
        description: '[Output-only] The timestamp of cluster creation.'
      clusterName?:
        type: string
        description: '[Required] The cluster name. Cluster names within a project
          must be unique. Names from deleted clusters can be reused.'
      projectId?:
        type: string
        description: '[Required] The Google Cloud Platform project ID that the cluster
          belongs to.'
      status?: ClusterStatus
    description: Describes the identifying information, configuration, and status of a cluster of Google Compute Engine instances.
  ClusterConfiguration:
    type: object
    properties:
      workerConfiguration?: InstanceGroupConfiguration
      configurationBucket?:
        type: string
        description: '[Optional] A Google Cloud Storage staging bucket used for sharing
          generated SSH keys and configuration. If you do not specify a staging bucket,
          Cloud Dataproc will determine an appropriate Cloud Storage location (US,
          ASIA, or EU) for your cluster''s staging bucket according to the Google
          Compute Engine zone where your cluster is deployed, then it will create
          and manage this project-level, per-location bucket for you.'
      softwareConfiguration?: SoftwareConfiguration
      gceConfiguration?: GceConfiguration
      masterConfiguration?: InstanceGroupConfiguration
      numWorkers?:
        type: integer
        format: int32
        description: '[Deprecated] The number of worker nodes in the cluster.'
      masterDiskConfiguration?: DiskConfiguration
      secondaryWorkerConfiguration?: InstanceGroupConfiguration
      initializationActions?:
        type: array
        description: '[Optional] Commands to execute on each node after configuration
          is completed. By default, executables are run on master and all worker nodes.
          You can test a node''s role metadata to run an executable on a master or
          worker node, as shown below: ROLE=$(/usr/share/google/get_metadata_value
          attributes/role) if [[ "${ROLE}" == ''Master'' ]]; then ... master specific
          actions ... else ... worker specific actions ... fi'
        items: NodeInitializationAction
      workers?:
        type: array
        description: '[Deprecated] The list of worker node names. Dataproc derives
          the names from cluster_name and num_workers if not set by user (recommended
          practice is to let Dataproc derive the name). Derived worker node name example:
          hadoop-w-0.'
        items:
          type: string
      gceClusterConfiguration?: GceClusterConfiguration
      masterName?:
        type: string
        description: '[Deprecated] The Master''s hostname. Dataproc derives the name
          from cluster_name if not set by user (recommended practice is to let Dataproc
          derive the name). Derived master name example: hadoop-m.'
      workerDiskConfiguration?: DiskConfiguration
    description: The cluster configuration.
  ClusterOperationMetadata:
    type: object
    properties:
      clusterUuid?:
        type: string
        description: Cluster UUId for the operation.
      statusHistory?:
        type: array
        description: '[Output-only] The previous operation status.'
        items: ClusterOperationStatus
      clusterName?:
        type: string
        description: Name of the cluster for the operation.
      description?:
        type: string
        description: '[Output-only] Short description of operation.'
      operationType?:
        type: string
        description: '[Output-only] The operation type.'
      status?: ClusterOperationStatus
    description: Metadata describing the operation.
  ClusterOperationStatus:
    type: object
    properties:
      innerState?:
        type: string
        description: A message containing the detailed operation state.
      details?:
        type: string
        description: A message containing any operation metadata details.
      state?:
        type: string
        description: A message containing the operation state.
        enum:
        - UNKNOWN
        - PENDING
        - RUNNING
        - DONE
      stateStartTime?:
        type: string
        description: The time this state was entered.
    description: The status of the operation.
  ClusterStatus:
    type: object
    properties:
      state?:
        type: string
        description: The cluster's state.
        enum:
        - UNKNOWN
        - CREATING
        - RUNNING
        - ERROR
        - DELETING
        - UPDATING
      detail?:
        type: string
        description: Optional details of cluster's state.
      stateStartTime?:
        type: string
        description: Time when this state was entered.
    description: The status of a cluster and its instances.
  DiagnoseClusterOutputLocation:
    type: object
    properties:
      outputUri?:
        type: string
        description: '[Output-only] The Google Cloud Storage URI of the diagnostic
          output. This will be a plain text file with summary of collected diagnostics.'
    description: The location where output from diagnostic command can be found.
  DiagnoseClusterResults:
    type: object
    properties:
      outputUri?:
        type: string
        description: '[Output-only] The Google Cloud Storage URI of the diagnostic
          output. This is a plain text file with a summary of collected diagnostics.'
    description: The location of diagnostic output.
  DiskConfiguration:
    type: object
    properties:
      bootDiskSizeGb?:
        type: integer
        format: int32
        description: '[Optional] Size in GB of the boot disk (default is 500GB).'
      numLocalSsds?:
        type: integer
        format: int32
        description: '[Optional] Number of attached SSDs, from 0 to 4 (default is
          0). If SSDs are not attached, the boot disk is used to store runtime logs,
          and HDFS data. If one or more SSDs are attached, this runtime bulk data
          is spread across them, and the boot disk contains only basic configuration
          and installed binaries.'
    description: Specifies the configuration of disk options for a group of VM instances.
  Empty:
    type: object
    description: 'A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request or
      the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty)
      returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
      JSON object `{}`.'
  GceClusterConfiguration:
    type: object
    properties:
      networkUri?:
        type: string
        description: 'The Google Compute Engine network to be used for machine communications.
          Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri
          is specified, the "default" network of the project is used, if it exists.
          Cannot be a "Custom Subnet Network" (see https://cloud.google.com/compute/docs/subnetworks
          for more information). Example: `compute.googleapis.com/projects/[project_id]/regions/global/default`.'
      metadata?:
        type: object
        description: The Google Compute Engine metadata entries to add to all instances.
      serviceAccountScopes?:
        type: array
        description: The service account scopes included in Google Compute Engine instances. Must include devstorage.full_control to enable the Google Cloud Storage connector. Example "auth.googleapis.com/compute" and "auth.googleapis.com/devstorage.full_control".
        items:
          type: string
      subnetworkUri?:
        type: string
        description: 'The Google Compute Engine subnetwork to be used for machine
          communications. Cannot be specified with network_uri. Example: `compute.googleapis.com/projects/[project_id]/regions/us-east1/sub0`.'
      zoneUri?:
        type: string
        description: '[Required] The zone where the Google Compute Engine cluster
          will be located. Example: "compute.googleapis.com/projects/[project_id]
          /zones/us-east1-a".'
      tags?:
        type: array
        description: The Google Compute Engine tags to add to all instances.
        items:
          type: string
    description: Common configuration settings for resources of Google Compute Engine cluster instances, applicable to all instances in the cluster.
  GceConfiguration:
    type: object
    properties:
      networkUri?:
        type: string
        description: '[Deprecated] The Google Compute Engine network to be used for
          machine communications. Inbound SSH connections are necessary to complete
          cluster configuration. Example "compute.googleapis.com/projects/[project_id]
          /zones/us-east1-a/default".'
      imageUri?:
        type: string
        description: '[Deprecated] The Google Compute Engine image resource used for
          cluster instances. Example: "compute.googleapis.com/projects/debian-cloud
          /global/images/backports-debian-7-wheezy-v20140904".'
      serviceAccountScopes?:
        type: array
        description: '[Deprecated] The service account scopes included in Google Compute
          Engine instances. Must include devstorage.full_control to enable the Google
          Cloud Storage connector. Example "auth.googleapis.com/compute" and "auth.googleapis.com/devstorage.full_control".'
        items:
          type: string
      machineTypeUri?:
        type: string
        description: '[Deprecated] The Google Compute Engine machine type used for
          cluster instances. Example: "compute.googleapis.com/projects/[project_id]
          /zones/us-east1-a/machineTypes/n1-standard-2".'
      zoneUri?:
        type: string
        description: '[Deprecated] The zone where the Google Compute Engine cluster
          will be located. Example: "compute.googleapis.com/projects/[project_id]
          /zones/us-east1-a".'
    description: '[Deprecated] Common configuration settings for resources of Google
      Compute Engine cluster instances, applicable to all instances in the cluster.'
  HadoopJob:
    type: object
    properties:
      args?:
        type: array
        description: '[Optional] The arguments to pass to the driver. Do not include
          arguments, such as -libjars or -Dfoo=bar, that can be set as job properties,
          since a collision may occur that causes an incorrect job submission.'
        items:
          type: string
      mainClass?:
        type: string
        description: The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
      archiveUris?:
        type: array
        description: '[Optional] HCFS URIs of archives to be extracted in the working
          directory of Hadoop drivers and tasks. Supported file types: .jar, .tar,
          .tar.gz, .tgz, or .zip.'
        items:
          type: string
      mainJarFileUri?:
        type: string
        description: 'The Hadoop Compatible Filesystem (HCFS) URI of the jar file
          containing the main class. Examples: gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar
          hdfs:/tmp/test-samples/custom-wordcount.jar file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'
      fileUris?:
        type: array
        description: '[Optional] HCFS URIs of files to be copied to the working directory
          of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.'
        items:
          type: string
      jarFileUris?:
        type: array
        description: '[Optional] Jar file URIs to add to the CLASSPATHs of the Hadoop
          driver and tasks.'
        items:
          type: string
      loggingConfiguration?: LoggingConfiguration
      properties?:
        type: object
        description: '[Optional] A mapping of property names to values, used to configure
          Hadoop. Properties that conflict with values set by the Cloud Dataproc API
          may be overwritten. Can include properties set in /etc/hadoop/conf/*-site
          and classes in user code.'
    description: A Cloud Dataproc job for running Hadoop MapReduce jobs on YARN.
  HiveJob:
    type: object
    properties:
      scriptVariables?:
        type: object
        description: '[Optional] Mapping of query variable names to values (equivalent
          to the Hive command: ''SET name="value";'').'
      continueOnFailure?:
        type: boolean
        description: '[Optional] Whether to continue executing queries if a query
          fails. The default value is false. Setting to true can be useful when executing
          independent parallel queries.'
      queryFileUri?:
        type: string
        description: The HCFS URI of the script that contains Hive queries.
      jarFileUris?:
        type: array
        description: '[Optional] HCFS URIs of jar files to add to the CLASSPATH of
          the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes
          and UDFs.'
        items:
          type: string
      properties?:
        type: object
        description: '[Optional] A mapping of property names and values, used to configure
          Hive. Properties that conflict with values set by the Cloud Dataproc API
          may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml,
          /etc/hive/conf/hive-site.xml, and classes in user code.'
      queryList?: QueryList
    description: A Cloud Dataproc job for running Hive queries on YARN.
  InstanceGroupConfiguration:
    type: object
    properties:
      isPreemptible?:
        type: boolean
        description: Specifies that this instance group contains Preemptible Instances.
      imageUri?:
        type: string
        description: '[Output-only] The Google Compute Engine image resource used
          for cluster instances. Inferred from SoftwareConfiguration.image_version.
          Example: "compute.googleapis.com/projects/debian-cloud /global/images/backports-debian-7-wheezy-v20140904".'
      instanceNames?:
        type: array
        description: The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group if not set by user (recommended practice is to let Dataproc derive the name).
        items:
          type: string
      managedGroupConfiguration?: ManagedGroupConfiguration
      numInstances?:
        type: integer
        format: int32
        description: The number of VM instances in the instance group. For master instance groups, must be set to 1.
      machineTypeUri?:
        type: string
        description: 'The Google Compute Engine machine type used for cluster instances.
          Example: "compute.googleapis.com/projects/[project_id] /zones/us-east1-a/machineTypes/n1-standard-2".'
      diskConfiguration?: DiskConfiguration
    description: The configuration settings for Google Compute Engine resources in an instance group, such as a master or worker group.
  Job:
    type: object
    properties:
      submittedBy?:
        type: string
        description: '[Output-only] The email address of the user submitting the job.
          For jobs submitted on the cluster, the address is username@hostname.'
      driverInputResourceUri?:
        type: string
        description: '[Output-only] A URI pointing to the location of the stdin of
          the job''s driver program, only set if the job is interactive.'
      driverControlFilesUri?:
        type: string
        description: '[Output-only] If present, the location of miscellaneous control
          files which may be used as part of job setup and handling. If not present,
          control files may be placed in the same location as driver_output_uri.'
      interactive?:
        type: boolean
        description: '[Optional] If set to true, then the driver''s stdin will be
          kept open and driver_input_uri will be set to provide a path at which additional
          input can be sent to the driver.'
      yarnApplications?:
        type: array
        description: '[Output-only] The collection of Yarn applications spun up by
          this job.'
        items: YarnApplication
      driverOutputUri?:
        type: string
        description: '[Output-only] A URI pointing to the location of the mixed stdout/stderr
          of the job''s driver program—for example, gs://sysbucket123/foo-cluster/jobid-123/driver/output.'
      driverOutputResourceUri?:
        type: string
        description: '[Output-only] A URI pointing to the location of the stdout of
          the job''s driver program.'
      hiveJob?: HiveJob
      reference?: JobReference
      hadoopJob?: HadoopJob
      pysparkJob?: PySparkJob
      statusHistory?:
        type: array
        description: '[Output-only] The previous job status.'
        items: JobStatus
      sparkSqlJob?: SparkSqlJob
      pigJob?: PigJob
      placement?: JobPlacement
      sparkJob?: SparkJob
      status?: JobStatus
    description: A Cloud Dataproc job resource.
  JobPlacement:
    type: object
    properties:
      clusterUuid?:
        type: string
        description: '[Output-only] A cluster UUID generated by the Dataproc service
          when the job is submitted.'
      clusterName?:
        type: string
        description: '[Required] The name of the cluster where the job will be submitted.'
    description: Cloud Dataproc job configuration.
  JobReference:
    type: object
    properties:
      jobId?:
        type: string
        description: '[Required] The job ID, which must be unique within the project.
          The job ID is generated by the server upon job submission or provided by
          the user as a means to perform retries without creating duplicate jobs.
          The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores
          (_), or dashes (-). The maximum length is 512 characters.'
      projectId?:
        type: string
        description: '[Required] The ID of the Google Cloud Platform project that
          the job belongs to.'
    description: Encapsulates the full scoping used to reference a job.
  JobStatus:
    type: object
    properties:
      insertTime?:
        type: string
        description: The time of the job request.
      details?:
        type: string
        description: '[Optional] Job state details, such as an error description if
          the state is ERROR.'
      startTime?:
        type: string
        description: The time when the server started the job.
      state?:
        type: string
        description: '[Required] A state message specifying the overall job state.'
        enum:
        - STATE_UNSPECIFIED
        - PENDING
        - SETUP_DONE
        - RUNNING
        - CANCEL_PENDING
        - CANCEL_STARTED
        - CANCELLED
        - DONE
        - ERROR
      endTime?:
        type: string
        description: The time when the job completed.
      stateStartTime?:
        type: string
        description: '[Output-only] The time when this state was entered.'
    description: Cloud Dataproc job status.
  ListClustersResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: The standard List next-page token.
      clusters?:
        type: array
        description: '[Output-only] The clusters in the project.'
        items: Cluster
    description: The list of all clusters in a project.
  ListJobsRequest:
    type: object
    properties:
      jobStateMatcher?:
        type: string
        description: '[Optional] Specifies enumerated categories of jobs to list.'
        enum:
        - ALL
        - ACTIVE
        - NON_ACTIVE
      clusterName?:
        type: string
        description: '[Optional] If set, the returned jobs list includes only jobs
          that were submitted to the named cluster.'
      pageSize?:
        type: integer
        format: int32
        description: '[Optional] The number of results to return in each response.'
      pageToken?:
        type: string
        description: '[Optional] The page token, returned by a previous call, to request
          the next page of results.'
    description: A request to list jobs in a project.
  ListJobsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: '[Optional] This token is included in the response if there are
          more results to fetch. To fetch additional results, provide this value as
          the page_token in a subsequent ListJobsRequest.'
      jobs?:
        type: array
        description: '[Output-only] Jobs list.'
        items: Job
    description: A response to a request to list jobs in a project.
  ListOperationsResponse:
    type: object
    properties:
      operations?:
        type: array
        description: A list of operations that match the specified filter in the request.
        items: Operation
      nextPageToken?:
        type: string
        description: The standard List next-page token.
    description: The response message for Operations.ListOperations.
  LoggingConfiguration:
    type: object
    properties:
      driverLogLevels?:
        type: object
        description: 'The per-package log levels for the driver. This may include
          ''root'' package name to configure rootLogger. Examples: com.google = FATAL,
          root = INFO, org.apache = DEBUG'
    description: The runtime logging configuration of the job.
  ManagedGroupConfiguration:
    type: object
    properties:
      instanceGroupManagerName?:
        type: string
        description: '[Output-only] The name of Instance Group Manager managing this
          group.'
      instanceTemplateName?:
        type: string
        description: '[Output-only] The name of Instance Template used for Managed
          Instance Group.'
    description: Specifies the resources used to actively manage an instance group.
  NodeInitializationAction:
    type: object
    properties:
      executableFile?:
        type: string
        description: '[Required] Google Cloud Storage URI of executable file.'
      executionTimeout?:
        type: string
        description: '[Optional] Amount of time executable has to complete. Default
          is 10 minutes. Cluster creation fails with an explanatory error message
          (the name of the executable that caused the error and the exceeded timeout
          period) if the executable is not completed at end of the timeout period.'
    description: Specifies an executable to run on a fully configured node and a timeout period for executable completion.
  Operation:
    type: object
    properties:
      metadata?:
        type: object
        description: Service-specific metadata associated with the operation.
      response?:
        type: object
        description: The operation response. If the called method returns no data on success, the response is `google.protobuf.Empty`. If the called method is `Get`,`Create` or `Update`, the response is the resource. For all other methods, the response type is a concatenation of the method name and "Response". For example, if the called method is `TakeSnapshot()`, the response type is `TakeSnapshotResponse`.
      name?:
        type: string
        description: The name of the operation resource, in the format projects/[project_id]/operations/[operation_id]
      error?: Status
      done?:
        type: boolean
        description: Indicates if the operation is done. If true, the operation is complete and the `result` is available. If false, the operation is still in progress.
    description: An asynchronous operation in a project that runs over a given cluster. Used to track the progress of a user request that is running asynchronously. Examples include creating a cluster, updating a cluster, and deleting a cluster.
  OperationMetadata:
    type: object
    properties:
      insertTime?:
        type: string
        description: The time that the operation was requested.
      clusterUuid?:
        type: string
        description: Cluster UUId for the operation.
      statusHistory?:
        type: array
        description: '[Output-only] Previous operation status.'
        items: OperationStatus
      innerState?:
        type: string
        description: A message containing the detailed operation state.
      clusterName?:
        type: string
        description: Name of the cluster for the operation.
      description?:
        type: string
        description: '[Output-only] Short description of operation.'
      details?:
        type: string
        description: A message containing any operation metadata details.
      startTime?:
        type: string
        description: The time that the operation was started by the server.
      operationType?:
        type: string
        description: '[Output-only] The operation type.'
      state?:
        type: string
        description: A message containing the operation state.
        enum:
        - UNKNOWN
        - PENDING
        - RUNNING
        - DONE
      endTime?:
        type: string
        description: The time that the operation completed.
      status?: OperationStatus
    description: Metadata describing the operation.
  OperationStatus:
    type: object
    properties:
      innerState?:
        type: string
        description: A message containing the detailed operation state.
      details?:
        type: string
        description: A message containing any operation metadata details.
      state?:
        type: string
        description: A message containing the operation state.
        enum:
        - UNKNOWN
        - PENDING
        - RUNNING
        - DONE
      stateStartTime?:
        type: string
        description: The time this state was entered.
    description: The status of the operation.
  PigJob:
    type: object
    properties:
      scriptVariables?:
        type: object
        description: '[Optional] Mapping of query variable names to values (equivalent
          to the Pig command: "name=[value]").'
      continueOnFailure?:
        type: boolean
        description: '[Optional] Whether to continue executing queries if a query
          fails. The default value is false. Setting to true can be useful when executing
          independent parallel queries.'
      queryFileUri?:
        type: string
        description: The HCFS URI of the script that contains the Pig queries.
      jarFileUris?:
        type: array
        description: '[Optional] HCFS URIs of jar files to add to the CLASSPATH of
          the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.'
        items:
          type: string
      loggingConfiguration?: LoggingConfiguration
      properties?:
        type: object
        description: '[Optional] A mapping of property names to values, used to configure
          Pig. Properties that conflict with values set by the Cloud Dataproc API
          may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml,
          /etc/pig/conf/pig.properties, and classes in user code.'
      queryList?: QueryList
    description: A Cloud Dataproc job for running Pig queries on YARN.
  PySparkJob:
    type: object
    properties:
      args?:
        type: array
        description: '[Optional] The arguments to pass to the driver. Do not include
          arguments, such as --conf, that can be set as job properties, since a collision
          may occur that causes an incorrect job submission.'
        items:
          type: string
      archiveUris?:
        type: array
        description: '[Optional] HCFS URIs of archives to be extracted in the working
          directory of .jar, .tar, .tar.gz, .tgz, and .zip.'
        items:
          type: string
      mainPythonFileUri?:
        type: string
        description: '[Required] The Hadoop Compatible Filesystem (HCFS) URI of the
          main Python file to use as the driver. Must be a .py file.'
      fileUris?:
        type: array
        description: '[Optional] HCFS URIs of files to be copied to the working directory
          of Python drivers and distributed tasks. Useful for naively parallel tasks.'
        items:
          type: string
      jarFileUris?:
        type: array
        description: '[Optional] HCFS URIs of jar files to add to the CLASSPATHs of
          the Python driver and tasks.'
        items:
          type: string
      loggingConfiguration?: LoggingConfiguration
      pythonFileUris?:
        type: array
        description: '[Optional] HCFS file URIs of Python files to pass to the PySpark
          framework. Supported file types: .py, .egg, and .zip.'
        items:
          type: string
      properties?:
        type: object
        description: '[Optional] A mapping of property names to values, used to configure
          PySpark. Properties that conflict with values set by the Cloud Dataproc
          API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf
          and classes in user code.'
    description: A Cloud Dataproc job for running PySpark applications on YARN.
  QueryList:
    type: object
    properties:
      queries?:
        type: array
        description: '[Required] The queries to execute. You do not need to terminate
          a query with a semicolon. Multiple queries can be specified in one string
          by separating each with a semicolon. Here is an example of an Cloud Dataproc
          API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList":
          { "queries": [ "query1", "query2", "query3;query4", ] } }'
        items:
          type: string
    description: A list of queries to run on a cluster.
  SoftwareConfiguration:
    type: object
    properties:
      imageVersion?:
        type: string
        description: '[Optional] The version of software inside the cluster. It must
          match the regular expression [0-9]+\.[0-9]+. If unspecified it will default
          to latest version.'
      properties?:
        type: object
        description: '[Optional] The properties to set on daemon configuration files.
          Property keys are specified in "prefix:property" format, such as "core:fs.defaultFS".
          The following are supported prefixes and their mappings: core - core-site.xml
          hdfs - hdfs-site.xml mapred - mapred-site.xml yarn - yarn-site.xml hive
          - hive-site.xml pig - pig.properties spark - spark-defaults.conf'
    description: Specifies the selection and configuration of software inside the cluster.
  SparkJob:
    type: object
    properties:
      args?:
        type: array
        description: '[Optional] The arguments to pass to the driver. Do not include
          arguments, such as --conf, that can be set as job properties, since a collision
          may occur that causes an incorrect job submission.'
        items:
          type: string
      mainClass?:
        type: string
        description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
      archiveUris?:
        type: array
        description: '[Optional] HCFS URIs of archives to be extracted in the working
          directory of Spark drivers and tasks. Supported file types: .jar, .tar,
          .tar.gz, .tgz, and .zip.'
        items:
          type: string
      mainJarFileUri?:
        type: string
        description: The Hadoop Compatible Filesystem (HCFS) URI of the jar file that contains the main class.
      fileUris?:
        type: array
        description: '[Optional] HCFS URIs of files to be copied to the working directory
          of Spark drivers and distributed tasks. Useful for naively parallel tasks.'
        items:
          type: string
      jarFileUris?:
        type: array
        description: '[Optional] HCFS URIs of jar files to add to the CLASSPATHs of
          the Spark driver and tasks.'
        items:
          type: string
      loggingConfiguration?: LoggingConfiguration
      properties?:
        type: object
        description: '[Optional] A mapping of property names to values, used to configure
          Spark. Properties that conflict with values set by the Cloud Dataproc API
          may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf
          and classes in user code.'
    description: A Cloud Dataproc job for running Spark applications on YARN.
  SparkSqlJob:
    type: object
    properties:
      scriptVariables?:
        type: object
        description: '[Optional] Mapping of query variable names to values (equivalent
          to the Spark SQL command: SET name="value";).'
      queryFileUri?:
        type: string
        description: The HCFS URI of the script that contains SQL queries.
      jarFileUris?:
        type: array
        description: '[Optional] HCFS URIs of jar files to be added to the Spark CLASSPATH.'
        items:
          type: string
      loggingConfiguration?: LoggingConfiguration
      properties?:
        type: object
        description: '[Optional] A mapping of property names to values, used to configure
          Spark SQL''s SparkConf. Properties that conflict with values set by the
          Cloud Dataproc API may be overwritten.'
      queryList?: QueryList
    description: A Cloud Dataproc job for running Spark SQL queries.
  Status:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The status code, which should be an enum value of google.rpc.Code.
      details?:
        type: array
        description: A list of messages that carry the error details. There will be a common set of message types for APIs to use.
        items:
          type: object
      message?:
        type: string
        description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
    description: 'The `Status` type defines a logical error model that is suitable
      for different programming environments, including REST APIs and RPC APIs. It
      is used by [gRPC](https://github.com/grpc). The error model is designed to be:
      - Simple to use and understand for most users - Flexible enough to meet unexpected
      needs # Overview The `Status` message contains three pieces of data: error code,
      error message, and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed. The error
      message should be a developer-facing English message that helps developers *understand*
      and *resolve* the error. If a localized user-facing error message is needed,
      put the localized message in the error details or localize it in the client.
      The optional error details may contain arbitrary information about the error.
      There is a predefined set of error detail types in the package `google.rpc`
      which can be used for common error conditions. # Language mapping The `Status`
      message is the logical representation of the error model, but it is not necessarily
      the actual wire format. When the `Status` message is exposed in different client
      libraries and different wire protocols, it can be mapped differently. For example,
      it will likely be mapped to some exceptions in Java, but more likely mapped
      to some error codes in C. # Other uses The error model and the `Status` message
      can be used in a variety of environments, either with or without APIs, to provide
      a consistent developer experience across different environments. Example uses
      of this error model include: - Partial errors. If a service needs to return
      partial errors to the client, it may embed the `Status` in the normal response
      to indicate the partial errors. - Workflow errors. A typical workflow has multiple
      steps. Each step may have a `Status` message for error reporting purpose. -
      Batch operations. If a client uses batch request and batch response, the `Status`
      message should be used directly inside batch response, one for each error sub-response.
      - Asynchronous operations. If an API call embeds asynchronous operation results
      in its response, the status of those operations should be represented directly
      using the `Status` message. - Logging. If some API errors are stored in logs,
      the message `Status` could be used directly after any stripping needed for security/privacy
      reasons.'
  SubmitJobRequest:
    type: object
    properties:
      job?: Job
    description: A job submission request.
  YarnApplication:
    type: object
    properties:
      trackingUrl?:
        type: string
        description: '[Optional] The HTTP URL of the ApplicationMaster, HistoryServer,
          or TimelineServer that provides application-specific information. The URL
          uses the internal hostname, and requires a proxy server for resolution and,
          possibly, access.'
      name?:
        type: string
        description: '[Required] The application name.'
      progress?:
        type: number
        format: float
        description: '[Required] The numerical progress of the application, from 1
          to 100.'
      state?:
        type: string
        description: '[Required] The application state.'
        enum:
        - STATE_UNSPECIFIED
        - NEW
        - NEW_SAVING
        - SUBMITTED
        - ACCEPTED
        - RUNNING
        - FINISHED
        - FAILED
        - KILLED
    description: A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.
/v1alpha1:
  /projects:
    /{projectId}:
      uriParameters:
        projectId:
          type: string
          description: '[Required] The ID of the Google Cloud Platform project that
            the job belongs to.'
      /regions:
        /{region}:
          uriParameters:
            region:
              type: string
              description: '[Required] The Dataproc region in which to handle the
                request.'
          /jobs:
            /{jobId}:cancel:
              uriParameters:
                jobId:
                  type: string
                  description: '[Required] The job ID.'
              post:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs:list or regions/{region}/jobs:get.
                displayName: Cancel
                is:
                - hasParameters
                body:
                  application/json: CancelJobRequest
                responses:
                  200:
                    body:
                      application/json: Job
                (commons.Id): dataproc.projects.regions.jobs.cancel
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Jobs
            /{jobId}:
              uriParameters:
                jobId:
                  type: string
                  description: '[Required] The job ID.'
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Gets the resource representation for a job in a project.
                displayName: Get
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Job
                (commons.Id): dataproc.projects.regions.jobs.get
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Jobs
              delete:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Deletes the job from the project. If the job is active, the delete fails, and the response returns `FAILED_PRECONDITION`.
                displayName: Delete
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Job
                (commons.Id): dataproc.projects.regions.jobs.delete
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Jobs
          /jobs:submit:
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Submits a job to a cluster.
              displayName: Submit
              is:
              - hasParameters
              body:
                application/json: SubmitJobRequest
              responses:
                200:
                  body:
                    application/json: Job
              (commons.Id): dataproc.projects.regions.jobs.submit
              (commons.LogicalStructure):
              - Projects
              - Regions
              - Jobs
          /clusters:
            /{clusterName}:
              uriParameters:
                clusterName:
                  type: string
                  description: '[Required] The cluster name.'
              patch:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Request to update a cluster in a project.
                displayName: Patch
                is:
                - hasParameters
                queryParameters:
                  updateMask?:
                    type: string
                    description: '[Required] Specifies the path, relative to Cluster,
                      of the field to update. For example, to change the number of
                      workers in a cluster to 5, the update_mask parameter would be
                      specified as "configuration.worker_configuration.num_instances,"
                      and the PATCH request body would specify the new value, as follows:
                      { "configuration":{ "workerConfiguration":{ "numInstances":"5"
                      } } } Note: Currently, configuration.worker_configuration.num_instances
                      is the only field that can be updated.'
                body:
                  application/json: Cluster
                responses:
                  200:
                    body:
                      application/json: Operation
                (commons.Id): dataproc.projects.regions.clusters.patch
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Clusters
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Request to get the resource representation for a cluster in a project.
                displayName: Get
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Cluster
                (commons.Id): dataproc.projects.regions.clusters.get
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Clusters
              delete:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Request to delete a cluster in a project.
                displayName: Delete
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Operation
                (commons.Id): dataproc.projects.regions.clusters.delete
                (commons.LogicalStructure):
                - Projects
                - Regions
                - Clusters
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Request to create a cluster in a project.
              displayName: Create
              is:
              - hasParameters
              body:
                application/json: Cluster
              responses:
                200:
                  body:
                    application/json: Operation
              (commons.Id): dataproc.projects.regions.clusters.create
              (commons.LogicalStructure):
              - Projects
              - Regions
              - Clusters
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Request a list of all regions/{region}/clusters in a project.
              displayName: List
              is:
              - hasParameters
              queryParameters:
                pageSize?:
                  type: integer
                  format: int32
                  description: The standard List page size.
                pageToken?:
                  type: string
                  description: The standard List page token.
              responses:
                200:
                  body:
                    application/json: ListClustersResponse
              (commons.Id): dataproc.projects.regions.clusters.list
              (commons.LogicalStructure):
              - Projects
              - Regions
              - Clusters
  /{name}:cancel:
    uriParameters:
      name:
        type: string
        pattern: ^operations/.*$
        description: The name of the operation resource to be cancelled.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients may use [Operations.GetOperation] or other methods to check whether the cancellation succeeded or the operation completed despite cancellation.
      displayName: Cancel
      is:
      - hasParameters
      body:
        application/json: CancelOperationRequest
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): dataproc.operations.cancel
      (commons.LogicalStructure):
      - Operations
  /{name}:
    uriParameters:
      name:
        type: string
        pattern: ^operations/.*$
        description: The operation resource name.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      displayName: List
      is:
      - hasParameters
      - hasParameters
      queryParameters:
        filter?:
          type: string
          description: '[Required] A JSON object that contains filters for the list
            operation, in the format {"key1":"value1","key2":"value2", ..., }. Possible
            keys include project_id, cluster_name, and operation_state_matcher. If
            project_id is set, requests the list of operations that belong to the
            specified Google Cloud Platform project ID. This key is required. If cluster_name
            is set, requests the list of operations that were submitted to the specified
            cluster name. This key is optional. If operation_state_matcher is set,
            requests the list of operations that match one of the following status
            options: ALL, ACTIVE, or NON_ACTIVE.'
        pageSize?:
          type: integer
          format: int32
          description: The standard List page size.
        pageToken?:
          type: string
          description: The standard List page token.
      responses:
        200:
          body:
            application/json: ListOperationsResponse
      (commons.Id): dataproc.operations.list
      (commons.LogicalStructure):
      - Operations
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Deletes a long-running operation. It indicates the client is no longer interested in the operation result. It does not cancel the operation.
      displayName: Delete
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): dataproc.operations.delete
      (commons.LogicalStructure):
      - Operations
