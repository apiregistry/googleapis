#%RAML 1.0
title: Google Play EMM API
version: v1
baseUri: https://www.googleapis.com/androidenterprise/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/android/work/play/emm-api
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/android-32.png
  name: x32
- url: https://www.google.com/images/icons/product/android-16.png
  name: x16
(commons.Id): androidenterprise:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/androidenterprise
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Administrator:
    type: object
    properties:
      email?:
        type: string
        description: The administrator's email address.
    description: This represents an enterprise administrator who can manage the enterprise in the Google Play for Work Store.
  AdministratorWebToken:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#administratorWebToken
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#administratorWebToken".'
      token?:
        type: string
        description: An opaque token to be passed to the Play front-end to generate an iframe.
    description: A token authorizing an administrator to access an iframe.
  AdministratorWebTokenSpec:
    type: object
    properties:
      parent?:
        type: string
        description: The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at other URIs. This URI must be https.
      kind?:
        type: string
        default: androidenterprise#administratorWebTokenSpec
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#administratorWebTokenSpec".'
      permission?:
        type: array
        description: The list of permissions the admin is granted within the iframe. The admin will only be allowed to view an iframe if they have all of the permissions associated with it. The only valid value is "approveApps" that will allow the admin to access the iframe in "approve" mode.
        items:
          type: string
    description: Specification for a token used to generate iframes. The token specifies what data the admin is allowed to modify and the URI the iframe is allowed to communiate with.
  AppRestrictionsSchema:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#appRestrictionsSchema
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#appRestrictionsSchema".'
      restrictions?:
        type: array
        description: The set of restrictions that make up this schema.
        items: AppRestrictionsSchemaRestriction
    description: Represents the list of app restrictions available to be pre-configured for the product.
  AppRestrictionsSchemaChangeEvent:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") for which the app restriction schema changed. This field will always be present.
    description: An event generated when a new app version is uploaded to Google Play and its app restrictions schema changed. To fetch the app restrictions schema for an app, use Products.getAppRestrictionsSchema on the EMM API.
  AppRestrictionsSchemaRestriction:
    type: object
    properties:
      entry?:
        type: array
        description: For choice or multiselect restrictions, the list of possible entries' human-readable names.
        items:
          type: string
      restrictionType?:
        type: string
        description: The type of the restriction.
      defaultValue?: AppRestrictionsSchemaRestrictionRestrictionValue
      nestedRestriction?:
        type: array
        description: For bundle or bundleArray restrictions, the list of nested restrictions. A bundle restriction is always nested within a bundleArray restriction, and a bundleArray restriction is at most two levels deep.
        items: AppRestrictionsSchemaRestriction
      description?:
        type: string
        description: A longer description of the restriction, giving more detail of what it affects.
      entryValue?:
        type: array
        description: For choice or multiselect restrictions, the list of possible entries' machine-readable values. These values should be used in the configuration, either as a single string value for a choice restriction or in a stringArray for a multiselect restriction.
        items:
          type: string
      title?:
        type: string
        description: The name of the restriction.
      key?:
        type: string
        description: The unique key that the product uses to identify the restriction, e.g. "com.google.android.gm.fieldname".
    description: A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied.
  AppRestrictionsSchemaRestrictionRestrictionValue:
    type: object
    properties:
      valueMultiselect?:
        type: array
        description: The list of string values - this will only be present if type is multiselect.
        items:
          type: string
      valueString?:
        type: string
        description: The string value - this will be present for types string, choice and hidden.
      type?:
        type: string
        description: The type of the value being provided.
      valueInteger?:
        type: integer
        format: int32
        description: The integer value - this will only be present if type is integer.
      valueBool?:
        type: boolean
        description: The boolean value - this will only be present if type is bool.
    description: A typed value for the restriction.
  AppUpdateEvent:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") that was updated. This field will always be present.
    description: 'An event generated when a new version of an app is uploaded to Google
      Play. Notifications are sent for new public versions only: alpha, beta, or canary
      versions do not generate this event. To fetch up-to-date version history for
      an app, use Products.Get on the EMM API.'
  AppVersion:
    type: object
    properties:
      versionString?:
        type: string
        description: The string used in the Play Store by the app developer to identify the version. The string is not necessarily unique or localized (for example, the string could be "1.4").
      versionCode?:
        type: integer
        format: int32
        description: Unique increasing identifier for the app version.
    description: This represents a single version of the app.
  ApprovalUrlInfo:
    type: object
    properties:
      approvalUrl?:
        type: string
        description: A URL that displays a product's permissions and that can also be used to approve the product with the Products.approve call.
      kind?:
        type: string
        default: androidenterprise#approvalUrlInfo
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#approvalUrlInfo".'
    description: Information on an approval URL.
  AuthenticationToken:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#authenticationToken
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#authenticationToken".'
      token?:
        type: string
        description: The authentication token to be passed to the device policy client on the device where it can be used to provision the account for which this token was generated.
    description: An AuthenticationToken is used by the EMM's device policy client on a device to provision the given EMM-managed user on that device.
  Collection:
    type: object
    properties:
      productId?:
        type: array
        description: The IDs of the products in the collection, in the order in which they should be displayed.
        (extras.RequiredIn):
        - androidenterprise.collections.insert
        - androidenterprise.collections.update
        items:
          type: string
      visibility?:
        type: string
        description: |-
          Whether this collection is visible to all users, or only to the users that have been granted access through the "Collectionviewers" API. With the launch of the "setAvailableProductSet" API, this property should always be set to "viewersOnly", as the "allUsers" option will bypass the "availableProductSet" for all users within a domain.

          The "allUsers" setting is deprecated, and will be removed.
      kind?:
        type: string
        default: androidenterprise#collection
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#collection".'
      name?:
        type: string
        description: A user-friendly name for the collection (should be unique), e.g. "Accounting apps".
        (extras.RequiredIn):
        - androidenterprise.collections.insert
        - androidenterprise.collections.update
      collectionId?:
        type: string
        description: Arbitrary unique ID, allocated by the API on creation.
    description: |-
      A collection resource defines a named set of apps that is visible to a set of users in the Google Play Store app running on those users' managed devices. Those users can then install any of those apps if they wish (which will trigger creation of install and entitlement resources). A user cannot install an app on a managed device unless the app is listed in at least one collection that is visible to that user.

      Note that the API can be used to directly install an app regardless of whether it is in any collection - so an enterprise has a choice of either directly pushing apps to users, or allowing users to install apps if they want. Which is appropriate will depend on the enterprise's policies and the purpose of the apps concerned.
  CollectionViewersListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#collectionViewersListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#collectionViewersListResponse".'
      user?:
        type: array
        description: A user of an enterprise.
        items: User
    description: The user resources for the collection.
  CollectionsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#collectionsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#collectionsListResponse".'
      collection?:
        type: array
        description: An ordered collection of products which can be made visible on the Google Play Store to a selected group of users.
        items: Collection
    description: The collection resources for the enterprise.
  Device:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#device
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#device".'
      androidId?:
        type: string
        description: The Google Play Services Android ID for the device encoded as a lowercase hex string, e.g. "123456789abcdef0".
      managementType?:
        type: string
        description: "Identifies the extent to which the device is controlled by an\
          \ Android for Work EMM in various deployment configurations.\n\nPossible\
          \ values include: \n- \"managedDevice\", a device that has the EMM's device\
          \ policy controller (DPC) as the device owner, \n- \"managedProfile\", a\
          \ device that has a work profile managed by the DPC (DPC is profile owner)\
          \ in addition to a separate, personal profile that is unavailable to the\
          \ DPC, \n- \"containerApp\", a device running the Android for Work App.\
          \ The Android for Work App is managed by the DPC, \n- \"unmanagedProfile\"\
          , a device that has been allowed (by the domain's admin, using the Admin\
          \ Console to enable the privilege) to use Android for Work apps or Google\
          \ Apps for Work, but the profile is itself not owned by a DPC."
    description: |-
      A device resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.

      This collection cannot be modified via the API; it is automatically populated as devices are set up to be managed.
  DeviceState:
    type: object
    properties:
      accountState?:
        type: string
        description: The state of the Google account on the device. "enabled" indicates that the Google account on the device can be used to access Google services (including Google Play), while "disabled" means that it cannot. A new device is initially in the "disabled" state.
      kind?:
        type: string
        default: androidenterprise#deviceState
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#deviceState".'
    description: The state of a user's device, as accessed by the getState and setState methods on device resources.
  DevicesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#devicesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#devicesListResponse".'
      device?:
        type: array
        description: A managed device.
        items: Device
    description: The device resources for the user.
  Enterprise:
    type: object
    properties:
      administrator?:
        type: array
        description: Administrators of the enterprise. This is only supported for enterprises created via the EMM-initiated flow.
        items: Administrator
      kind?:
        type: string
        default: androidenterprise#enterprise
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#enterprise".'
      name?:
        type: string
        description: The name of the enterprise, for example, "Example, Inc".
      primaryDomain?:
        type: string
        description: The enterprise's primary domain, such as "example.com".
        (extras.RequiredIn):
        - androidenterprise.enterprises.insert
      id?:
        type: string
        description: The unique ID for the enterprise.
    description: "An Enterprises resource represents the binding between an EMM and\
      \ a specific organization. That binding can be instantiated in one of two different\
      \ ways using this API as follows: \n- For Google managed domain customers, the\
      \ process involves using Enterprises.enroll and Enterprises.setAccount (in conjunction\
      \ with artifacts obtained from the Admin console and the Google API Console)\
      \ and submitted to the EMM through a more-or-less manual process. \n- For Android\
      \ for Work Accounts customers, the process involves using Enterprises.generateSignupUrl\
      \ and Enterprises.completeSignup in conjunction with the Android for Work Sign-up\
      \ UI (Google-provided mechanism) to create the binding without manual steps.\
      \ As an EMM, you can support either or both approaches in your EMM console.\
      \ See Create an Enterprise for details."
  EnterpriseAccount:
    type: object
    properties:
      accountEmail?:
        type: string
        description: The email address of the service account.
      kind?:
        type: string
        default: androidenterprise#enterpriseAccount
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#enterpriseAccount".'
    description: A service account that can be used to authenticate as the enterprise to API calls that require such authentication.
  EnterprisesListResponse:
    type: object
    properties:
      enterprise?:
        type: array
        description: An enterprise.
        items: Enterprise
      kind?:
        type: string
        default: androidenterprise#enterprisesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#enterprisesListResponse".'
    description: The matching enterprise resources.
  EnterprisesSendTestPushNotificationResponse:
    type: object
    properties:
      messageId?:
        type: string
        description: The message ID of the test push notification that was sent.
      topicName?:
        type: string
        description: The name of the Cloud Pub/Sub topic to which notifications for this enterprise's enrolled account will be sent.
  Entitlement:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the entitlement, e.g. "free" for free apps. This is temporary, it will be replaced by the acquisition kind field of group licenses.
      productId?:
        type: string
        description: The ID of the product that the entitlement is for, e.g. "app:com.google.android.gm".
      kind?:
        type: string
        default: androidenterprise#entitlement
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#entitlement".'
    description: |-
      The existence of an entitlement resource means that a user has the right to use a particular app on any of their devices. This might be because the app is free or because they have been allocated a license to the app from a group license purchased by the enterprise.

      It should always be true that a user has an app installed on one of their devices only if they have an entitlement to it. So if an entitlement is deleted, the app will be uninstalled from all devices. Similarly if the user installs an app (and is permitted to do so), or the EMM triggers an install of the app, an entitlement to that app is automatically created. If this is impossible - e.g. the enterprise has not purchased sufficient licenses - then installation fails.

      Note that entitlements are always user specific, not device specific; a user may have an entitlement even though they have not installed the app anywhere. Once they have an entitlement they can install the app on multiple devices.

      The API can be used to create an entitlement. If the app is a free app, a group license for that app is created. If it's a paid app, creating the entitlement consumes one license; it remains consumed until the entitlement is removed. Optionally an installation of the app on all the user's managed devices can be triggered at the time the entitlement is created. An entitlement cannot be created for an app if the app requires permissions that the enterprise has not yet accepted.

      Entitlements for paid apps that are due to purchases by the user on a non-managed profile will have "userPurchase" as entitlement reason; those entitlements cannot be removed via the API.
  EntitlementsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#entitlementsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#entitlementsListResponse".'
      entitlement?:
        type: array
        description: An entitlement of a user to a product (e.g. an app). For example, a free app that they have installed, or a paid app that they have been allocated a license to.
        items: Entitlement
    description: The entitlement resources for the user.
  GroupLicense:
    type: object
    properties:
      numProvisioned?:
        type: integer
        format: int32
        description: The total number of provisioned licenses for this product. Returned by read operations, but ignored in write operations.
      numPurchased?:
        type: integer
        format: int32
        description: The number of purchased licenses (possibly in multiple purchases). If this field is omitted then there is no limit on the number of licenses that can be provisioned (e.g. if the acquisition kind is "free").
      productId?:
        type: string
        description: The ID of the product that the license is for, e.g. "app:com.google.android.gm".
      approval?:
        type: string
        description: Whether the product to which this group license relates is currently approved by the enterprise, as either "approved" or "unapproved". Products are approved when a group license is first created, but this approval may be revoked by an enterprise admin via Google Play. Unapproved products will not be visible to end users in collections and new entitlements to them should not normally be created.
      kind?:
        type: string
        default: androidenterprise#groupLicense
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#groupLicense".'
      acquisitionKind?:
        type: string
        description: How this group license was acquired. "bulkPurchase" means that this group license object was created because the enterprise purchased licenses for this product; this is "free" otherwise (for free products).
    description: |-
      A group license object indicates a product that an enterprise admin has approved for use in the enterprise. The product may be free or paid. For free products, a group license object is created in these cases: if the enterprise admin approves a product in Google Play, if the product is added to a collection, or if an entitlement for the product is created for a user via the API. For paid products, a group license object is only created as part of the first bulk purchase of that product in Google Play by the enterprise admin.

      The API can be used to query group licenses; the available information includes the total number of licenses purchased (for paid products) and the total number of licenses that have been provisioned, that is, the total number of user entitlements in existence for the product.

      Group license objects are never deleted. If, for example, a free app is added to a collection and then removed, the group license will remain, allowing the enterprise admin to keep track of any remaining entitlements. An enterprise admin may indicate they are no longer interested in the group license by marking it as unapproved in Google Play.
  GroupLicenseUsersListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#groupLicenseUsersListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#groupLicenseUsersListResponse".'
      user?:
        type: array
        description: A user of an enterprise.
        items: User
    description: The user resources for the group license.
  GroupLicensesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#groupLicensesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#groupLicensesListResponse".'
      groupLicense?:
        type: array
        description: A group license for a product approved for use in the enterprise.
        items: GroupLicense
    description: The grouplicense resources for the enterprise.
  Install:
    type: object
    properties:
      installState?:
        type: string
        description: Install state. The state "installPending" means that an install request has recently been made and download to the device is in progress. The state "installed" means that the app has been installed. This field is read-only.
      productId?:
        type: string
        description: The ID of the product that the install is for, e.g. "app:com.google.android.gm".
      kind?:
        type: string
        default: androidenterprise#install
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#install".'
      versionCode?:
        type: integer
        format: int32
        description: The version of the installed product. Guaranteed to be set only if the install state is "installed".
    description: |-
      The existence of an install resource indicates that an app is installed on a particular device (or that an install is pending).

      The API can be used to create an install resource using the update method. This triggers the actual install of the app on the device. If the user does not already have an entitlement for the app then an attempt is made to create one. If this fails (e.g. because the app is not free and there is no available license) then the creation of the install fails.

      The API can also be used to update an installed app. If the update method is used on an existing install then the app will be updated to the latest available version.

      Note that it is not possible to force the installation of a specific version of an app; the version code is read-only.

      If a user installs an app themselves (as permitted by the enterprise), then again an install resource and possibly an entitlement resource are automatically created.

      The API can also be used to delete an install resource, which triggers the removal of the app from the device. Note that deleting an install does not automatically remove the corresponding entitlement, even if there are no remaining installs. The install resource will also be deleted if the user uninstalls the app themselves.
  InstallFailureEvent:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") for which the install failure event occured. This field will always be present.
      failureDetails?:
        type: string
        description: Additional details on the failure if applicable.
      failureReason?:
        type: string
        description: The reason for the installation failure. This field will always be present.
      deviceId?:
        type: string
        description: The Android ID of the device. This field will always be present.
      userId?:
        type: string
        description: The ID of the user. This field will always be present.
    description: An event generated when an app installation failed on a device
  InstallsListResponse:
    type: object
    properties:
      install?:
        type: array
        description: An installation of an app for a user on a specific device. The existence of an install implies that the user must have an entitlement to the app.
        items: Install
      kind?:
        type: string
        default: androidenterprise#installsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#installsListResponse".'
    description: The install resources for the device.
  LocalizedText:
    type: object
    properties:
      text?:
        type: string
        description: The text localized in the associated locale.
      locale?:
        type: string
        description: The BCP47 tag for a locale. (e.g. "en-US", "de").
    description: A localized string with its locale.
  ManagedConfiguration:
    type: object
    properties:
      productId?:
        type: string
        description: The ID of the product that the managed configuration is for, e.g. "app:com.google.android.gm".
      kind?:
        type: string
        default: androidenterprise#managedConfiguration
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#managedConfiguration".'
      managedProperty?:
        type: array
        description: The set of managed properties for this configuration.
        items: ManagedProperty
    description: A managed configuration resource contains the set of managed properties that have been configured for an Android app. The app's developer would have defined configurable properties in the managed configurations schema.
  ManagedConfigurationsForDeviceListResponse:
    type: object
    properties:
      managedConfigurationForDevice?:
        type: array
        description: A managed configuration for an app on a specific device.
        items: ManagedConfiguration
      kind?:
        type: string
        default: androidenterprise#managedConfigurationsForDeviceListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#managedConfigurationsForDeviceListResponse".'
    description: The managed configuration resources for the device.
  ManagedConfigurationsForUserListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#managedConfigurationsForUserListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#managedConfigurationsForUserListResponse".'
      managedConfigurationForUser?:
        type: array
        description: A managed configuration for an app for a specific user.
        items: ManagedConfiguration
    description: The managed configuration resources for the user.
  ManagedProperty:
    type: object
    properties:
      valueBundle?: ManagedPropertyBundle
      valueStringArray?:
        type: array
        description: The list of string values - this will only be present if type of the property is multiselect.
        items:
          type: string
      valueString?:
        type: string
        description: The string value - this will only be present if type of the property is string, choice or hidden.
      valueBundleArray?:
        type: array
        description: The list of bundles of properties - this will only be present if type of the property is bundle_array.
        items: ManagedPropertyBundle
      valueInteger?:
        type: integer
        format: int32
        description: The integer value - this will only be present if type of the property is integer.
      key?:
        type: string
        description: The unique key that identifies the property.
      valueBool?:
        type: boolean
        description: The boolean value - this will only be present if type of the property is bool.
    description: A managed property of a managed configuration. The property must match one of the properties in the app restrictions schema of the product. Exactly one of the value fields must be populated, and it must match the property's type in the app restrictions schema.
  ManagedPropertyBundle:
    type: object
    properties:
      managedProperty?:
        type: array
        description: The list of managed properties.
        items: ManagedProperty
    description: A bundle of managed properties.
  NewPermissionsEvent:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") for which new permissions were added. This field will always be present.
      approvedPermissions?:
        type: array
        description: The set of permissions that the enterprise admin has already approved for this application. Use Permissions.Get on the EMM API to retrieve details about these permissions.
        items:
          type: string
      requestedPermissions?:
        type: array
        description: The set of permissions that the app is currently requesting. Use Permissions.Get on the EMM API to retrieve details about these permissions.
        items:
          type: string
    description: An event generated when new permissions are added to an app.
  Notification:
    type: object
    properties:
      newPermissionsEvent?: NewPermissionsEvent
      appUpdateEvent?: AppUpdateEvent
      installFailureEvent?: InstallFailureEvent
      productAvailabilityChangeEvent?: ProductAvailabilityChangeEvent
      timestampMillis?:
        type: integer
        format: int64
        description: The time when the notification was published in milliseconds since 1970-01-01T00:00:00Z. This will always be present.
      productApprovalEvent?: ProductApprovalEvent
      appRestrictionsSchemaChangeEvent?: AppRestrictionsSchemaChangeEvent
      enterpriseId?:
        type: string
        description: The ID of the enterprise for which the notification is sent. This will always be present.
    description: A notification of one event relating to an enterprise.
  NotificationSet:
    type: object
    properties:
      notification?:
        type: array
        description: The notifications received, or empty if no notifications are present.
        items: Notification
      kind?:
        type: string
        default: androidenterprise#notificationSet
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#notificationSet".'
      notificationSetId?:
        type: string
        description: The notification set ID, required to mark the notification as received with the Enterprises.AcknowledgeNotification API. This will be omitted if no notifications are present.
    description: A resource returned by the PullNotificationSet API, which contains a collection of notifications for enterprises associated with the service account authenticated for the request.
  PageInfo:
    type: object
    properties:
      startIndex?:
        type: integer
        format: int32
      totalResults?:
        type: integer
        format: int32
      resultPerPage?:
        type: integer
        format: int32
  Permission:
    type: object
    properties:
      permissionId?:
        type: string
        description: An opaque string uniquely identifying the permission.
      kind?:
        type: string
        default: androidenterprise#permission
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#permission".'
      name?:
        type: string
        description: The name of the permission.
      description?:
        type: string
        description: A longer description of the permissions giving more details of what it affects.
    description: |-
      A permission represents some extra capability, to be granted to an Android app, which requires explicit consent. An enterprise admin must consent to these permissions on behalf of their users before an entitlement for the app can be created.

      The permissions collection is read-only. The information provided for each permission (localized name and description) is intended to be used in the EMM user interface when obtaining consent from the enterprise.
  Product:
    type: object
    properties:
      appVersion?:
        type: array
        description: App versions currently available for this product. The returned list contains only public versions. Alpha and beta versions are not included.
        items: AppVersion
      detailsUrl?:
        type: string
        description: A link to the (consumer) Google Play details page for the product.
      productId?:
        type: string
        description: A string of the form app:<package name>. For example, app:com.google.android.gm represents the Gmail app.
      authorName?:
        type: string
        description: The name of the author of the product (e.g. the app developer).
      kind?:
        type: string
        default: androidenterprise#product
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#product".'
      requiresContainerApp?:
        type: boolean
        description: Whether this app can only be installed on devices using the Android for Work container app.
      productPricing?:
        type: string
        description: Whether this product is free, free with in-app purchases, or paid. If the pricing is unknown, this means the product is not generally available anymore (even though it might still be available to people who own it).
      smallIconUrl?:
        type: string
        description: A link to a smaller image that can be used as an icon for the product. This image is suitable for use at up to 128px x 128px.
      iconUrl?:
        type: string
        description: A link to an image that can be used as an icon for the product. This image is suitable for use at up to 512px x 512px.
      workDetailsUrl?:
        type: string
        description: A link to the Google Play for Work details page for the product, for use by an Enterprise administrator.
      distributionChannel?:
        type: string
        description: How and to whom the package is made available. The value publicGoogleHosted means that the package is available through the Play Store and not restricted to a specific enterprise. The value privateGoogleHosted means that the package is a private app (restricted to an enterprise) but hosted by Google. The value privateSelfHosted means that the package is a private app (restricted to an enterprise) and is privately hosted.
      title?:
        type: string
        description: The name of the product.
    description: |-
      A Products resource represents an app in the Google Play Store that is available to at least some users in the enterprise. (Some apps are restricted to a single enterprise, and no information about them is made available outside that enterprise.)

      The information provided for each product (localized name, icon, link to the full Google Play details page) is intended to allow a basic representation of the product within an EMM user interface.
  ProductApprovalEvent:
    type: object
    properties:
      approved?:
        type: string
        description: Whether the product was approved or unapproved. This field will always be present.
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") for which the approval status has changed. This field will always be present.
    description: An event generated when a product's approval status is changed.
  ProductAvailabilityChangeEvent:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product (e.g. "app:com.google.android.gm") for which the product availability changed. This field will always be present.
      availabilityStatus?:
        type: string
        description: The new state of the product. This field will always be present.
    description: An event generated whenever a product's availability changes.
  ProductPermission:
    type: object
    properties:
      permissionId?:
        type: string
        description: An opaque string uniquely identifying the permission.
      state?:
        type: string
        description: Whether the permission has been accepted or not.
    description: |-
      A product permissions resource represents the set of permissions required by a specific app and whether or not they have been accepted by an enterprise admin.

      The API can be used to read the set of permissions, and also to update the set to indicate that permissions have been accepted.
  ProductPermissions:
    type: object
    properties:
      productId?:
        type: string
        description: The ID of the app that the permissions relate to, e.g. "app:com.google.android.gm".
      kind?:
        type: string
        default: androidenterprise#productPermissions
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#productPermissions".'
      permission?:
        type: array
        description: The permissions required by the app.
        (extras.RequiredIn):
        - androidenterprise.products.updatePermissions
        items: ProductPermission
    description: Information about the permissions required by a specific app and whether they have been accepted by the enterprise.
  ProductSet:
    type: object
    properties:
      productId?:
        type: array
        description: The list of product IDs making up the set of products.
        items:
          type: string
      kind?:
        type: string
        default: androidenterprise#productSet
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#productSet".'
      productSetBehavior?:
        type: string
        description: The interpretation of this product set. "unknown" should never be sent and ignored if received. "whitelist" means that this product set constitutes a whitelist. "includeAll" means that all products are accessible (the value of the productId field is therefore ignored). If a value is not supplied, it is interpreted to be "whitelist" for backwards compatibility.
    description: A set of products.
  ProductsApproveRequest:
    type: object
    properties:
      approvalUrlInfo?: ApprovalUrlInfo
  ProductsGenerateApprovalUrlResponse:
    type: object
    properties:
      url?:
        type: string
        description: A URL that can be rendered in an iframe to display the permissions (if any) of a product. This URL can be used to approve the product only once and only within 24 hours of being generated, using the Products.approve call. If the product is currently unapproved and has no permissions, this URL will point to an empty page. If the product is currently approved, a URL will only be generated if that product has added permissions since it was last approved, and the URL will only display those new permissions that have not yet been accepted.
  ProductsListResponse:
    type: object
    properties:
      product?:
        type: array
        description: Information about a product (e.g. an app) in the Google Play Store, for display to an enterprise admin.
        items: Product
      tokenPagination?: TokenPagination
      kind?:
        type: string
        default: androidenterprise#productsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#productsListResponse".'
      pageInfo?: PageInfo
    description: The matching products.
  ServiceAccount:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#serviceAccount
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#serviceAccount".'
      name?:
        type: string
        description: The account name of the service account, in the form of an email address. Assigned by the server.
      key?: ServiceAccountKey
    description: A service account identity, including the name and credentials that can be used to authenticate as the service account.
  ServiceAccountKey:
    type: object
    properties:
      data?:
        type: string
        description: The body of the private key credentials file, in string format. This is only populated when the ServiceAccountKey is created, and is not stored by Google.
      kind?:
        type: string
        default: androidenterprise#serviceAccountKey
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#serviceAccountKey".'
      id?:
        type: string
        description: An opaque, unique identifier for this ServiceAccountKey. Assigned by the server.
      type?:
        type: string
        description: The file format of the generated key data.
        (extras.RequiredIn):
        - androidenterprise.serviceaccountkeys.insert
    description: Credentials that can be used to authenticate as a service account.
  ServiceAccountKeysListResponse:
    type: object
    properties:
      serviceAccountKey?:
        type: array
        description: The service account credentials.
        items: ServiceAccountKey
  SignupInfo:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#signupInfo
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#signupInfo".'
      completionToken?:
        type: string
        description: An opaque token that will be required, along with the Enterprise Token, for obtaining the enterprise resource from CompleteSignup.
      url?:
        type: string
        description: A URL under which the Admin can sign up for an enterprise. The page pointed to cannot be rendered in an iframe.
    description: A resource returned by the GenerateSignupUrl API, which contains the Signup URL and Completion Token.
  StoreCluster:
    type: object
    properties:
      productId?:
        type: array
        description: List of products in the order they are displayed in the cluster. There should not be duplicates within a cluster.
        items:
          type: string
      kind?:
        type: string
        default: androidenterprise#storeCluster
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#storeCluster".'
      name?:
        type: array
        description: Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.
        items: LocalizedText
      id?:
        type: string
        description: Unique ID of this cluster. Assigned by the server. Immutable once assigned.
      orderInPage?:
        type: string
        description: |-
          String (US-ASCII only) used to determine order of this cluster within the parent page's elements. Page elements are sorted in lexicographic order of this field. Duplicated values are allowed, but ordering between elements with duplicate order is undefined.

          The value of this field is never visible to a user, it is used solely for the purpose of defining an ordering. Maximum length is 256 characters.
    description: Definition of a Google Play for Work store cluster, a list of products displayed as part of a store page.
  StoreLayout:
    type: object
    properties:
      storeLayoutType?:
        type: string
        description: Sets a store layout type. If set to "custom", "homepageId" must be specified. If set to "basic", the layout will consist of all approved apps accessible by the user, split in pages of 100 each; in this case, "homepageId" must not be specified. The "basic" setting takes precedence over any existing collections setup for this enterprise (if any). Should the enterprise use collectionViewers for controlling access rights, these will still be respected.
      homepageId?:
        type: string
        description: |-
          The ID of the store page to be used as the homepage. The homepage will be used as the first page shown in the Google Play for Work store.

          If a homepage has not been set, the Play store shown on devices will be empty. Not specifying a homepage on a store layout effectively empties the store.

          If there exists at least one page, this field must be set to the ID of a valid page.
      kind?:
        type: string
        default: androidenterprise#storeLayout
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#storeLayout".'
    description: General setting for the Google Play for Work store layout, currently only specifying the page to display the first time the store is opened.
  StoreLayoutClustersListResponse:
    type: object
    properties:
      cluster?:
        type: array
        description: A store cluster of an enterprise.
        items: StoreCluster
      kind?:
        type: string
        default: androidenterprise#storeLayoutClustersListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#storeLayoutClustersListResponse".'
    description: The store page resources for the enterprise.
  StoreLayoutPagesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#storeLayoutPagesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#storeLayoutPagesListResponse".'
      page?:
        type: array
        description: A store page of an enterprise.
        items: StorePage
    description: The store page resources for the enterprise.
  StorePage:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#storePage
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#storePage".'
      link?:
        type: array
        description: |-
          Ordered list of pages a user should be able to reach from this page. The pages must exist, must not be this page, and once a link is created the page linked to cannot be deleted until all links to it are removed. It is recommended that the basic pages are created first, before adding the links between pages.

          No attempt is made to verify that all pages are reachable from the homepage.
        items:
          type: string
      name?:
        type: array
        description: Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.
        items: LocalizedText
      id?:
        type: string
        description: Unique ID of this page. Assigned by the server. Immutable once assigned.
    description: Definition of a Google Play for Work store page, made of a localized name and links to other pages. A page also contains clusters defined as a subcollection.
  TokenPagination:
    type: object
    properties:
      nextPageToken?:
        type: string
      previousPageToken?:
        type: string
  User:
    type: object
    properties:
      displayName?:
        type: string
        description: The name that will appear in user interfaces. Setting this property is optional when creating EMM-managed users. If you do set this property, use something generic about the organization (such as "Example, Inc.") or your name (as EMM). Not used for Google-managed user accounts.
      kind?:
        type: string
        default: androidenterprise#user
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#user".'
      accountType?:
        type: string
        description: The type of account that this user represents. A userAccount can be installed on multiple devices, but a deviceAccount is specific to a single device. An EMM-managed user (emmManaged) can be either type (userAccount, deviceAccount), but a Google-managed user (googleManaged) is always a userAccount.
        (extras.RequiredIn):
        - androidenterprise.users.insert
      accountIdentifier?:
        type: string
        description: A unique identifier you create for this user, such as "user342" or "asset#44418". Do not use personally identifiable information (PII) for this property. Must always be set for EMM-managed users. Not set for Google-managed users.
        (extras.RequiredIn):
        - androidenterprise.users.insert
      id?:
        type: string
        description: The unique ID for the user.
      primaryEmail?:
        type: string
        description: The user's primary email address, for example, "jsmith@example.com". Will always be set for Google managed users and not set for EMM managed users.
      managementType?:
        type: string
        description: The entity that manages the user. With googleManaged users, the source of truth is Google so EMMs have to make sure a Google Account exists for the user. With emmManaged users, the EMM is in charge.
    description: "A Users resource represents an account associated with an enterprise.\
      \ The account may be specific to a device or to an individual user (who can\
      \ then use the account across multiple devices). The account may provide access\
      \ to Google Play for Work only, or to other Google services, depending on the\
      \ identity model: \n- Google managed domain identity model requires synchronization\
      \ to Google account sources (via primaryEmail). \n- Android for Work Accounts\
      \ identity model provides a dynamic means for enterprises to create user or\
      \ device accounts as needed. These accounts provide access to Google Play for\
      \ Work only."
  UserToken:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#userToken
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#userToken".'
      userId?:
        type: string
        description: The unique ID for the user.
      token?:
        type: string
        description: The token (activation code) to be entered by the user. This consists of a sequence of decimal digits. Note that the leading digit may be 0.
    description: A UserToken is used by a user when setting up a managed device or profile with their work account on a device. When the user enters their email address and token (activation code) the appropriate EMM app can be automatically downloaded.
  UsersListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: androidenterprise#usersListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "androidenterprise#usersListResponse".'
      user?:
        type: array
        description: A user of an enterprise.
        items: User
    description: The matching user resources.
/enterprises:
  /{enterpriseId}:
    uriParameters:
      enterpriseId:
        type: string
        description: The ID of the enterprise.
    /users:
      /{userId}:
        uriParameters:
          userId:
            type: string
            description: The ID of the user.
        /entitlements:
          /{entitlementId}:
            uriParameters:
              entitlementId:
                type: string
                description: The ID of the entitlement (a product ID), e.g. "app:com.google.android.gm".
            patch:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds or updates an entitlement to an app for a user. This method supports patch semantics.
              displayName: Patch
              is:
              - hasParameters
              queryParameters:
                install?:
                  type: boolean
                  description: Set to true to also install the product on all the user's devices where possible. Failure to install on one or more devices will not prevent this operation from returning successfully, as long as the entitlement was successfully assigned to the user.
              body:
                application/json: Entitlement
              responses:
                200:
                  body:
                    application/json: Entitlement
              (commons.Id): androidenterprise.entitlements.patch
              (commons.LogicalStructure):
              - Entitlements
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Retrieves details of an entitlement.
              displayName: Get
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: Entitlement
              (commons.Id): androidenterprise.entitlements.get
              (commons.LogicalStructure):
              - Entitlements
            put:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds or updates an entitlement to an app for a user.
              displayName: Update
              is:
              - hasParameters
              queryParameters:
                install?:
                  type: boolean
                  description: Set to true to also install the product on all the user's devices where possible. Failure to install on one or more devices will not prevent this operation from returning successfully, as long as the entitlement was successfully assigned to the user.
              body:
                application/json: Entitlement
              responses:
                200:
                  body:
                    application/json: Entitlement
              (commons.Id): androidenterprise.entitlements.update
              (commons.LogicalStructure):
              - Entitlements
            delete:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Removes an entitlement to an app for a user and uninstalls it.
              displayName: Delete
              is:
              - hasParameters
              (commons.Id): androidenterprise.entitlements.delete
              (commons.LogicalStructure):
              - Entitlements
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: List of all entitlements for the specified user. Only the ID is set.
            displayName: List
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: EntitlementsListResponse
            (commons.Id): androidenterprise.entitlements.list
            (commons.LogicalStructure):
            - Entitlements
        /devices:
          /{deviceId}:
            uriParameters:
              deviceId:
                type: string
                description: The ID of the device.
            /state:
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Retrieves whether a device's access to Google services is enabled or disabled. The device state takes effect only if enforcing EMM policies on Android devices is enabled in the Google Admin Console. Otherwise, the device state is ignored and all devices are allowed access to Google services. This is only supported for Google-managed users.
                displayName: Get State
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: DeviceState
                (commons.Id): androidenterprise.devices.getState
                (commons.LogicalStructure):
                - Devices
              put:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Sets whether a device's access to Google services is enabled or disabled. The device state takes effect only if enforcing EMM policies on Android devices is enabled in the Google Admin Console. Otherwise, the device state is ignored and all devices are allowed access to Google services. This is only supported for Google-managed users.
                displayName: Set State
                is:
                - hasParameters
                body:
                  application/json: DeviceState
                responses:
                  200:
                    body:
                      application/json: DeviceState
                (commons.Id): androidenterprise.devices.setState
                (commons.LogicalStructure):
                - Devices
            /installs:
              /{installId}:
                uriParameters:
                  installId:
                    type: string
                    description: The ID of the product represented by the install, e.g. "app:com.google.android.gm".
                patch:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Requests to install the latest version of an app to a device. If the app is already installed then it is updated to the latest version if necessary. This method supports patch semantics.
                  displayName: Patch
                  is:
                  - hasParameters
                  body:
                    application/json: Install
                  responses:
                    200:
                      body:
                        application/json: Install
                  (commons.Id): androidenterprise.installs.patch
                  (commons.LogicalStructure):
                  - Installs
                get:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Retrieves details of an installation of an app on a device.
                  displayName: Get
                  is:
                  - hasParameters
                  responses:
                    200:
                      body:
                        application/json: Install
                  (commons.Id): androidenterprise.installs.get
                  (commons.LogicalStructure):
                  - Installs
                put:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Requests to install the latest version of an app to a device. If the app is already installed then it is updated to the latest version if necessary.
                  displayName: Update
                  is:
                  - hasParameters
                  body:
                    application/json: Install
                  responses:
                    200:
                      body:
                        application/json: Install
                  (commons.Id): androidenterprise.installs.update
                  (commons.LogicalStructure):
                  - Installs
                delete:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Requests to remove an app from a device. A call to get or list will still show the app as installed on the device until it is actually removed.
                  displayName: Delete
                  is:
                  - hasParameters
                  (commons.Id): androidenterprise.installs.delete
                  (commons.LogicalStructure):
                  - Installs
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Retrieves the details of all apps installed on the specified device.
                displayName: List
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: InstallsListResponse
                (commons.Id): androidenterprise.installs.list
                (commons.LogicalStructure):
                - Installs
            /managedConfigurationsForDevice:
              /{managedConfigurationForDeviceId}:
                uriParameters:
                  managedConfigurationForDeviceId:
                    type: string
                    description: The ID of the managed configuration (a product ID), e.g. "app:com.google.android.gm".
                patch:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Adds or updates a per-device managed configuration for an app for the specified device. This method supports patch semantics.
                  displayName: Patch
                  is:
                  - hasParameters
                  body:
                    application/json: ManagedConfiguration
                  responses:
                    200:
                      body:
                        application/json: ManagedConfiguration
                  (commons.Id): androidenterprise.managedconfigurationsfordevice.patch
                  (commons.LogicalStructure):
                  - Managedconfigurationsfordevice
                get:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Retrieves details of a per-device managed configuration.
                  displayName: Get
                  is:
                  - hasParameters
                  responses:
                    200:
                      body:
                        application/json: ManagedConfiguration
                  (commons.Id): androidenterprise.managedconfigurationsfordevice.get
                  (commons.LogicalStructure):
                  - Managedconfigurationsfordevice
                put:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Adds or updates a per-device managed configuration for an app for the specified device.
                  displayName: Update
                  is:
                  - hasParameters
                  body:
                    application/json: ManagedConfiguration
                  responses:
                    200:
                      body:
                        application/json: ManagedConfiguration
                  (commons.Id): androidenterprise.managedconfigurationsfordevice.update
                  (commons.LogicalStructure):
                  - Managedconfigurationsfordevice
                delete:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/androidenterprise
                  description: Removes a per-device managed configuration for an app for the specified device.
                  displayName: Delete
                  is:
                  - hasParameters
                  (commons.Id): androidenterprise.managedconfigurationsfordevice.delete
                  (commons.LogicalStructure):
                  - Managedconfigurationsfordevice
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Lists all the per-device managed configurations for the specified device. Only the ID is set.
                displayName: List
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: ManagedConfigurationsForDeviceListResponse
                (commons.Id): androidenterprise.managedconfigurationsfordevice.list
                (commons.LogicalStructure):
                - Managedconfigurationsfordevice
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Retrieves the details of a device.
              displayName: Get
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: Device
              (commons.Id): androidenterprise.devices.get
              (commons.LogicalStructure):
              - Devices
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the IDs of all of a user's devices.
            displayName: List
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: DevicesListResponse
            (commons.Id): androidenterprise.devices.list
            (commons.LogicalStructure):
            - Devices
        /token:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: |-
              Generates a token (activation code) to allow this user to configure their work account in the Android Setup Wizard. Revokes any previously generated token.

              This call only works with Google managed accounts.
            displayName: Generate Token
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: UserToken
            (commons.Id): androidenterprise.users.generateToken
            (commons.LogicalStructure):
            - Users
          delete:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Revokes a previously generated token (activation code) for the user.
            displayName: Revoke Token
            is:
            - hasParameters
            (commons.Id): androidenterprise.users.revokeToken
            (commons.LogicalStructure):
            - Users
        /availableProductSet:
          put:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Modifies the set of products a user is entitled to access.
            displayName: Set Available Product Set
            is:
            - hasParameters
            body:
              application/json: ProductSet
            responses:
              200:
                body:
                  application/json: ProductSet
            (commons.Id): androidenterprise.users.setAvailableProductSet
            (commons.LogicalStructure):
            - Users
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the set of products a user is entitled to access.
            displayName: Get Available Product Set
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: ProductSet
            (commons.Id): androidenterprise.users.getAvailableProductSet
            (commons.LogicalStructure):
            - Users
        /authenticationToken:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: |-
              Generates an authentication token which the device policy client can use to provision the given EMM-managed user account on a device. The generated token is single-use and expires after a few minutes.

              This call only works with EMM-managed accounts.
            displayName: Generate Authentication Token
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: AuthenticationToken
            (commons.Id): androidenterprise.users.generateAuthenticationToken
            (commons.LogicalStructure):
            - Users
        /managedConfigurationsForUser:
          /{managedConfigurationForUserId}:
            uriParameters:
              managedConfigurationForUserId:
                type: string
                description: The ID of the managed configuration (a product ID), e.g. "app:com.google.android.gm".
            patch:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds or updates a per-user managed configuration for an app for the specified user. This method supports patch semantics.
              displayName: Patch
              is:
              - hasParameters
              body:
                application/json: ManagedConfiguration
              responses:
                200:
                  body:
                    application/json: ManagedConfiguration
              (commons.Id): androidenterprise.managedconfigurationsforuser.patch
              (commons.LogicalStructure):
              - Managedconfigurationsforuser
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Retrieves details of a per-user managed configuration for an app for the specified user.
              displayName: Get
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: ManagedConfiguration
              (commons.Id): androidenterprise.managedconfigurationsforuser.get
              (commons.LogicalStructure):
              - Managedconfigurationsforuser
            put:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds or updates a per-user managed configuration for an app for the specified user.
              displayName: Update
              is:
              - hasParameters
              body:
                application/json: ManagedConfiguration
              responses:
                200:
                  body:
                    application/json: ManagedConfiguration
              (commons.Id): androidenterprise.managedconfigurationsforuser.update
              (commons.LogicalStructure):
              - Managedconfigurationsforuser
            delete:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Removes a per-user managed configuration for an app for the specified user.
              displayName: Delete
              is:
              - hasParameters
              (commons.Id): androidenterprise.managedconfigurationsforuser.delete
              (commons.LogicalStructure):
              - Managedconfigurationsforuser
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Lists all the per-user managed configurations for the specified user. Only the ID is set.
            displayName: List
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: ManagedConfigurationsForUserListResponse
            (commons.Id): androidenterprise.managedconfigurationsforuser.list
            (commons.LogicalStructure):
            - Managedconfigurationsforuser
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: |-
            Updates the details of an EMM-managed user.

            Can be used with EMM-managed users only (not Google managed users). Pass the new details in the Users resource in the request body. Only the displayName field can be changed. Other fields must either be unset or have the currently active value. This method supports patch semantics.
          displayName: Patch
          is:
          - hasParameters
          body:
            application/json: User
          responses:
            200:
              body:
                application/json: User
          (commons.Id): androidenterprise.users.patch
          (commons.LogicalStructure):
          - Users
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Retrieves a user's details.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: User
          (commons.Id): androidenterprise.users.get
          (commons.LogicalStructure):
          - Users
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: |-
            Updates the details of an EMM-managed user.

            Can be used with EMM-managed users only (not Google managed users). Pass the new details in the Users resource in the request body. Only the displayName field can be changed. Other fields must either be unset or have the currently active value.
          displayName: Update
          is:
          - hasParameters
          body:
            application/json: User
          responses:
            200:
              body:
                application/json: User
          (commons.Id): androidenterprise.users.update
          (commons.LogicalStructure):
          - Users
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Deleted an EMM-managed user.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): androidenterprise.users.delete
          (commons.LogicalStructure):
          - Users
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: |-
          Creates a new EMM-managed user.

          The Users resource passed in the body of the request should include an accountIdentifier and an accountType.
          If a corresponding user already exists with the same account identifier, the user will be updated with the resource. In this case only the displayName field can be changed.
        displayName: Insert
        is:
        - hasParameters
        body:
          application/json: User
        responses:
          200:
            body:
              application/json: User
        (commons.Id): androidenterprise.users.insert
        (commons.LogicalStructure):
        - Users
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Looks up a user by primary email address. This is only supported for Google-managed users. Lookup of the id is not needed for EMM-managed users because the id is already returned in the result of the Users.insert call.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          email:
            type: string
            description: The exact primary email address of the user to look up.
        responses:
          200:
            body:
              application/json: UsersListResponse
        (commons.Id): androidenterprise.users.list
        (commons.LogicalStructure):
        - Users
    /storeLayout:
      /pages:
        /{pageId}:
          uriParameters:
            pageId:
              type: string
              description: The ID of the page.
          /clusters:
            /{clusterId}:
              uriParameters:
                clusterId:
                  type: string
                  description: The ID of the cluster.
              patch:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Updates a cluster. This method supports patch semantics.
                displayName: Patch
                is:
                - hasParameters
                body:
                  application/json: StoreCluster
                responses:
                  200:
                    body:
                      application/json: StoreCluster
                (commons.Id): androidenterprise.storelayoutclusters.patch
                (commons.LogicalStructure):
                - Storelayoutclusters
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Retrieves details of a cluster.
                displayName: Get
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: StoreCluster
                (commons.Id): androidenterprise.storelayoutclusters.get
                (commons.LogicalStructure):
                - Storelayoutclusters
              put:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Updates a cluster.
                displayName: Update
                is:
                - hasParameters
                body:
                  application/json: StoreCluster
                responses:
                  200:
                    body:
                      application/json: StoreCluster
                (commons.Id): androidenterprise.storelayoutclusters.update
                (commons.LogicalStructure):
                - Storelayoutclusters
              delete:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/androidenterprise
                description: Deletes a cluster.
                displayName: Delete
                is:
                - hasParameters
                (commons.Id): androidenterprise.storelayoutclusters.delete
                (commons.LogicalStructure):
                - Storelayoutclusters
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Inserts a new cluster in a page.
              displayName: Insert
              is:
              - hasParameters
              body:
                application/json: StoreCluster
              responses:
                200:
                  body:
                    application/json: StoreCluster
              (commons.Id): androidenterprise.storelayoutclusters.insert
              (commons.LogicalStructure):
              - Storelayoutclusters
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Retrieves the details of all clusters on the specified page.
              displayName: List
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: StoreLayoutClustersListResponse
              (commons.Id): androidenterprise.storelayoutclusters.list
              (commons.LogicalStructure):
              - Storelayoutclusters
          patch:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Updates the content of a store page. This method supports patch semantics.
            displayName: Patch
            is:
            - hasParameters
            body:
              application/json: StorePage
            responses:
              200:
                body:
                  application/json: StorePage
            (commons.Id): androidenterprise.storelayoutpages.patch
            (commons.LogicalStructure):
            - Storelayoutpages
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves details of a store page.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: StorePage
            (commons.Id): androidenterprise.storelayoutpages.get
            (commons.LogicalStructure):
            - Storelayoutpages
          put:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Updates the content of a store page.
            displayName: Update
            is:
            - hasParameters
            body:
              application/json: StorePage
            responses:
              200:
                body:
                  application/json: StorePage
            (commons.Id): androidenterprise.storelayoutpages.update
            (commons.LogicalStructure):
            - Storelayoutpages
          delete:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Deletes a store page.
            displayName: Delete
            is:
            - hasParameters
            (commons.Id): androidenterprise.storelayoutpages.delete
            (commons.LogicalStructure):
            - Storelayoutpages
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Inserts a new store page.
          displayName: Insert
          is:
          - hasParameters
          body:
            application/json: StorePage
          responses:
            200:
              body:
                application/json: StorePage
          (commons.Id): androidenterprise.storelayoutpages.insert
          (commons.LogicalStructure):
          - Storelayoutpages
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Retrieves the details of all pages in the store.
          displayName: List
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: StoreLayoutPagesListResponse
          (commons.Id): androidenterprise.storelayoutpages.list
          (commons.LogicalStructure):
          - Storelayoutpages
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Sets the store layout for the enterprise.
        displayName: Set Store Layout
        is:
        - hasParameters
        body:
          application/json: StoreLayout
        responses:
          200:
            body:
              application/json: StoreLayout
        (commons.Id): androidenterprise.enterprises.setStoreLayout
        (commons.LogicalStructure):
        - Enterprises
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Returns the store layout for the enterprise. If the store layout has not been set, or if the store layout has no homepageId set, returns a NOT_FOUND error.
        displayName: Get Store Layout
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: StoreLayout
        (commons.Id): androidenterprise.enterprises.getStoreLayout
        (commons.LogicalStructure):
        - Enterprises
    /serviceAccountKeys:
      /{keyId}:
        uriParameters:
          keyId:
            type: string
            description: The ID of the key.
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Removes and invalidates the specified credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): androidenterprise.serviceaccountkeys.delete
          (commons.LogicalStructure):
          - Serviceaccountkeys
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: |-
          Generates new credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount.

          Only the type of the key should be populated in the resource to be inserted.
        displayName: Insert
        is:
        - hasParameters
        body:
          application/json: ServiceAccountKey
        responses:
          200:
            body:
              application/json: ServiceAccountKey
        (commons.Id): androidenterprise.serviceaccountkeys.insert
        (commons.LogicalStructure):
        - Serviceaccountkeys
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Lists all active credentials for the service account associated with this enterprise. Only the ID and key type are returned. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount.
        displayName: List
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: ServiceAccountKeysListResponse
        (commons.Id): androidenterprise.serviceaccountkeys.list
        (commons.LogicalStructure):
        - Serviceaccountkeys
    /serviceAccount:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: |-
          Returns a service account and credentials. The service account can be bound to the enterprise by calling setAccount. The service account is unique to this enterprise and EMM, and will be deleted if the enterprise is unbound. The credentials contain private key data and are not stored server-side.

          This method can only be called after calling Enterprises.Enroll or Enterprises.CompleteSignup, and before Enterprises.SetAccount; at other times it will return an error.

          Subsequent calls after the first will generate a new, unique set of credentials, and invalidate the previously generated credentials.

          Once the service account is bound to the enterprise, it can be managed using the serviceAccountKeys resource.
        displayName: Get Service Account
        is:
        - hasParameters
        queryParameters:
          keyType?:
            type: string
            description: The type of credential to return with the service account. Required.
            (commons.EnumDescriptions):
            - ''
            - ''
            enum:
            - googleCredentials
            - pkcs12
        responses:
          200:
            body:
              application/json: ServiceAccount
        (commons.Id): androidenterprise.enterprises.getServiceAccount
        (commons.LogicalStructure):
        - Enterprises
    /unenroll:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Unenrolls an enterprise from the calling EMM.
        displayName: Unenroll
        is:
        - hasParameters
        (commons.Id): androidenterprise.enterprises.unenroll
        (commons.LogicalStructure):
        - Enterprises
    /createWebToken:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Returns a unique token to access an embeddable UI. To generate a web UI, pass the generated token into the Play for Work javascript API. Each token may only be used to start one UI session. See the javascript API documentation for further information.
        displayName: Create Web Token
        is:
        - hasParameters
        body:
          application/json: AdministratorWebTokenSpec
        responses:
          200:
            body:
              application/json: AdministratorWebToken
        (commons.Id): androidenterprise.enterprises.createWebToken
        (commons.LogicalStructure):
        - Enterprises
    /sendTestPushNotification:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Sends a test push notification to validate the EMM integration with the Google Cloud Pub/Sub service for this enterprise.
        displayName: Send Test Push Notification
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: EnterprisesSendTestPushNotificationResponse
        (commons.Id): androidenterprise.enterprises.sendTestPushNotification
        (commons.LogicalStructure):
        - Enterprises
    /account:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Set the account that will be used to authenticate to the API as the enterprise.
        displayName: Set Account
        is:
        - hasParameters
        body:
          application/json: EnterpriseAccount
        responses:
          200:
            body:
              application/json: EnterpriseAccount
        (commons.Id): androidenterprise.enterprises.setAccount
        (commons.LogicalStructure):
        - Enterprises
    /groupLicenses:
      /{groupLicenseId}:
        uriParameters:
          groupLicenseId:
            type: string
            description: The ID of the product the group license is for, e.g. "app:com.google.android.gm".
        /users:
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the IDs of the users who have been granted entitlements under the license.
            displayName: List
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: GroupLicenseUsersListResponse
            (commons.Id): androidenterprise.grouplicenseusers.list
            (commons.LogicalStructure):
            - Grouplicenseusers
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Retrieves details of an enterprise's group license for a product.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: GroupLicense
          (commons.Id): androidenterprise.grouplicenses.get
          (commons.LogicalStructure):
          - Grouplicenses
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Retrieves IDs of all products for which the enterprise has a group license.
        displayName: List
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: GroupLicensesListResponse
        (commons.Id): androidenterprise.grouplicenses.list
        (commons.LogicalStructure):
        - Grouplicenses
    /products:
      /{productId}:
        uriParameters:
          productId:
            type: string
            description: The ID of the product.
        /appRestrictionsSchema:
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the schema that defines the configurable properties for this product. All products have a schema, but this schema may be empty if no managed configurations have been defined. This schema can be used to populate a UI that allows an administrator to configure the product. To apply a managed configuration based on the schema obtained using this API, see Managed Configurations through Play.
            displayName: Get App Restrictions Schema
            is:
            - hasParameters
            queryParameters:
              language?:
                type: string
                description: The BCP47 tag for the user's preferred language (e.g. "en-US", "de").
            responses:
              200:
                body:
                  application/json: AppRestrictionsSchema
            (commons.Id): androidenterprise.products.getAppRestrictionsSchema
            (commons.LogicalStructure):
            - Products
        /approve:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: |-
              Approves the specified product and the relevant app permissions, if any. The maximum number of products that you can approve per enterprise customer is 1,000.

              To learn how to use Google Play for Work to design and create a store layout to display approved products to your users, see Store Layout Design.
            displayName: Approve
            is:
            - hasParameters
            body:
              application/json: ProductsApproveRequest
            (commons.Id): androidenterprise.products.approve
            (commons.LogicalStructure):
            - Products
        /permissions:
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the Android app permissions required by this app.
            displayName: Get Permissions
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: ProductPermissions
            (commons.Id): androidenterprise.products.getPermissions
            (commons.LogicalStructure):
            - Products
          put:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: |-
              This method has been deprecated. To programmatically approve applications, you must use the iframe mechanism via the  generateApprovalUrl and  approve methods of the Products resource. For more information, see the  Play EMM API usage requirements.

              The updatePermissions method (deprecated) updates the set of Android app permissions for this app that have been accepted by the enterprise.
            displayName: Update Permissions
            is:
            - hasParameters
            body:
              application/json: ProductPermissions
            responses:
              200:
                body:
                  application/json: ProductPermissions
            (commons.Id): androidenterprise.products.updatePermissions
            (commons.LogicalStructure):
            - Products
        /unapprove:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Unapproves the specified product (and the relevant app permissions, if any)
            displayName: Unapprove
            is:
            - hasParameters
            (commons.Id): androidenterprise.products.unapprove
            (commons.LogicalStructure):
            - Products
        /generateApprovalUrl:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: |-
              Generates a URL that can be rendered in an iframe to display the permissions (if any) of a product. An enterprise admin must view these permissions and accept them on behalf of their organization in order to approve that product.

              Admins should accept the displayed permissions by interacting with a separate UI element in the EMM console, which in turn should trigger the use of this URL as the approvalUrlInfo.approvalUrl property in a Products.approve call to approve the product. This URL can only be used to display permissions for up to 1 day.
            displayName: Generate Approval Url
            is:
            - hasParameters
            queryParameters:
              languageCode?:
                type: string
                description: The BCP 47 language code used for permission names and descriptions in the returned iframe, for instance "en-US".
            responses:
              200:
                body:
                  application/json: ProductsGenerateApprovalUrlResponse
            (commons.Id): androidenterprise.products.generateApprovalUrl
            (commons.LogicalStructure):
            - Products
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Retrieves details of a product for display to an enterprise admin.
          displayName: Get
          is:
          - hasParameters
          queryParameters:
            language?:
              type: string
              description: The BCP47 tag for the user's preferred language (e.g. "en-US", "de").
          responses:
            200:
              body:
                application/json: Product
          (commons.Id): androidenterprise.products.get
          (commons.LogicalStructure):
          - Products
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Finds approved products that match a query, or all approved products if there is no query.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          approved?:
            type: boolean
            description: Specifies whether to search among all products (false) or among only products that have been approved (true). Only "true" is supported, and should be specified.
          maxResults?:
            type: integer
            format: int32
            description: Specifies the maximum number of products that can be returned per request. If not specified, uses a default value of 100, which is also the maximum retrievable within a single response.
          query?:
            type: string
            description: The search query as typed in the Google Play Store search box. If omitted, all approved apps will be returned (using the pagination parameters), including apps that are not available in the store (e.g. unpublished apps).
          language?:
            type: string
            description: The BCP47 tag for the user's preferred language (e.g. "en-US", "de"). Results are returned in the language best matching the preferred language.
          token?:
            type: string
            description: A pagination token is contained in a requests response when there are more products. The token can be used in a subsequent request to obtain more products, and so forth. This parameter cannot be used in the initial request.
        responses:
          200:
            body:
              application/json: ProductsListResponse
        (commons.Id): androidenterprise.products.list
        (commons.LogicalStructure):
        - Products
    /collections:
      /{collectionId}:
        uriParameters:
          collectionId:
            type: string
            description: The ID of the collection.
        /users:
          /{userId}:
            uriParameters:
              userId:
                type: string
                description: The ID of the user.
            patch:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds the user to the list of those specifically allowed to see the collection. If the collection's visibility is set to viewersOnly then only such users will see the collection. This method supports patch semantics.
              displayName: Patch
              is:
              - hasParameters
              body:
                application/json: User
              responses:
                200:
                  body:
                    application/json: User
              (commons.Id): androidenterprise.collectionviewers.patch
              (commons.LogicalStructure):
              - Collectionviewers
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Retrieves the ID of the user if they have been specifically allowed to see the collection. If the collection's visibility is set to viewersOnly then only these users will see the collection.
              displayName: Get
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: User
              (commons.Id): androidenterprise.collectionviewers.get
              (commons.LogicalStructure):
              - Collectionviewers
            put:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Adds the user to the list of those specifically allowed to see the collection. If the collection's visibility is set to viewersOnly then only such users will see the collection.
              displayName: Update
              is:
              - hasParameters
              body:
                application/json: User
              responses:
                200:
                  body:
                    application/json: User
              (commons.Id): androidenterprise.collectionviewers.update
              (commons.LogicalStructure):
              - Collectionviewers
            delete:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/androidenterprise
              description: Removes the user from the list of those specifically allowed to see the collection. If the collection's visibility is set to viewersOnly then only such users will see the collection.
              displayName: Delete
              is:
              - hasParameters
              (commons.Id): androidenterprise.collectionviewers.delete
              (commons.LogicalStructure):
              - Collectionviewers
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/androidenterprise
            description: Retrieves the IDs of the users who have been specifically allowed to see the collection. If the collection's visibility is set to viewersOnly then only these users will see the collection.
            displayName: List
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: CollectionViewersListResponse
            (commons.Id): androidenterprise.collectionviewers.list
            (commons.LogicalStructure):
            - Collectionviewers
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Updates a collection. This method supports patch semantics.
          displayName: Patch
          is:
          - hasParameters
          body:
            application/json: Collection
          responses:
            200:
              body:
                application/json: Collection
          (commons.Id): androidenterprise.collections.patch
          (commons.LogicalStructure):
          - Collections
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Retrieves the details of a collection.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: Collection
          (commons.Id): androidenterprise.collections.get
          (commons.LogicalStructure):
          - Collections
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Updates a collection.
          displayName: Update
          is:
          - hasParameters
          body:
            application/json: Collection
          responses:
            200:
              body:
                application/json: Collection
          (commons.Id): androidenterprise.collections.update
          (commons.LogicalStructure):
          - Collections
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/androidenterprise
          description: Deletes a collection.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): androidenterprise.collections.delete
          (commons.LogicalStructure):
          - Collections
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Creates a new collection.
        displayName: Insert
        is:
        - hasParameters
        body:
          application/json: Collection
        responses:
          200:
            body:
              application/json: Collection
        (commons.Id): androidenterprise.collections.insert
        (commons.LogicalStructure):
        - Collections
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/androidenterprise
        description: Retrieves the IDs of all the collections for an enterprise.
        displayName: List
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: CollectionsListResponse
        (commons.Id): androidenterprise.collections.list
        (commons.LogicalStructure):
        - Collections
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Deletes the binding between the EMM and enterprise. This is now deprecated; use this to unenroll customers that were previously enrolled with the 'insert' call, then enroll them again with the 'enroll' call.
      displayName: Delete
      is:
      - hasParameters
      (commons.Id): androidenterprise.enterprises.delete
      (commons.LogicalStructure):
      - Enterprises
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Retrieves the name and domain of an enterprise.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Enterprise
      (commons.Id): androidenterprise.enterprises.get
      (commons.LogicalStructure):
      - Enterprises
  /completeSignup:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Completes the signup flow, by specifying the Completion token and Enterprise token. This request must not be called multiple times for a given Enterprise Token.
      displayName: Complete Signup
      is:
      - hasParameters
      queryParameters:
        enterpriseToken?:
          type: string
          description: The Enterprise token appended to the Callback URL.
        completionToken?:
          type: string
          description: The Completion token initially returned by GenerateSignupUrl.
      responses:
        200:
          body:
            application/json: Enterprise
      (commons.Id): androidenterprise.enterprises.completeSignup
      (commons.LogicalStructure):
      - Enterprises
  /acknowledgeNotificationSet:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Acknowledges notifications that were received from Enterprises.PullNotificationSet to prevent subsequent calls from returning the same notifications.
      displayName: Acknowledge Notification Set
      is:
      - hasParameters
      queryParameters:
        notificationSetId?:
          type: string
          description: The notification set ID as returned by Enterprises.PullNotificationSet. This must be provided.
      (commons.Id): androidenterprise.enterprises.acknowledgeNotificationSet
      (commons.LogicalStructure):
      - Enterprises
  /pullNotificationSet:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: |-
        Pulls and returns a notification set for the enterprises associated with the service account authenticated for the request. The notification set may be empty if no notification are pending.
        A notification set returned needs to be acknowledged within 20 seconds by calling Enterprises​.AcknowledgeNotificationSet, unless the notification set is empty.
        Notifications that are not acknowledged within the 20 seconds will eventually be included again in the response to another PullNotificationSet request, and those that are never acknowledged will ultimately be deleted according to the Google Cloud Platform Pub/Sub system policy.
        Multiple requests might be performed concurrently to retrieve notifications, in which case the pending notifications (if any) will be split among each caller, if any are pending.
        If no notifications are present, an empty notification list is returned. Subsequent requests may return more notifications once they become available.
      displayName: Pull Notification Set
      is:
      - hasParameters
      queryParameters:
        requestMode?:
          type: string
          description: |-
            The request mode for pulling notifications.
            Specifying waitForNotifications will cause the request to block and wait until one or more notifications are present, or return an empty notification list if no notifications are present after some time.
            Speciying returnImmediately will cause the request to immediately return the pending notifications, or an empty list if no notifications are present.
            If omitted, defaults to waitForNotifications.
          (commons.EnumDescriptions):
          - ''
          - ''
          enum:
          - returnImmediately
          - waitForNotifications
      responses:
        200:
          body:
            application/json: NotificationSet
      (commons.Id): androidenterprise.enterprises.pullNotificationSet
      (commons.LogicalStructure):
      - Enterprises
  /signupUrl:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Generates a sign-up URL.
      displayName: Generate Signup Url
      is:
      - hasParameters
      queryParameters:
        callbackUrl?:
          type: string
          description: |-
            The callback URL to which the Admin will be redirected after successfully creating an enterprise. Before redirecting there the system will add a single query parameter to this URL named "enterpriseToken" which will contain an opaque token to be used for the CompleteSignup request.
            Beware that this means that the URL will be parsed, the parameter added and then a new URL formatted, i.e. there may be some minor formatting changes and, more importantly, the URL must be well-formed so that it can be parsed.
      responses:
        200:
          body:
            application/json: SignupInfo
      (commons.Id): androidenterprise.enterprises.generateSignupUrl
      (commons.LogicalStructure):
      - Enterprises
  /enroll:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Enrolls an enterprise with the calling EMM.
      displayName: Enroll
      is:
      - hasParameters
      queryParameters:
        token:
          type: string
          description: The token provided by the enterprise to register the EMM.
      body:
        application/json: Enterprise
      responses:
        200:
          body:
            application/json: Enterprise
      (commons.Id): androidenterprise.enterprises.enroll
      (commons.LogicalStructure):
      - Enterprises
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/androidenterprise
    description: Establishes the binding between the EMM and an enterprise. This is now deprecated; use enroll instead.
    displayName: Insert
    is:
    - hasParameters
    queryParameters:
      token:
        type: string
        description: The token provided by the enterprise to register the EMM.
    body:
      application/json: Enterprise
    responses:
      200:
        body:
          application/json: Enterprise
    (commons.Id): androidenterprise.enterprises.insert
    (commons.LogicalStructure):
    - Enterprises
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/androidenterprise
    description: Looks up an enterprise by domain name. This is only supported for enterprises created via the Google-initiated creation flow. Lookup of the id is not needed for enterprises created via the EMM-initiated flow since the EMM learns the enterprise ID in the callback specified in the Enterprises.generateSignupUrl call.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      domain:
        type: string
        description: The exact primary domain name of the enterprise to look up.
    responses:
      200:
        body:
          application/json: EnterprisesListResponse
    (commons.Id): androidenterprise.enterprises.list
    (commons.LogicalStructure):
    - Enterprises
/permissions:
  /{permissionId}:
    uriParameters:
      permissionId:
        type: string
        description: The ID of the permission.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/androidenterprise
      description: Retrieves details of an Android app permission for display to an enterprise admin.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The BCP47 tag for the user's preferred language (e.g. "en-US", "de")
      responses:
        200:
          body:
            application/json: Permission
      (commons.Id): androidenterprise.permissions.get
      (commons.LogicalStructure):
      - Permissions
