#%RAML 1.0
title: Google Classroom API
version: v1
baseUri: https://prod-day0-classroom.sandbox.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/classroom/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): classroom:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/classroom.courses
      - https://www.googleapis.com/auth/classroom.course-work.readonly
      - https://www.googleapis.com/auth/classroom.rosters.readonly
      - https://www.googleapis.com/auth/classroom.student-submissions.students.readonly
      - https://www.googleapis.com/auth/classroom.coursework.me.readonly
      - https://www.googleapis.com/auth/classroom.rosters
      - https://www.googleapis.com/auth/classroom.student-submissions.me.readonly
      - https://www.googleapis.com/auth/classroom.coursework.me
      - https://www.googleapis.com/auth/classroom.courses.readonly
      - https://www.googleapis.com/auth/classroom.coursework.students
      - https://www.googleapis.com/auth/classroom.profile.emails
      - https://www.googleapis.com/auth/classroom.coursework.students.readonly
      - https://www.googleapis.com/auth/classroom.profile.photos
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Assignment:
    type: object
    properties:
      studentWorkFolder?: DriveFolder
    description: Additional details for assignments.
  AssignmentSubmission:
    type: object
    properties:
      attachments?:
        type: array
        description: Attachments added by the student. Drive files that correspond to materials with a share mode of SUBMISSION_COPY may not exist yet if the student has not accessed the assignment in Classroom. Some attachment metadata is only populated if the requesting user has permission to access it. Identifier and alternate_link fields are available, but others (e.g. title) may not be.
        items: Attachment
    description: Student work for an assignment.
  Attachment:
    type: object
    properties:
      youTubeVideo?: YouTubeVideo
      form?: Form
      link?: Link
      driveFile?: DriveFile
    description: Attachment added to student assignment work. When creating attachments, only the Link field may be specified.
  Course:
    type: object
    properties:
      courseGroupEmail?:
        type: string
        description: The email address of a Google group containing all members of the course. This group does not accept email and can only be used for permissions. Read-only.
      creationTime?:
        type: string
        description: Creation time of the course. Specifying this field in a course update mask results in an error. Read-only.
      courseMaterialSets?:
        type: array
        description: Sets of materials that appear on the "about" page of this course. Read-only.
        items: CourseMaterialSet
      description?:
        type: string
        description: Optional description. For example, "We'll be learning about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters.
      guardiansEnabled?:
        type: boolean
        description: Whether or not guardian notifications are enabled for this course. Read-only.
      section?:
        type: string
        description: Section of the course. For example, "Period 2". If set, this field must be a valid UTF-8 string and no longer than 2800 characters.
      updateTime?:
        type: string
        description: Time of the most recent update to this course. Specifying this field in a course update mask results in an error. Read-only.
      enrollmentCode?:
        type: string
        description: Enrollment code to use when joining this course. Specifying this field in a course update mask results in an error. Read-only.
      ownerId?:
        type: string
        description: 'The identifier of the owner of a course. When specified as a
          parameter of a create course request, this field is required. The identifier
          can be one of the following: * the numeric identifier for the user * the
          email address of the user * the string literal `"me"`, indicating the requesting
          user This must be set in a create request. Specifying this field in a course
          update mask results in an `INVALID_ARGUMENT` error.'
      room?:
        type: string
        description: Optional room location. For example, "301". If set, this field must be a valid UTF-8 string and no longer than 650 characters.
      descriptionHeading?:
        type: string
        description: Optional heading for the description. For example, "Welcome to 10th Grade Biology." If set, this field must be a valid UTF-8 string and no longer than 3600 characters.
      courseState?:
        type: string
        description: State of the course. If unspecified, the default state is `PROVISIONED`.
        enum:
        - COURSE_STATE_UNSPECIFIED
        - ACTIVE
        - ARCHIVED
        - PROVISIONED
        - DECLINED
      name?:
        type: string
        description: Name of the course. For example, "10th Grade Biology". The name is required. It must be between 1 and 750 characters and a valid UTF-8 string.
      teacherGroupEmail?:
        type: string
        description: The email address of a Google group containing all teachers of the course. This group does not accept email and can only be used for permissions. Read-only.
      alternateLink?:
        type: string
        description: Absolute link to this course in the Classroom web UI. Read-only.
      id?:
        type: string
        description: Identifier for this course assigned by Classroom. When creating a course, you may optionally set this identifier to an alias string in the request to create a corresponding alias. The `id` is still assigned by Classroom and cannot be updated after the course is created. Specifying this field in a course update mask results in an error.
      teacherFolder?: DriveFolder
    description: A Course in Classroom.
  CourseAlias:
    type: object
    properties:
      alias?:
        type: string
        description: 'Alias string. The format of the string indicates the desired
          alias scoping. * `d:` indicates a domain-scoped alias. Example: `d:math_101`
          * `p:` indicates a project-scoped alias. Example: `p:abc123` This field
          has a maximum length of 256 characters.'
    description: 'Alternative identifier for a course. An alias uniquely identifies
      a course. It must be unique within one of the following scopes: * domain: A
      domain-scoped alias is visible to all users within the alias creator''s domain
      and can be created only by a domain admin. A domain-scoped alias is often used
      when a course has an identifier external to Classroom. * project: A project-scoped
      alias is visible to any request from an application using the Developer Console
      project ID that created the alias and can be created by any project. A project-scoped
      alias is often used when an application has alternative identifiers. A random
      value can also be used to avoid duplicate courses in the event of transmission
      failures, as retrying a request will return `ALREADY_EXISTS` if a previous one
      has succeeded.'
  CourseMaterial:
    type: object
    properties:
      youTubeVideo?: YouTubeVideo
      form?: Form
      link?: Link
      driveFile?: DriveFile
    description: A material attached to a course as part of a material set.
  CourseMaterialSet:
    type: object
    properties:
      materials?:
        type: array
        description: Materials attached to this set.
        items: CourseMaterial
      title?:
        type: string
        description: Title for this set.
    description: A set of materials that appears on the "About" page of the course. These materials might include a syllabus, schedule, or other background information relating to the course as a whole.
  CourseWork:
    type: object
    properties:
      creationTime?:
        type: string
        description: Timestamp when this course work was created. Read-only.
      submissionModificationMode?:
        type: string
        description: Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.
        enum:
        - SUBMISSION_MODIFICATION_MODE_UNSPECIFIED
        - MODIFIABLE_UNTIL_TURNED_IN
        - MODIFIABLE
      multipleChoiceQuestion?: MultipleChoiceQuestion
      assignment?: Assignment
      dueDate?: Date
      description?:
        type: string
        description: Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.
      updateTime?:
        type: string
        description: Timestamp of the most recent change to this course work. Read-only.
      title?:
        type: string
        description: Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.
      dueTime?: TimeOfDay
      materials?:
        type: array
        description: Additional materials. CourseWork must have no more than 20 material items.
        items: Material
      maxPoints?:
        type: number
        format: double
        description: Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.
      workType?:
        type: string
        description: Type of this course work. The type is set when the course work is created and cannot be changed. When creating course work, this must be `ASSIGNMENT`.
        enum:
        - COURSE_WORK_TYPE_UNSPECIFIED
        - ASSIGNMENT
        - SHORT_ANSWER_QUESTION
        - MULTIPLE_CHOICE_QUESTION
      alternateLink?:
        type: string
        description: Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
      id?:
        type: string
        description: Classroom-assigned identifier of this course work, unique per course. Read-only.
      state?:
        type: string
        description: Status of this course work. If unspecified, the default state is `DRAFT`.
        enum:
        - COURSE_WORK_STATE_UNSPECIFIED
        - PUBLISHED
        - DRAFT
        - DELETED
      courseId?:
        type: string
        description: Identifier of the course. Read-only.
      associatedWithDeveloper?:
        type: boolean
        description: Whether this course work item is associated with the Developer Console project making the request. See google.classroom.Work.CreateCourseWork for more details. Read-only.
    description: Course work created by a teacher for students of the course.
  Date:
    type: object
    properties:
      month?:
        type: integer
        format: int32
        description: Month of year. Must be from 1 to 12.
      year?:
        type: integer
        format: int32
        description: Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.
      day?:
        type: integer
        format: int32
        description: Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year/month where the day is not significant.
    description: Represents a whole calendar date, e.g. date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day may be 0 to represent a year and month where the day is not significant, e.g. credit card expiration date. The year may be 0 to represent a month and day independent of year, e.g. anniversary date. Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
  DriveFile:
    type: object
    properties:
      alternateLink?:
        type: string
        description: URL that can be used to access the Drive item. Read-only.
      id?:
        type: string
        description: Drive API resource ID.
      title?:
        type: string
        description: Title of the Drive item. Read-only.
      thumbnailUrl?:
        type: string
        description: URL of a thumbnail image of the Drive item. Read-only.
    description: Representation of a Google Drive file.
  DriveFolder:
    type: object
    properties:
      alternateLink?:
        type: string
        description: URL that can be used to access the Drive folder. Read-only.
      id?:
        type: string
        description: Drive API resource ID.
      title?:
        type: string
        description: Title of the Drive folder. Read-only.
    description: Representation of a Google Drive folder.
  Empty:
    type: object
    description: 'A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request or
      the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty)
      returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
      JSON object `{}`.'
  Form:
    type: object
    properties:
      responseUrl?:
        type: string
        description: URL of the form responses document. Only set if respsonses have been recorded and only when the requesting user is an editor of the form. Read-only.
      formUrl?:
        type: string
        description: URL of the form.
      title?:
        type: string
        description: Title of the Form. Read-only.
      thumbnailUrl?:
        type: string
        description: URL of a thumbnail image of the Form. Read-only.
    description: Google Forms item.
  GlobalPermission:
    type: object
    properties:
      permission?:
        type: string
        description: Permission value.
        enum:
        - PERMISSION_UNSPECIFIED
        - CREATE_COURSE
    description: Global user permission description.
  Guardian:
    type: object
    properties:
      studentId?:
        type: string
        description: Identifier for the student to whom the guardian relationship applies.
      invitedEmailAddress?:
        type: string
        description: The email address to which the initial guardian invitation was sent. This field is only visible to domain administrators.
      guardianId?:
        type: string
        description: Identifier for the guardian.
      guardianProfile?: UserProfile
    description: Association between a student and a guardian of that student. The guardian may receive information about the student's course work.
  GuardianInvitation:
    type: object
    properties:
      studentId?:
        type: string
        description: ID of the student (in standard format)
      invitedEmailAddress?:
        type: string
        description: Email address that the invitation was sent to. This field is only visible to domain administrators.
      creationTime?:
        type: string
        description: The time that this invitation was created. Read-only.
      invitationId?:
        type: string
        description: Unique identifier for this invitation. Read-only.
      state?:
        type: string
        description: The state that this invitation is in.
        enum:
        - GUARDIAN_INVITATION_STATE_UNSPECIFIED
        - PENDING
        - COMPLETE
    description: An invitation to become the guardian of a specified user, sent to a specified email address.
  Invitation:
    type: object
    properties:
      role?:
        type: string
        description: Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
        enum:
        - COURSE_ROLE_UNSPECIFIED
        - STUDENT
        - TEACHER
      id?:
        type: string
        description: Identifier assigned by Classroom. Read-only.
      userId?:
        type: string
        description: 'Identifier of the invited user. When specified as a parameter
          of a request, this identifier can be set to one of the following: * the
          numeric identifier for the user * the email address of the user * the string
          literal `"me"`, indicating the requesting user'
      courseId?:
        type: string
        description: Identifier of the course to invite the user to.
    description: An invitation to join a course.
  Link:
    type: object
    properties:
      title?:
        type: string
        description: Title of the target of the URL. Read-only.
      url?:
        type: string
        description: URL to link to. This must be a valid UTF-8 string containing between 1 and 2024 characters.
      thumbnailUrl?:
        type: string
        description: URL of a thumbnail image of the target URL. Read-only.
    description: URL item.
  ListCourseAliasesResponse:
    type: object
    properties:
      aliases?:
        type: array
        description: The course aliases.
        items: CourseAlias
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing course aliases.
  ListCourseWorkResponse:
    type: object
    properties:
      courseWork?:
        type: array
        description: Course work items that match the request.
        items: CourseWork
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing course work.
  ListCoursesResponse:
    type: object
    properties:
      courses?:
        type: array
        description: Courses that match the list request.
        items: Course
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing courses.
  ListGuardianInvitationsResponse:
    type: object
    properties:
      guardianInvitations?:
        type: array
        description: Guardian invitations that matched the list request.
        items: GuardianInvitation
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing guardian invitations.
  ListGuardiansResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
      guardians?:
        type: array
        description: Guardians on this page of results that met the criteria specified in the request.
        items: Guardian
    description: Response when listing guardians.
  ListInvitationsResponse:
    type: object
    properties:
      invitations?:
        type: array
        description: Invitations that match the list request.
        items: Invitation
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing invitations.
  ListStudentSubmissionsResponse:
    type: object
    properties:
      studentSubmissions?:
        type: array
        description: Student work that matches the request.
        items: StudentSubmission
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing student submissions.
  ListStudentsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
      students?:
        type: array
        description: Students who match the list request.
        items: Student
    description: Response when listing students.
  ListTeachersResponse:
    type: object
    properties:
      teachers?:
        type: array
        description: Teachers who match the list request.
        items: Teacher
      nextPageToken?:
        type: string
        description: Token identifying the next page of results to return. If empty, no further results are available.
    description: Response when listing teachers.
  Material:
    type: object
    properties:
      form?: Form
      link?: Link
      driveFile?: SharedDriveFile
      youtubeVideo?: YouTubeVideo
    description: Material attached to course work. When creating attachments, only the Link field may be specified.
  ModifyAttachmentsRequest:
    type: object
    properties:
      addAttachments?:
        type: array
        description: Attachments to add. A student submission may not have more than 20 attachments. This may only contain link attachments.
        items: Attachment
    description: Request to modify the attachments of a student submission.
  MultipleChoiceQuestion:
    type: object
    properties:
      choices?:
        type: array
        description: Possible choices.
        items:
          type: string
    description: Additional details for multiple-choice questions.
  MultipleChoiceSubmission:
    type: object
    properties:
      answer?:
        type: string
        description: Student's select choice.
    description: Student work for a multiple-choice question.
  Name:
    type: object
    properties:
      givenName?:
        type: string
        description: The user's first name. Read-only.
      familyName?:
        type: string
        description: The user's last name. Read-only.
      fullName?:
        type: string
        description: The user's full name formed by concatenating the first and last name values. Read-only.
    description: Details of the user's name.
  ReclaimStudentSubmissionRequest:
    type: object
    description: Request to reclaim a student submission.
  ReturnStudentSubmissionRequest:
    type: object
    description: Request to return a student submission.
  SharedDriveFile:
    type: object
    properties:
      shareMode?:
        type: string
        description: Mechanism by which students access the Drive item.
        enum:
        - UNKNOWN_SHARE_MODE
        - VIEW
        - EDIT
        - STUDENT_COPY
      driveFile?: DriveFile
    description: Drive file that is used as material for course work.
  ShortAnswerSubmission:
    type: object
    properties:
      answer?:
        type: string
        description: Student response to a short-answer question.
    description: Student work for a short answer question.
  Student:
    type: object
    properties:
      profile?: UserProfile
      studentWorkFolder?: DriveFolder
      courseId?:
        type: string
        description: Identifier of the course. Read-only.
      userId?:
        type: string
        description: 'Identifier of the user. When specified as a parameter of a request,
          this identifier can be one of the following: * the numeric identifier for
          the user * the email address of the user * the string literal `"me"`, indicating
          the requesting user'
    description: Student in a course.
  StudentSubmission:
    type: object
    properties:
      creationTime?:
        type: string
        description: Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.
      multipleChoiceSubmission?: MultipleChoiceSubmission
      updateTime?:
        type: string
        description: Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.
      courseWorkId?:
        type: string
        description: Identifier for the course work this corresponds to. Read-only.
      userId?:
        type: string
        description: Identifier for the student that owns this submission. Read-only.
      courseWorkType?:
        type: string
        description: Type of course work this submission is for. Read-only.
        enum:
        - COURSE_WORK_TYPE_UNSPECIFIED
        - ASSIGNMENT
        - SHORT_ANSWER_QUESTION
        - MULTIPLE_CHOICE_QUESTION
      draftGrade?:
        type: number
        format: double
        description: Optional pending grade. If unset, no grade was set. This must be a non-negative integer value. This is only visible to and modifiable by course teachers.
      shortAnswerSubmission?: ShortAnswerSubmission
      late?:
        type: boolean
        description: Whether this submission is late. Read-only.
      assignedGrade?:
        type: number
        format: double
        description: Optional grade. If unset, no grade was set. This must be a non-negative integer value. This may be modified only by course teachers.
      alternateLink?:
        type: string
        description: Absolute link to the submission in the Classroom web UI. Read-only.
      id?:
        type: string
        description: Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.
      state?:
        type: string
        description: State of this submission. Read-only.
        enum:
        - SUBMISSION_STATE_UNSPECIFIED
        - NEW
        - CREATED
        - TURNED_IN
        - RETURNED
        - RECLAIMED_BY_STUDENT
      courseId?:
        type: string
        description: Identifier of the course. Read-only.
      assignmentSubmission?: AssignmentSubmission
      associatedWithDeveloper?:
        type: boolean
        description: Whether this student submission is associated with the Developer Console project making the request. See google.classroom.Work.CreateCourseWork for more details. Read-only.
    description: Student submission for course work. StudentSubmission items are generated when a CourseWork item is created. StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.
  Teacher:
    type: object
    properties:
      profile?: UserProfile
      courseId?:
        type: string
        description: Identifier of the course. Read-only.
      userId?:
        type: string
        description: 'Identifier of the user. When specified as a parameter of a request,
          this identifier can be one of the following: * the numeric identifier for
          the user * the email address of the user * the string literal `"me"`, indicating
          the requesting user'
    description: Teacher of a course.
  TimeOfDay:
    type: object
    properties:
      hours?:
        type: integer
        format: int32
        description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
      seconds?:
        type: integer
        format: int32
        description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
      nanos?:
        type: integer
        format: int32
        description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
      minutes?:
        type: integer
        format: int32
        description: Minutes of hour of day. Must be from 0 to 59.
    description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may chose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
  TurnInStudentSubmissionRequest:
    type: object
    description: Request to turn in a student submission.
  UserProfile:
    type: object
    properties:
      photoUrl?:
        type: string
        description: URL of user's profile photo. Read-only.
      emailAddress?:
        type: string
        description: Email address of the user. Read-only.
      permissions?:
        type: array
        description: Global permissions of the user. Read-only.
        items: GlobalPermission
      name?: Name
      id?:
        type: string
        description: Identifier of the user. Read-only.
    description: Global information for a user.
  YouTubeVideo:
    type: object
    properties:
      alternateLink?:
        type: string
        description: URL that can be used to view the YouTube video. Read-only.
      id?:
        type: string
        description: YouTube API resource ID.
      title?:
        type: string
        description: Title of the YouTube video. Read-only.
      thumbnailUrl?:
        type: string
        description: URL of a thumbnail image of the YouTube video. Read-only.
    description: YouTube video item.
/v1:
  /courses:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Identifier of the course to update. This identifier can be either the Classroom-assigned identifier or an alias.
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.courses
        description: 'Updates one or more fields in a course. This method returns
          the following error codes: * `PERMISSION_DENIED` if the requesting user
          is not permitted to modify the requested course or for access errors. *
          `NOT_FOUND` if no course exists with the requested ID. * `INVALID_ARGUMENT`
          if invalid fields are specified in the update mask or if no update mask
          is supplied. * `FAILED_PRECONDITION` for the following request errors: *
          CourseNotModifiable'
        is:
        - hasParameters
        queryParameters:
          updateMask?:
            type: string
            description: 'Mask that identifies which fields on the course to update.
              This field is required to do an update. The update will fail if invalid
              fields are specified. The following fields are valid: * `name` * `section`
              * `descriptionHeading` * `description` * `room` * `courseState` When
              set in a query parameter, this field should be specified as `updateMask=,,...`'
        body:
          application/json: Course
        responses:
          200:
            body:
              application/json: Course
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.courses
            - https://www.googleapis.com/auth/classroom.courses.readonly
        description: 'Returns a course. This method returns the following error codes:
          * `PERMISSION_DENIED` if the requesting user is not permitted to access
          the requested course or for access errors. * `NOT_FOUND` if no course exists
          with the requested ID.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Course
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.courses
        description: 'Updates a course. This method returns the following error codes:
          * `PERMISSION_DENIED` if the requesting user is not permitted to modify
          the requested course or for access errors. * `NOT_FOUND` if no course exists
          with the requested ID. * `FAILED_PRECONDITION` for the following request
          errors: * CourseNotModifiable'
        is:
        - hasParameters
        body:
          application/json: Course
        responses:
          200:
            body:
              application/json: Course
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.courses
        description: 'Deletes a course. This method returns the following error codes:
          * `PERMISSION_DENIED` if the requesting user is not permitted to delete
          the requested course or for access errors. * `NOT_FOUND` if no course exists
          with the requested ID.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/classroom.courses
      description: 'Creates a course. The user specified in `ownerId` is the owner
        of the created course and added as a teacher. This method returns the following
        error codes: * `PERMISSION_DENIED` if the requesting user is not permitted
        to create courses or for access errors. * `NOT_FOUND` if the primary teacher
        is not a valid user. * `FAILED_PRECONDITION` if the course owner''s account
        is disabled or for the following request errors: * UserGroupsMembershipLimitReached
        * `ALREADY_EXISTS` if an alias was specified in the `id` and already exists.'
      is:
      - hasParameters
      body:
        application/json: Course
      responses:
        200:
          body:
            application/json: Course
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/classroom.courses
          - https://www.googleapis.com/auth/classroom.courses.readonly
      description: 'Returns a list of courses that the requesting user is permitted
        to view, restricted to those that match the request. This method returns the
        following error codes: * `PERMISSION_DENIED` for access errors. * `INVALID_ARGUMENT`
        if the query argument is malformed. * `NOT_FOUND` if any users specified in
        the query arguments do not exist.'
      is:
      - hasParameters
      queryParameters:
        studentId?:
          type: string
          description: 'Restricts returned courses to those having a student with
            the specified identifier. The identifier can be one of the following:
            * the numeric identifier for the user * the email address of the user
            * the string literal `"me"`, indicating the requesting user'
        teacherId?:
          type: string
          description: 'Restricts returned courses to those having a teacher with
            the specified identifier. The identifier can be one of the following:
            * the numeric identifier for the user * the email address of the user
            * the string literal `"me"`, indicating the requesting user'
        courseStates?:
          type: string
          description: Restricts returned courses to those in one of the specified states
          enum:
          - COURSE_STATE_UNSPECIFIED
          - ACTIVE
          - ARCHIVED
          - PROVISIONED
          - DECLINED
        pageSize?:
          type: integer
          format: int32
          description: Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
        pageToken?:
          type: string
          description: nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.
      responses:
        200:
          body:
            application/json: ListCoursesResponse
  /invitations:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Identifier of the invitation to return.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.rosters
            - https://www.googleapis.com/auth/classroom.rosters.readonly
        description: 'Returns an invitation. This method returns the following error
          codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
          view the requested invitation or for access errors. * `NOT_FOUND` if no
          invitation exists with the requested ID.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Invitation
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.rosters
        description: 'Deletes an invitation. This method returns the following error
          codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
          delete the requested invitation or for access errors. * `NOT_FOUND` if no
          invitation exists with the requested ID.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
    /{id}:accept:
      uriParameters:
        id:
          type: string
          description: Identifier of the invitation to accept.
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.rosters
        description: 'Accepts an invitation, removing it and adding the invited user
          to the teachers or students (as appropriate) of the specified course. Only
          the invited user may accept an invitation. This method returns the following
          error codes: * `PERMISSION_DENIED` if the requesting user is not permitted
          to accept the requested invitation or for access errors. * `FAILED_PRECONDITION`
          for the following request errors: * CourseMemberLimitReached * CourseNotModifiable
          * CourseTeacherLimitReached * UserGroupsMembershipLimitReached * `NOT_FOUND`
          if no invitation exists with the requested ID.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/classroom.rosters
      description: 'Creates an invitation. Only one invitation for a user and course
        may exist at a time. Delete and re-create an invitation to make changes. This
        method returns the following error codes: * `PERMISSION_DENIED` if the requesting
        user is not permitted to create invitations for this course or for access
        errors. * `NOT_FOUND` if the course or the user does not exist. * `FAILED_PRECONDITION`
        if the requested user''s account is disabled or if the user already has this
        role or a role with greater permissions. * `ALREADY_EXISTS` if an invitation
        for the specified user and course already exists.'
      is:
      - hasParameters
      body:
        application/json: Invitation
      responses:
        200:
          body:
            application/json: Invitation
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/classroom.rosters
          - https://www.googleapis.com/auth/classroom.rosters.readonly
      description: 'Returns a list of invitations that the requesting user is permitted
        to view, restricted to those that match the list request. *Note:* At least
        one of `user_id` or `course_id` must be supplied. Both fields can be supplied.
        This method returns the following error codes: * `PERMISSION_DENIED` for access
        errors.'
      is:
      - hasParameters
      queryParameters:
        pageSize?:
          type: integer
          format: int32
          description: Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.
        pageToken?:
          type: string
          description: nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.
        userId?:
          type: string
          description: 'Restricts returned invitations to those for a specific user.
            The identifier can be one of the following: * the numeric identifier for
            the user * the email address of the user * the string literal `"me"`,
            indicating the requesting user'
        courseId?:
          type: string
          description: Restricts returned invitations to those for a course with the specified identifier.
      responses:
        200:
          body:
            application/json: ListInvitationsResponse
  /userProfiles:
    /{userId}:
      uriParameters:
        userId:
          type: string
          description: 'Identifier of the profile to return. The identifier can be
            one of the following: * the numeric identifier for the user * the email
            address of the user * the string literal `"me"`, indicating the requesting
            user'
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/classroom.profile.emails
            - https://www.googleapis.com/auth/classroom.profile.photos
            - https://www.googleapis.com/auth/classroom.rosters
            - https://www.googleapis.com/auth/classroom.rosters.readonly
        description: 'Returns a user profile. This method returns the following error
          codes: * `PERMISSION_DENIED` if the requesting user is not permitted to
          access this user profile or if no profile exists with the requested ID or
          for access errors.'
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: UserProfile
