#%RAML 1.0
title: Calendar API
version: v3
baseUri: https://www.googleapis.com/calendar/v3/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/google-apps/calendar/firstapp
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/calendar-32.png
  name: x32
- url: http://www.google.com/images/icons/product/calendar-16.png
  name: x16
(commons.Id): calendar:v3
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/calendar
      - https://www.googleapis.com/auth/calendar.readonly
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Acl:
    type: object
    properties:
      kind?:
        type: string
        default: calendar#acl
        description: Type of the collection ("calendar#acl").
      nextPageToken?:
        type: string
        description: Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
      nextSyncToken?:
        type: string
        description: Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
      etag?:
        type: string
        description: ETag of the collection.
      items?:
        type: array
        description: List of rules on the access control list.
        items: AclRule
  AclRule:
    type: object
    properties:
      role?:
        type: string
        description: "The role assigned to the scope. Possible values are:  \n- \"\
          none\" - Provides no access. \n- \"freeBusyReader\" - Provides read access\
          \ to free/busy information. \n- \"reader\" - Provides read access to the\
          \ calendar. Private events will appear to users with reader access, but\
          \ event details will be hidden. \n- \"writer\" - Provides read and write\
          \ access to the calendar. Private events will appear to users with writer\
          \ access, and event details will be visible. \n- \"owner\" - Provides ownership\
          \ of the calendar. This role has all of the permissions of the writer role\
          \ with the additional ability to see and manipulate ACLs."
      kind?:
        type: string
        default: calendar#aclRule
        description: Type of the resource ("calendar#aclRule").
      scope?:
        type: object
        properties:
          type?:
            type: string
            description: "The type of the scope. Possible values are:  \n- \"default\"\
              \ - The public scope. This is the default value. \n- \"user\" - Limits\
              \ the scope to a single user. \n- \"group\" - Limits the scope to a\
              \ group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions\
              \ granted to the \"default\", or public, scope apply to any user, authenticated\
              \ or not."
          value?:
            type: string
            description: The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type "default".
        description: The scope of the rule.
      etag?:
        type: string
        description: ETag of the resource.
      id?:
        type: string
        description: Identifier of the ACL rule.
  Calendar:
    type: object
    properties:
      summary?:
        type: string
        description: Title of the calendar.
      kind?:
        type: string
        default: calendar#calendar
        description: Type of the resource ("calendar#calendar").
      description?:
        type: string
        description: Description of the calendar. Optional.
      timeZone?:
        type: string
        description: The time zone of the calendar. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) Optional.
      etag?:
        type: string
        description: ETag of the resource.
      location?:
        type: string
        description: Geographic location of the calendar as free-form text. Optional.
      id?:
        type: string
        description: Identifier of the calendar. To retrieve IDs call the calendarList.list() method.
  CalendarList:
    type: object
    properties:
      kind?:
        type: string
        default: calendar#calendarList
        description: Type of the collection ("calendar#calendarList").
      nextPageToken?:
        type: string
        description: Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
      nextSyncToken?:
        type: string
        description: Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
      etag?:
        type: string
        description: ETag of the collection.
      items?:
        type: array
        description: Calendars that are present on the user's calendar list.
        items: CalendarListEntry
  CalendarListEntry:
    type: object
    properties:
      summary?:
        type: string
        description: Title of the calendar. Read-only.
      backgroundColor?:
        type: string
        description: The main color of the calendar in the hexadecimal format "#0088aa". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.
      hidden?:
        type: boolean
        default: false
        description: Whether the calendar has been hidden from the list. Optional. The default is False.
      colorId?:
        type: string
        description: The color of the calendar. This is an ID referring to an entry in the calendar section of the colors definition (see the colors endpoint). This property is superseded by the backgroundColor and foregroundColor properties and can be ignored when using these properties. Optional.
      kind?:
        type: string
        default: calendar#calendarListEntry
        description: Type of the resource ("calendar#calendarListEntry").
      description?:
        type: string
        description: Description of the calendar. Optional. Read-only.
      timeZone?:
        type: string
        description: The time zone of the calendar. Optional. Read-only.
      foregroundColor?:
        type: string
        description: The foreground color of the calendar in the hexadecimal format "#ffffff". This property supersedes the index-based colorId property. To set or change this property, you need to specify colorRgbFormat=true in the parameters of the insert, update and patch methods. Optional.
      notificationSettings?:
        type: object
        properties:
          notifications?:
            type: array
            description: The list of notifications set for this calendar.
            items: CalendarNotification
        description: The notifications that the authenticated user is receiving for this calendar.
      deleted?:
        type: boolean
        default: false
        description: Whether this calendar list entry has been deleted from the calendar list. Read-only. Optional. The default is False.
      summaryOverride?:
        type: string
        description: The summary that the authenticated user has set for this calendar. Optional.
      defaultReminders?:
        type: array
        description: The default reminders that the authenticated user has for this calendar.
        items: EventReminder
      accessRole?:
        type: string
        description: "The effective access role that the authenticated user has on\
          \ the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\"\
          \ - Provides read access to free/busy information. \n- \"reader\" - Provides\
          \ read access to the calendar. Private events will appear to users with\
          \ reader access, but event details will be hidden. \n- \"writer\" - Provides\
          \ read and write access to the calendar. Private events will appear to users\
          \ with writer access, and event details will be visible. \n- \"owner\" -\
          \ Provides ownership of the calendar. This role has all of the permissions\
          \ of the writer role with the additional ability to see and manipulate ACLs."
      etag?:
        type: string
        description: ETag of the resource.
      location?:
        type: string
        description: Geographic location of the calendar as free-form text. Optional. Read-only.
      id?:
        type: string
        description: Identifier of the calendar.
      selected?:
        type: boolean
        default: false
        description: Whether the calendar content shows up in the calendar UI. Optional. The default is False.
      primary?:
        type: boolean
        default: false
        description: Whether the calendar is the primary calendar of the authenticated user. Read-only. Optional. The default is False.
  CalendarNotification:
    type: object
    properties:
      method?:
        type: string
        description: "The method used to deliver the notification. Possible values\
          \ are:  \n- \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders\
          \ are sent via SMS. This value is read-only and is ignored on inserts and\
          \ updates. SMS reminders are only available for Google Apps for Work, Education,\
          \ and Government customers."
      type?:
        type: string
        description: "The type of notification. Possible values are:  \n- \"eventCreation\"\
          \ - Notification sent when a new event is put on the calendar. \n- \"eventChange\"\
          \ - Notification sent when an event is changed. \n- \"eventCancellation\"\
          \ - Notification sent when an event is cancelled. \n- \"eventResponse\"\
          \ - Notification sent when an event is changed. \n- \"agenda\" - An agenda\
          \ with the events of the day (sent out in the morning)."
  Channel:
    type: object
    properties:
      resourceId?:
        type: string
        description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
      address?:
        type: string
        description: The address where notifications are delivered for this channel.
      payload?:
        type: boolean
        description: A Boolean value to indicate whether payload is wanted. Optional.
      kind?:
        type: string
        default: api#channel
        description: 'Identifies this as a notification channel used to watch for
          changes to a resource. Value: the fixed string "api#channel".'
      expiration?:
        type: integer
        format: int64
        description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
      id?:
        type: string
        description: A UUID or similar unique string that identifies this channel.
      resourceUri?:
        type: string
        description: A version-specific identifier for the watched resource.
      params?:
        type: object
        description: Additional parameters controlling delivery channel behavior. Optional.
      type?:
        type: string
        description: The type of delivery mechanism used for this channel.
      token?:
        type: string
        description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
  ColorDefinition:
    type: object
    properties:
      background?:
        type: string
        description: The background color associated with this color definition.
      foreground?:
        type: string
        description: The foreground color that can be used to write on top of a background with 'background' color.
  Colors:
    type: object
    properties:
      calendar?:
        type: object
        description: A global palette of calendar colors, mapping from the color ID to its definition. A calendarListEntry resource refers to one of these color IDs in its color field. Read-only.
      kind?:
        type: string
        default: calendar#colors
        description: Type of the resource ("calendar#colors").
      event?:
        type: object
        description: A global palette of event colors, mapping from the color ID to its definition. An event resource may refer to one of these color IDs in its color field. Read-only.
      updated?:
        type: datetime
        description: Last modification time of the color palette (as a RFC3339 timestamp). Read-only.
  Error:
    type: object
    properties:
      reason?:
        type: string
        description: "Specific reason for the error. Some of the possible values are:\
          \  \n- \"groupTooBig\" - The group of users requested is too large for a\
          \ single query. \n- \"tooManyCalendarsRequested\" - The number of calendars\
          \ requested is too large for a single query. \n- \"notFound\" - The requested\
          \ resource was not found. \n- \"internalError\" - The API service has encountered\
          \ an internal error.  Additional error types may be added in the future,\
          \ so clients should gracefully handle additional error statuses not included\
          \ in this list."
      domain?:
        type: string
        description: Domain, or broad category, of the error.
  Event:
    type: object
    properties:
      reminders?:
        type: object
        properties:
          overrides?:
            type: array
            description: If the event doesn't use the default reminders, this lists the reminders specific to the event, or, if not set, indicates that no reminders are set for this event. The maximum number of override reminders is 5.
            items: EventReminder
          useDefault?:
            type: boolean
            description: Whether the default reminders of the calendar apply to the event.
        description: Information about the event's reminders for the authenticated user.
      attachments?:
        type: array
        description: |-
          File attachments for the event. Currently only Google Drive attachments are supported.
          In order to modify attachments the supportsAttachments request parameter should be set to true.
          There can be at most 25 attachments per event,
        items: EventAttachment
      gadget?:
        type: object
        properties:
          preferences?:
            type: object
            description: Preferences.
          iconLink?:
            type: string
            description: The gadget's icon URL. The URL scheme must be HTTPS.
          display?:
            type: string
            description: "The gadget's display mode. Optional. Possible values are:\
              \  \n- \"icon\" - The gadget displays next to the event's title in the\
              \ calendar view. \n- \"chip\" - The gadget displays when the event is\
              \ clicked."
          link?:
            type: string
            description: The gadget's URL. The URL scheme must be HTTPS.
          width?:
            type: integer
            format: int32
            description: The gadget's width in pixels. The width must be an integer greater than 0. Optional.
          title?:
            type: string
            description: The gadget's title.
          type?:
            type: string
            description: The gadget's type.
          height?:
            type: integer
            format: int32
            description: The gadget's height in pixels. The height must be an integer greater than 0. Optional.
        description: A gadget that extends this event.
      colorId?:
        type: string
        description: The color of the event. This is an ID referring to an entry in the event section of the colors definition (see the  colors endpoint). Optional.
      hangoutLink?:
        type: string
        description: An absolute link to the Google+ hangout associated with this event. Read-only.
      attendeesOmitted?:
        type: boolean
        default: false
        description: Whether attendees may have been omitted from the event's representation. When retrieving an event, this may be due to a restriction specified by the maxAttendee query parameter. When updating an event, this can be used to only update the participant's response. Optional. The default is False.
      description?:
        type: string
        description: Description of the event. Optional.
      source?:
        type: object
        properties:
          title?:
            type: string
            description: Title of the source; for example a title of a web page or an email subject.
          url?:
            type: string
            description: URL of the source pointing to a resource. The URL scheme must be HTTP or HTTPS.
        description: Source from which the event was created. For example, a web page, an email message or any document identifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.
      extendedProperties?:
        type: object
        properties:
          shared?:
            type: object
            description: Properties that are shared between copies of the event on other attendees' calendars.
          private?:
            type: object
            description: Properties that are private to the copy of the event that appears on this calendar.
        description: Extended properties of the event.
      guestsCanModify?:
        type: boolean
        default: false
        description: Whether attendees other than the organizer can modify the event. Optional. The default is False.
      recurringEventId?:
        type: string
        description: For an instance of a recurring event, this is the id of the recurring event to which this instance belongs. Immutable.
      endTimeUnspecified?:
        type: boolean
        default: false
        description: Whether the end time is actually unspecified. An end time is still provided for compatibility reasons, even if this attribute is set to True. The default is False.
      guestsCanSeeOtherGuests?:
        type: boolean
        default: true
        description: Whether attendees other than the organizer can see who the event's attendees are. Optional. The default is True.
      end?: EventDateTime
      id?:
        type: string
        description: "Opaque identifier of the event. When creating new single or\
          \ recurring events, you can specify their IDs. Provided IDs must follow\
          \ these rules:  \n- characters allowed in the ID are those used in base32hex\
          \ encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2\
          \ in RFC2938 \n- the length of the ID must be between 5 and 1024 characters\
          \ \n- the ID must be unique per calendar  Due to the globally distributed\
          \ nature of the system, we cannot guarantee that ID collisions will be detected\
          \ at event creation time. To minimize the risk of collisions we recommend\
          \ using an established UUID algorithm such as one described in RFC4122.\n\
          If you do not specify an ID, it will be automatically generated by the server.\n\
          Note that the icalUID and the id are not identical and only one of them\
          \ should be supplied at event creation time. One difference in their semantics\
          \ is that in recurring events, all occurrences of one event have different\
          \ ids while they all share the same icalUIDs."
      locked?:
        type: boolean
        default: false
        description: Whether this is a locked event copy where no changes can be made to the main event fields "summary", "description", "location", "start", "end" or "recurrence". The default is False. Read-Only.
      anyoneCanAddSelf?:
        type: boolean
        default: false
        description: Whether anyone can invite themselves to the event (currently works for Google+ events only). Optional. The default is False.
      summary?:
        type: string
        description: Title of the event.
      creator?:
        type: object
        properties:
          displayName?:
            type: string
            description: The creator's name, if available.
          self?:
            type: boolean
            default: false
            description: Whether the creator corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.
          id?:
            type: string
            description: The creator's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API
          email?:
            type: string
            description: The creator's email address, if available.
        description: The creator of the event. Read-only.
      privateCopy?:
        type: boolean
        default: false
        description: Whether this is a private event copy where changes are not shared with other copies on other calendars. Optional. Immutable. The default is False.
      visibility?:
        type: string
        default: default
        description: "Visibility of the event. Optional. Possible values are:  \n\
          - \"default\" - Uses the default visibility for events on the calendar.\
          \ This is the default value. \n- \"public\" - The event is public and event\
          \ details are visible to all readers of the calendar. \n- \"private\" -\
          \ The event is private and only event attendees may view event details.\
          \ \n- \"confidential\" - The event is private. This value is provided for\
          \ compatibility reasons."
      attendees?:
        type: array
        description: The attendees of the event. See the Events with attendees guide for more information on scheduling events with other calendar users.
        items: EventAttendee
      created?:
        type: string
        description: Creation time of the event (as a RFC3339 timestamp). Read-only.
      htmlLink?:
        type: string
        description: An absolute link to this event in the Google Calendar Web UI. Read-only.
      kind?:
        type: string
        default: calendar#event
        description: Type of the resource ("calendar#event").
      iCalUID?:
        type: string
        description: |-
          Event unique identifier as defined in RFC5545. It is used to uniquely identify events accross calendaring systems and must be supplied when importing events via the import method.
          Note that the icalUID and the id are not identical and only one of them should be supplied at event creation time. One difference in their semantics is that in recurring events, all occurrences of one event have different ids while they all share the same icalUIDs.
      start?: EventDateTime
      originalStartTime?: EventDateTime
      recurrence?:
        type: array
        description: List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event, as specified in RFC5545. Note that DTSTART and DTEND lines are not allowed in this field; event start and end times are specified in the start and end fields. This field is omitted for single events or instances of recurring events.
        items:
          type: string
      sequence?:
        type: integer
        format: int32
        description: Sequence number as per iCalendar.
      organizer?:
        type: object
        properties:
          displayName?:
            type: string
            description: The organizer's name, if available.
          self?:
            type: boolean
            default: false
            description: Whether the organizer corresponds to the calendar on which this copy of the event appears. Read-only. The default is False.
          id?:
            type: string
            description: The organizer's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API
          email?:
            type: string
            description: The organizer's email address, if available. It must be a valid email address as per RFC5322.
        description: The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.
      transparency?:
        type: string
        default: opaque
        description: "Whether the event blocks time on the calendar. Optional. Possible\
          \ values are:  \n- \"opaque\" - The event blocks time on the calendar. This\
          \ is the default value. \n- \"transparent\" - The event does not block time\
          \ on the calendar."
      etag?:
        type: string
        description: ETag of the resource.
      location?:
        type: string
        description: Geographic location of the event as free-form text. Optional.
      guestsCanInviteOthers?:
        type: boolean
        default: true
        description: Whether attendees other than the organizer can invite others to the event. Optional. The default is True.
      updated?:
        type: string
        description: Last modification time of the event (as a RFC3339 timestamp). Read-only.
      status?:
        type: string
        description: "Status of the event. Optional. Possible values are:  \n- \"\
          confirmed\" - The event is confirmed. This is the default status. \n- \"\
          tentative\" - The event is tentatively confirmed. \n- \"cancelled\" - The\
          \ event is cancelled."
  EventAttachment:
    type: object
    properties:
      iconLink?:
        type: string
        description: URL link to the attachment's icon. Read-only.
      fileUrl?:
        type: string
        description: |-
          URL link to the attachment.
          For adding Google Drive file attachments use the same format as in alternateLink property of the Files resource in the Drive API.
      mimeType?:
        type: string
        description: Internet media type (MIME type) of the attachment.
      title?:
        type: string
        description: Attachment title.
      fileId?:
        type: string
        description: |-
          ID of the attached file. Read-only.
          For Google Drive files, this is the ID of the corresponding Files resource entry in the Drive API.
  EventAttendee:
    type: object
    properties:
      additionalGuests?:
        type: integer
        default: 0
        format: int32
        description: Number of additional guests. Optional. The default is 0.
      resource?:
        type: boolean
        default: false
        description: Whether the attendee is a resource. Read-only. The default is False.
      displayName?:
        type: string
        description: The attendee's name, if available. Optional.
      organizer?:
        type: boolean
        description: Whether the attendee is the organizer of the event. Read-only. The default is False.
      self?:
        type: boolean
        default: false
        description: Whether this entry represents the calendar on which this copy of the event appears. Read-only. The default is False.
      comment?:
        type: string
        description: The attendee's response comment. Optional.
      optional?:
        type: boolean
        default: false
        description: Whether this is an optional attendee. Optional. The default is False.
      id?:
        type: string
        description: The attendee's Profile ID, if available. It corresponds to theid field in the People collection of the Google+ API
      responseStatus?:
        type: string
        description: "The attendee's response status. Possible values are:  \n- \"\
          needsAction\" - The attendee has not responded to the invitation. \n- \"\
          declined\" - The attendee has declined the invitation. \n- \"tentative\"\
          \ - The attendee has tentatively accepted the invitation. \n- \"accepted\"\
          \ - The attendee has accepted the invitation."
      email?:
        type: string
        description: The attendee's email address, if available. This field must be present when adding an attendee. It must be a valid email address as per RFC5322.
  EventDateTime:
    type: object
    properties:
      date?:
        type: string
        description: The date, in the format "yyyy-mm-dd", if this is an all-day event.
      dateTime?:
        type: datetime
        description: The time, as a combined date-time value (formatted according to RFC3339). A time zone offset is required unless a time zone is explicitly specified in timeZone.
      timeZone?:
        type: string
        description: The time zone in which the time is specified. (Formatted as an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring events this field is required and specifies the time zone in which the recurrence is expanded. For single events this field is optional and indicates a custom time zone for the event start/end.
  EventReminder:
    type: object
    properties:
      method?:
        type: string
        description: "The method used by this reminder. Possible values are:  \n-\
          \ \"email\" - Reminders are sent via email. \n- \"sms\" - Reminders are\
          \ sent via SMS. These are only available for Google Apps for Work, Education,\
          \ and Government customers. Requests to set SMS reminders for other account\
          \ types are ignored. \n- \"popup\" - Reminders are sent via a UI popup."
      minutes?:
        type: integer
        format: int32
        description: Number of minutes before the start of the event when the reminder should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).
  Events:
    type: object
    properties:
      summary?:
        type: string
        description: Title of the calendar. Read-only.
      defaultReminders?:
        type: array
        description: The default reminders on the calendar for the authenticated user. These reminders apply to all events on this calendar that do not explicitly override them (i.e. do not have reminders.useDefault set to True).
        items: EventReminder
      kind?:
        type: string
        default: calendar#events
        description: Type of the collection ("calendar#events").
      nextPageToken?:
        type: string
        description: Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
      nextSyncToken?:
        type: string
        description: Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
      accessRole?:
        type: string
        description: "The user's access role for this calendar. Read-only. Possible\
          \ values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\"\
          \ - The user has read access to free/busy information. \n- \"reader\" -\
          \ The user has read access to the calendar. Private events will appear to\
          \ users with reader access, but event details will be hidden. \n- \"writer\"\
          \ - The user has read and write access to the calendar. Private events will\
          \ appear to users with writer access, and event details will be visible.\
          \ \n- \"owner\" - The user has ownership of the calendar. This role has\
          \ all of the permissions of the writer role with the additional ability\
          \ to see and manipulate ACLs."
      description?:
        type: string
        description: Description of the calendar. Read-only.
      timeZone?:
        type: string
        description: The time zone of the calendar. Read-only.
      etag?:
        type: string
        description: ETag of the collection.
      items?:
        type: array
        description: List of events on the calendar.
        items: Event
      updated?:
        type: datetime
        description: Last modification time of the calendar (as a RFC3339 timestamp). Read-only.
  FreeBusyCalendar:
    type: object
    properties:
      busy?:
        type: array
        description: List of time ranges during which this calendar should be regarded as busy.
        items: TimePeriod
      errors?:
        type: array
        description: Optional error(s) (if computation for the calendar failed).
        items: Error
  FreeBusyGroup:
    type: object
    properties:
      calendars?:
        type: array
        description: List of calendars' identifiers within a group.
        items:
          type: string
      errors?:
        type: array
        description: Optional error(s) (if computation for the group failed).
        items: Error
  FreeBusyRequest:
    type: object
    properties:
      timeMax?:
        type: datetime
        description: The end of the interval for the query.
      timeZone?:
        type: string
        default: UTC
        description: Time zone used in the response. Optional. The default is UTC.
      calendarExpansionMax?:
        type: integer
        format: int32
        description: Maximal number of calendars for which FreeBusy information is to be provided. Optional.
      groupExpansionMax?:
        type: integer
        format: int32
        description: Maximal number of calendar identifiers to be provided for a single group. Optional. An error will be returned for a group with more members than this value.
      timeMin?:
        type: datetime
        description: The start of the interval for the query.
      items?:
        type: array
        description: List of calendars and/or groups to query.
        items: FreeBusyRequestItem
  FreeBusyRequestItem:
    type: object
    properties:
      id?:
        type: string
        description: The identifier of a calendar or a group.
  FreeBusyResponse:
    type: object
    properties:
      calendars?:
        type: object
        description: List of free/busy information for calendars.
      kind?:
        type: string
        default: calendar#freeBusy
        description: Type of the resource ("calendar#freeBusy").
      groups?:
        type: object
        description: Expansion of groups.
      timeMax?:
        type: datetime
        description: The end of the interval.
      timeMin?:
        type: datetime
        description: The start of the interval.
  Setting:
    type: object
    properties:
      kind?:
        type: string
        default: calendar#setting
        description: Type of the resource ("calendar#setting").
      etag?:
        type: string
        description: ETag of the resource.
      id?:
        type: string
        description: The id of the user setting.
      value?:
        type: string
        description: Value of the user setting. The format of the value depends on the ID of the setting. It must always be a UTF-8 string of length up to 1024 characters.
  Settings:
    type: object
    properties:
      kind?:
        type: string
        default: calendar#settings
        description: Type of the collection ("calendar#settings").
      nextPageToken?:
        type: string
        description: Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
      nextSyncToken?:
        type: string
        description: Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
      etag?:
        type: string
        description: Etag of the collection.
      items?:
        type: array
        description: List of user settings.
        items: Setting
  TimePeriod:
    type: object
    properties:
      start?:
        type: datetime
        description: The (inclusive) start of the time period.
      end?:
        type: datetime
        description: The (exclusive) end of the time period.
/freeBusy:
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/calendar
        - https://www.googleapis.com/auth/calendar.readonly
    description: Returns free/busy information for a set of calendars.
    displayName: query
    is:
    - hasParameters
    body:
      application/json: FreeBusyRequest
    responses:
      200:
        body:
          application/json: FreeBusyResponse
    (commons.Id): calendar.freebusy.query
    (commons.LogicalStucture):
    - Freebusy
/users:
  /me:
    /settings:
      /watch:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Watch for changes to Settings resources.
          displayName: watch
          is:
          - hasParameters
          queryParameters:
            syncToken?:
              type: string
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
            maxResults?:
              type: integer
              format: int32
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
            pageToken?:
              type: string
              description: Token specifying which result page to return. Optional.
          body:
            application/json: Channel
          responses:
            200:
              body:
                application/json: Channel
          (commons.Id): calendar.settings.watch
          (commons.LogicalStucture):
          - Settings
      /{setting}:
        uriParameters:
          setting:
            type: string
            description: The id of the user setting.
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Returns a single user setting.
          displayName: get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: Setting
          (commons.Id): calendar.settings.get
          (commons.LogicalStucture):
          - Settings
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
            - https://www.googleapis.com/auth/calendar.readonly
        description: Returns all user settings for the authenticated user.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          syncToken?:
            type: string
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
          maxResults?:
            type: integer
            format: int32
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
          pageToken?:
            type: string
            description: Token specifying which result page to return. Optional.
        responses:
          200:
            body:
              application/json: Settings
        (commons.Id): calendar.settings.list
        (commons.LogicalStucture):
        - Settings
    /calendarList:
      /{calendarId}:
        uriParameters:
          calendarId:
            type: string
            description: Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an entry on the user's calendar list. This method supports patch semantics.
          displayName: patch
          is:
          - hasParameters
          queryParameters:
            colorRgbFormat?:
              type: boolean
              description: Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
          body:
            application/json: CalendarListEntry
          responses:
            200:
              body:
                application/json: CalendarListEntry
          (commons.Id): calendar.calendarList.patch
          (commons.LogicalStucture):
          - Calendar List
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Returns an entry on the user's calendar list.
          displayName: get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: CalendarListEntry
          (commons.Id): calendar.calendarList.get
          (commons.LogicalStucture):
          - Calendar List
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an entry on the user's calendar list.
          displayName: update
          is:
          - hasParameters
          queryParameters:
            colorRgbFormat?:
              type: boolean
              description: Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
          body:
            application/json: CalendarListEntry
          responses:
            200:
              body:
                application/json: CalendarListEntry
          (commons.Id): calendar.calendarList.update
          (commons.LogicalStucture):
          - Calendar List
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Deletes an entry on the user's calendar list.
          displayName: delete
          is:
          - hasParameters
          (commons.Id): calendar.calendarList.delete
          (commons.LogicalStucture):
          - Calendar List
      /watch:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Watch for changes to CalendarList resources.
          displayName: watch
          is:
          - hasParameters
          queryParameters:
            showDeleted?:
              type: boolean
              description: Whether to include deleted calendar list entries in the result. Optional. The default is False.
            showHidden?:
              type: boolean
              description: Whether to show hidden entries. Optional. The default is False.
            syncToken?:
              type: string
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
                To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
            maxResults?:
              type: integer
              format: int32
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
            minAccessRole?:
              type: string
              description: The minimum access role for the user in the returned entries. Optional. The default is no restriction.
              (commons.EnumDescriptions):
              - The user can read free/busy information.
              - The user can read and modify events and access control lists.
              - The user can read events that are not private.
              - The user can read and modify events.
              enum:
              - freeBusyReader
              - owner
              - reader
              - writer
            pageToken?:
              type: string
              description: Token specifying which result page to return. Optional.
          body:
            application/json: Channel
          responses:
            200:
              body:
                application/json: Channel
          (commons.Id): calendar.calendarList.watch
          (commons.LogicalStucture):
          - Calendar List
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
        description: Adds an entry to the user's calendar list.
        displayName: insert
        is:
        - hasParameters
        queryParameters:
          colorRgbFormat?:
            type: boolean
            description: Whether to use the foregroundColor and backgroundColor fields to write the calendar colors (RGB). If this feature is used, the index-based colorId field will be set to the best matching option automatically. Optional. The default is False.
        body:
          application/json: CalendarListEntry
        responses:
          200:
            body:
              application/json: CalendarListEntry
        (commons.Id): calendar.calendarList.insert
        (commons.LogicalStucture):
        - Calendar List
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
            - https://www.googleapis.com/auth/calendar.readonly
        description: Returns entries on the user's calendar list.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          showDeleted?:
            type: boolean
            description: Whether to include deleted calendar list entries in the result. Optional. The default is False.
          showHidden?:
            type: boolean
            description: Whether to show hidden entries. Optional. The default is False.
          syncToken?:
            type: string
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. If only read-only fields such as calendar properties or ACLs have changed, the entry won't be returned. All entries deleted and hidden since the previous list request will always be in the result set and it is not allowed to set showDeleted neither showHidden to False.
              To ensure client state consistency minAccessRole query parameter cannot be specified together with nextSyncToken.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
          maxResults?:
            type: integer
            format: int32
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
          minAccessRole?:
            type: string
            description: The minimum access role for the user in the returned entries. Optional. The default is no restriction.
            (commons.EnumDescriptions):
            - The user can read free/busy information.
            - The user can read and modify events and access control lists.
            - The user can read events that are not private.
            - The user can read and modify events.
            enum:
            - freeBusyReader
            - owner
            - reader
            - writer
          pageToken?:
            type: string
            description: Token specifying which result page to return. Optional.
        responses:
          200:
            body:
              application/json: CalendarList
        (commons.Id): calendar.calendarList.list
        (commons.LogicalStucture):
        - Calendar List
/channels:
  /stop:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/calendar
          - https://www.googleapis.com/auth/calendar.readonly
      description: Stop watching resources through this channel
      displayName: stop
      is:
      - hasParameters
      body:
        application/json: Channel
      (commons.Id): calendar.channels.stop
      (commons.LogicalStucture):
      - Channels
/calendars:
  /{calendarId}:
    uriParameters:
      calendarId:
        type: string
        description: Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
    /clear:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
        description: Clears a primary calendar. This operation deletes all events associated with the primary calendar of an account.
        displayName: clear
        is:
        - hasParameters
        (commons.Id): calendar.calendars.clear
        (commons.LogicalStucture):
        - Calendars
    /acl:
      /{ruleId}:
        uriParameters:
          ruleId:
            type: string
            description: ACL rule identifier.
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an access control rule. This method supports patch semantics.
          displayName: patch
          is:
          - hasParameters
          body:
            application/json: AclRule
          responses:
            200:
              body:
                application/json: AclRule
          (commons.Id): calendar.acl.patch
          (commons.LogicalStucture):
          - Acl
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Returns an access control rule.
          displayName: get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: AclRule
          (commons.Id): calendar.acl.get
          (commons.LogicalStucture):
          - Acl
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an access control rule.
          displayName: update
          is:
          - hasParameters
          body:
            application/json: AclRule
          responses:
            200:
              body:
                application/json: AclRule
          (commons.Id): calendar.acl.update
          (commons.LogicalStucture):
          - Acl
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Deletes an access control rule.
          displayName: delete
          is:
          - hasParameters
          (commons.Id): calendar.acl.delete
          (commons.LogicalStucture):
          - Acl
      /watch:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Watch for changes to ACL resources.
          displayName: watch
          is:
          - hasParameters
          queryParameters:
            showDeleted?:
              type: boolean
              description: Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to "none". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.
            syncToken?:
              type: string
              description: |-
                Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
                If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
                Learn more about incremental synchronization.
                Optional. The default is to return all entries.
            maxResults?:
              type: integer
              format: int32
              description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
              minimum: 1
            pageToken?:
              type: string
              description: Token specifying which result page to return. Optional.
          body:
            application/json: Channel
          responses:
            200:
              body:
                application/json: Channel
          (commons.Id): calendar.acl.watch
          (commons.LogicalStucture):
          - Acl
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
        description: Creates an access control rule.
        displayName: insert
        is:
        - hasParameters
        body:
          application/json: AclRule
        responses:
          200:
            body:
              application/json: AclRule
        (commons.Id): calendar.acl.insert
        (commons.LogicalStucture):
        - Acl
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
        description: Returns the rules in the access control list for the calendar.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          showDeleted?:
            type: boolean
            description: Whether to include deleted ACLs in the result. Deleted ACLs are represented by role equal to "none". Deleted ACLs will always be included if syncToken is provided. Optional. The default is False.
          syncToken?:
            type: string
            description: |-
              Token obtained from the nextSyncToken field returned on the last page of results from the previous list request. It makes the result of this list request contain only entries that have changed since then. All entries deleted since the previous list request will always be in the result set and it is not allowed to set showDeleted to False.
              If the syncToken expires, the server will respond with a 410 GONE response code and the client should clear its storage and perform a full synchronization without any syncToken.
              Learn more about incremental synchronization.
              Optional. The default is to return all entries.
          maxResults?:
            type: integer
            format: int32
            description: Maximum number of entries returned on one result page. By default the value is 100 entries. The page size can never be larger than 250 entries. Optional.
            minimum: 1
          pageToken?:
            type: string
            description: Token specifying which result page to return. Optional.
        responses:
          200:
            body:
              application/json: Acl
        (commons.Id): calendar.acl.list
        (commons.LogicalStucture):
        - Acl
    /events:
      /{eventId}:
        uriParameters:
          eventId:
            type: string
            description: Event identifier.
        /move:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/calendar
            description: Moves an event to another calendar, i.e. changes an event's organizer.
            displayName: move
            is:
            - hasParameters
            queryParameters:
              destination:
                type: string
                description: Calendar identifier of the target calendar where the event is to be moved to.
              sendNotifications?:
                type: boolean
                description: Whether to send notifications about the change of the event's organizer. Optional. The default is False.
            responses:
              200:
                body:
                  application/json: Event
            (commons.Id): calendar.events.move
            (commons.LogicalStucture):
            - Events
        /instances:
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/calendar
                - https://www.googleapis.com/auth/calendar.readonly
            description: Returns instances of the specified recurring event.
            displayName: instances
            is:
            - hasParameters
            queryParameters:
              showDeleted?:
                type: boolean
                description: Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events will still be included if singleEvents is False. Optional. The default is False.
              alwaysIncludeEmail?:
                type: boolean
                description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
              maxResults?:
                type: integer
                format: int32
                description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
                minimum: 1
              originalStart?:
                type: string
                description: The original start time of the instance in the result. Optional.
              timeMax?:
                type: datetime
                description: Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset.
              timeZone?:
                type: string
                description: Time zone used in the response. Optional. The default is the time zone of the calendar.
              pageToken?:
                type: string
                description: Token specifying which result page to return. Optional.
              timeMin?:
                type: datetime
                description: Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset.
              maxAttendees?:
                type: integer
                format: int32
                description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
                minimum: 1
            responses:
              200:
                body:
                  application/json: Events
            (commons.Id): calendar.events.instances
            (commons.LogicalStucture):
            - Events
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an event. This method supports patch semantics.
          displayName: patch
          is:
          - hasParameters
          queryParameters:
            supportsAttachments?:
              type: boolean
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
            alwaysIncludeEmail?:
              type: boolean
              description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
            sendNotifications?:
              type: boolean
              description: Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.
            maxAttendees?:
              type: integer
              format: int32
              description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
              minimum: 1
          body:
            application/json: Event
          responses:
            200:
              body:
                application/json: Event
          (commons.Id): calendar.events.patch
          (commons.LogicalStucture):
          - Events
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Returns an event.
          displayName: get
          is:
          - hasParameters
          queryParameters:
            alwaysIncludeEmail?:
              type: boolean
              description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
            timeZone?:
              type: string
              description: Time zone used in the response. Optional. The default is the time zone of the calendar.
            maxAttendees?:
              type: integer
              format: int32
              description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
              minimum: 1
          responses:
            200:
              body:
                application/json: Event
          (commons.Id): calendar.events.get
          (commons.LogicalStucture):
          - Events
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Updates an event.
          displayName: update
          is:
          - hasParameters
          queryParameters:
            supportsAttachments?:
              type: boolean
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
            alwaysIncludeEmail?:
              type: boolean
              description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
            sendNotifications?:
              type: boolean
              description: Whether to send notifications about the event update (e.g. attendee's responses, title changes, etc.). Optional. The default is False.
            maxAttendees?:
              type: integer
              format: int32
              description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
              minimum: 1
          body:
            application/json: Event
          responses:
            200:
              body:
                application/json: Event
          (commons.Id): calendar.events.update
          (commons.LogicalStucture):
          - Events
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Deletes an event.
          displayName: delete
          is:
          - hasParameters
          queryParameters:
            sendNotifications?:
              type: boolean
              description: Whether to send notifications about the deletion of the event. Optional. The default is False.
          (commons.Id): calendar.events.delete
          (commons.LogicalStucture):
          - Events
      /import:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Imports an event. This operation is used to add a private copy of an existing event to a calendar.
          displayName: import
          is:
          - hasParameters
          queryParameters:
            supportsAttachments?:
              type: boolean
              description: Whether API client performing operation supports event attachments. Optional. The default is False.
          body:
            application/json: Event
          responses:
            200:
              body:
                application/json: Event
          (commons.Id): calendar.events.import
          (commons.LogicalStucture):
          - Events
      /watch:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.readonly
          description: Watch for changes to Events resources.
          displayName: watch
          is:
          - hasParameters
          queryParameters:
            syncToken?:
              type: string
              description: "Token obtained from the nextSyncToken field returned on\
                \ the last page of results from the previous list request. It makes\
                \ the result of this list request contain only entries that have changed\
                \ since then. All events deleted since the previous list request will\
                \ always be in the result set and it is not allowed to set showDeleted\
                \ to False.\nThere are several query parameters that cannot be specified\
                \ together with nextSyncToken to ensure consistency of the client\
                \ state.\n\nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty\
                \ \n- q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin\
                \ If the syncToken expires, the server will respond with a 410 GONE\
                \ response code and the client should clear its storage and perform\
                \ a full synchronization without any syncToken.\nLearn more about\
                \ incremental synchronization.\nOptional. The default is to return\
                \ all entries."
            iCalUID?:
              type: string
              description: Specifies event ID in the iCalendar format to be included in the response. Optional.
            sharedExtendedProperty?:
              type: string
              description: Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
            orderBy?:
              type: string
              description: The order of the events returned in the result. Optional. The default is an unspecified, stable order.
              (commons.EnumDescriptions):
              - Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)
              - Order by last modification time (ascending).
              enum:
              - startTime
              - updated
            timeZone?:
              type: string
              description: Time zone used in the response. Optional. The default is the time zone of the calendar.
            showHiddenInvitations?:
              type: boolean
              description: Whether to include hidden invitations in the result. Optional. The default is False.
            timeMin?:
              type: datetime
              description: Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.
            q?:
              type: string
              description: Free text search terms to find events that match these terms in any field, except for extended properties. Optional.
            showDeleted?:
              type: boolean
              description: Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
            singleEvents?:
              type: boolean
              description: Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
            updatedMin?:
              type: datetime
              description: Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.
            alwaysIncludeEmail?:
              type: boolean
              description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
            maxResults?:
              type: integer
              default: 250
              format: int32
              description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
              minimum: 1
            privateExtendedProperty?:
              type: string
              description: Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
            timeMax?:
              type: datetime
              description: Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.
            pageToken?:
              type: string
              description: Token specifying which result page to return. Optional.
            maxAttendees?:
              type: integer
              format: int32
              description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
              minimum: 1
          body:
            application/json: Channel
          responses:
            200:
              body:
                application/json: Channel
          (commons.Id): calendar.events.watch
          (commons.LogicalStucture):
          - Events
      /quickAdd:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/calendar
          description: Creates an event based on a simple text string.
          displayName: quick Add
          is:
          - hasParameters
          queryParameters:
            sendNotifications?:
              type: boolean
              description: Whether to send notifications about the creation of the event. Optional. The default is False.
            text:
              type: string
              description: The text describing the event to be created.
          responses:
            200:
              body:
                application/json: Event
          (commons.Id): calendar.events.quickAdd
          (commons.LogicalStucture):
          - Events
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
        description: Creates an event.
        displayName: insert
        is:
        - hasParameters
        queryParameters:
          supportsAttachments?:
            type: boolean
            description: Whether API client performing operation supports event attachments. Optional. The default is False.
          sendNotifications?:
            type: boolean
            description: Whether to send notifications about the creation of the new event. Optional. The default is False.
          maxAttendees?:
            type: integer
            format: int32
            description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
            minimum: 1
        body:
          application/json: Event
        responses:
          200:
            body:
              application/json: Event
        (commons.Id): calendar.events.insert
        (commons.LogicalStucture):
        - Events
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/calendar
            - https://www.googleapis.com/auth/calendar.readonly
        description: Returns events on the specified calendar.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          syncToken?:
            type: string
            description: "Token obtained from the nextSyncToken field returned on\
              \ the last page of results from the previous list request. It makes\
              \ the result of this list request contain only entries that have changed\
              \ since then. All events deleted since the previous list request will\
              \ always be in the result set and it is not allowed to set showDeleted\
              \ to False.\nThere are several query parameters that cannot be specified\
              \ together with nextSyncToken to ensure consistency of the client state.\n\
              \nThese are: \n- iCalUID \n- orderBy \n- privateExtendedProperty \n\
              - q \n- sharedExtendedProperty \n- timeMin \n- timeMax \n- updatedMin\
              \ If the syncToken expires, the server will respond with a 410 GONE\
              \ response code and the client should clear its storage and perform\
              \ a full synchronization without any syncToken.\nLearn more about incremental\
              \ synchronization.\nOptional. The default is to return all entries."
          iCalUID?:
            type: string
            description: Specifies event ID in the iCalendar format to be included in the response. Optional.
          sharedExtendedProperty?:
            type: string
            description: Extended properties constraint specified as propertyName=value. Matches only shared properties. This parameter might be repeated multiple times to return events that match all given constraints.
          orderBy?:
            type: string
            description: The order of the events returned in the result. Optional. The default is an unspecified, stable order.
            (commons.EnumDescriptions):
            - Order by the start date/time (ascending). This is only available when querying single events (i.e. the parameter singleEvents is True)
            - Order by last modification time (ascending).
            enum:
            - startTime
            - updated
          timeZone?:
            type: string
            description: Time zone used in the response. Optional. The default is the time zone of the calendar.
          showHiddenInvitations?:
            type: boolean
            description: Whether to include hidden invitations in the result. Optional. The default is False.
          timeMin?:
            type: datetime
            description: Lower bound (inclusive) for an event's end time to filter by. Optional. The default is not to filter by end time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.
          q?:
            type: string
            description: Free text search terms to find events that match these terms in any field, except for extended properties. Optional.
          showDeleted?:
            type: boolean
            description: Whether to include deleted events (with status equals "cancelled") in the result. Cancelled instances of recurring events (but not the underlying recurring event) will still be included if showDeleted and singleEvents are both False. If showDeleted and singleEvents are both True, only single instances of deleted events (but not the underlying recurring events) are returned. Optional. The default is False.
          singleEvents?:
            type: boolean
            description: Whether to expand recurring events into instances and only return single one-off events and instances of recurring events, but not the underlying recurring events themselves. Optional. The default is False.
          updatedMin?:
            type: datetime
            description: Lower bound for an event's last modification time (as a RFC3339 timestamp) to filter by. When specified, entries deleted since this time will always be included regardless of showDeleted. Optional. The default is not to filter by last modification time.
          alwaysIncludeEmail?:
            type: boolean
            description: Whether to always include a value in the email field for the organizer, creator and attendees, even if no real email is available (i.e. a generated, non-working value will be provided). The use of this option is discouraged and should only be used by clients which cannot handle the absence of an email address value in the mentioned places. Optional. The default is False.
          maxResults?:
            type: integer
            default: 250
            format: int32
            description: Maximum number of events returned on one result page. By default the value is 250 events. The page size can never be larger than 2500 events. Optional.
            minimum: 1
          privateExtendedProperty?:
            type: string
            description: Extended properties constraint specified as propertyName=value. Matches only private properties. This parameter might be repeated multiple times to return events that match all given constraints.
          timeMax?:
            type: datetime
            description: Upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. Must be an RFC3339 timestamp with mandatory time zone offset, e.g., 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but will be ignored.
          pageToken?:
            type: string
            description: Token specifying which result page to return. Optional.
          maxAttendees?:
            type: integer
            format: int32
            description: The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
            minimum: 1
        responses:
          200:
            body:
              application/json: Events
        (commons.Id): calendar.events.list
        (commons.LogicalStucture):
        - Events
    patch:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/calendar
      description: Updates metadata for a calendar. This method supports patch semantics.
      displayName: patch
      is:
      - hasParameters
      body:
        application/json: Calendar
      responses:
        200:
          body:
            application/json: Calendar
      (commons.Id): calendar.calendars.patch
      (commons.LogicalStucture):
      - Calendars
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/calendar
          - https://www.googleapis.com/auth/calendar.readonly
      description: Returns metadata for a calendar.
      displayName: get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Calendar
      (commons.Id): calendar.calendars.get
      (commons.LogicalStucture):
      - Calendars
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/calendar
      description: Updates metadata for a calendar.
      displayName: update
      is:
      - hasParameters
      body:
        application/json: Calendar
      responses:
        200:
          body:
            application/json: Calendar
      (commons.Id): calendar.calendars.update
      (commons.LogicalStucture):
      - Calendars
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/calendar
      description: Deletes a secondary calendar. Use calendars.clear for clearing all events on primary calendars.
      displayName: delete
      is:
      - hasParameters
      (commons.Id): calendar.calendars.delete
      (commons.LogicalStucture):
      - Calendars
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/calendar
    description: Creates a secondary calendar.
    displayName: insert
    is:
    - hasParameters
    body:
      application/json: Calendar
    responses:
      200:
        body:
          application/json: Calendar
    (commons.Id): calendar.calendars.insert
    (commons.LogicalStucture):
    - Calendars
/colors:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/calendar
        - https://www.googleapis.com/auth/calendar.readonly
    description: Returns the color definitions for calendars and events.
    displayName: get
    is:
    - hasParameters
    responses:
      200:
        body:
          application/json: Colors
    (commons.Id): calendar.colors.get
    (commons.LogicalStucture):
    - Colors
