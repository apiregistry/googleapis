#%RAML 1.0
title: Google Partners API
version: v2
baseUri: https://partners.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/partners/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): partners:v2
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
types:
  CertificationExamStatus:
    type: object
    properties:
      numberUsersPass?:
        type: integer
        format: int32
        description: The number of people who have passed the certification exam.
      type?:
        type: string
        description: The type of certification exam.
        enum:
        - CERTIFICATION_EXAM_TYPE_UNSPECIFIED
        - CET_ADWORDS_ADVANCED_SEARCH
        - CET_ADWORDS_ADVANCED_DISPLAY
        - CET_VIDEO_ADS
        - CET_ANALYTICS
        - CET_DOUBLECLICK
        - CET_SHOPPING
        - CET_MOBILE
    description: Status for a Google Partners certification exam.
  CertificationStatus:
    type: object
    properties:
      isCertified?:
        type: boolean
        description: Whether certification is passing.
      examStatuses?:
        type: array
        description: List of certification exam statuses.
        items: CertificationExamStatus
      type?:
        type: string
        description: The type of the certification.
        enum:
        - CERTIFICATION_TYPE_UNSPECIFIED
        - CT_ADWORDS
        - CT_YOUTUBE
        - CT_VIDEOADS
        - CT_ANALYTICS
        - CT_DOUBLECLICK
        - CT_SHOPPING
        - CT_MOBILE
    description: Google Partners certification status.
  Company:
    type: object
    properties:
      localizedInfos?:
        type: array
        description: The list of localized info for the company.
        items: LocalizedCompanyInfo
      originalMinMonthlyBudget?: Money
      ranks?:
        type: array
        description: Information related to the ranking of the company within the list of companies.
        items: Rank
      certificationStatuses?:
        type: array
        description: The list of Google Partners certification statuses for the company.
        items: CertificationStatus
      websiteUrl?:
        type: string
        description: URL of the company's website.
      industries?:
        type: array
        description: Industries the company can help with.
        items:
          type: string
          enum:
          - INDUSTRY_UNSPECIFIED
          - I_AUTOMOTIVE
          - I_BUSINESS_TO_BUSINESS
          - I_CONSUMER_PACKAGED_GOODS
          - I_EDUCATION
          - I_FINANCE
          - I_HEALTHCARE
          - I_MEDIA_AND_ENTERTAINMENT
          - I_RETAIL
          - I_TECHNOLOGY
          - I_TRAVEL
      name?:
        type: string
        description: The name of the company.
      convertedMinMonthlyBudget?: Money
      publicProfile?: PublicProfile
      locations?:
        type: array
        description: The list of company locations.
        items: Location
      id?:
        type: string
        description: The ID of the company.
      services?:
        type: array
        description: Services the company can help with.
        items:
          type: string
          enum:
          - SERVICE_UNSPECIFIED
          - S_ADVANCED_ADWORDS_SUPPORT
          - S_ADVERTISING_ON_GOOGLE
          - S_AN_ENHANCED_WEBSITE
          - S_AN_ONLINE_MARKETING_PLAN
          - S_MOBILE_AND_VIDEO_ADS
    description: A company resource in the Google Partners API. Once certified, it qualifies for being searched by advertisers.
  CreateLeadRequest:
    type: object
    properties:
      requestMetadata?: RequestMetadata
      recaptchaChallenge?: RecaptchaChallenge
      lead?: Lead
    description: Request message for CreateLead.
  CreateLeadResponse:
    type: object
    properties:
      responseMetadata?: ResponseMetadata
      lead?: Lead
      recaptchaStatus?:
        type: string
        description: The outcome of reCaptcha validation.
        enum:
        - RECAPTCHA_STATUS_UNSPECIFIED
        - RS_NOT_NEEDED
        - RS_PASSED
        - RS_FAILED
    description: Response message for CreateLead. Debug information about this request.
  DebugInfo:
    type: object
    properties:
      serverInfo?:
        type: string
        description: Info about the server that serviced this request.
      serverTraceInfo?:
        type: string
        description: Server-side debug stack trace.
      serviceUrl?:
        type: string
        description: URL of the service that handled this request.
    description: Debug information about this request.
  EventData:
    type: object
    properties:
      values?:
        type: array
        description: Data values.
        items:
          type: string
      key?:
        type: string
        description: Data type.
        enum:
        - EVENT_DATA_TYPE_UNSPECIFIED
        - ACTION
        - AGENCY_ID
        - AGENCY_NAME
        - AGENCY_PHONE_NUMBER
        - AGENCY_WEBSITE
        - BUDGET
        - CENTER_POINT
        - CERTIFICATION
        - COMMENT
        - COUNTRY
        - CURRENCY
        - CURRENTLY_VIEWED_AGENCY_ID
        - DISTANCE
        - DISTANCE_TYPE
        - EXAM
        - HISTORY_TOKEN
        - IDENTIFIER
        - INDUSTRY
        - INSIGHT_TAG
        - LANGUAGE
        - LOCATION
        - MARKETING_OPT_IN
        - QUERY
        - SEARCH_START_INDEX
        - SERVICE
        - SHOW_VOW
        - SOLUTION
        - TRAFFIC_SOURCE_ID
        - TRAFFIC_SUB_ID
        - VIEW_PORT
        - WEBSITE
        - DETAILS
        - EXPERIMENT_ID
        - GPS_MOTIVATION
        - URL
        - ELEMENT_FOCUS
        - PROGRESS
    description: Key value data pair for an event.
  GetCompanyResponse:
    type: object
    properties:
      company?: Company
      responseMetadata?: ResponseMetadata
    description: Response message for GetCompany.
  LatLng:
    type: object
    properties:
      latitude?:
        type: number
        format: double
        description: The latitude in degrees. It must be in the range [-90.0, +90.0].
      longitude?:
        type: number
        format: double
        description: The longitude in degrees. It must be in the range [-180.0, +180.0].
    description: 'An object representing a latitude/longitude pair. This is expressed
      as a pair of doubles representing degrees latitude and degrees longitude. Unless
      specified otherwise, this must conform to the WGS84 standard. Values must be
      within normalized ranges. Example of normalization code in Python: def NormalizeLongitude(longitude):
      """Wrapsdecimal degrees longitude to [-180.0, 180.0].""" q, r = divmod(longitude,
      360.0) if r > 180.0 or (r == 180.0 and q <= -1.0): return r - 360.0 return r
      def NormalizeLatLng(latitude, longitude): """Wraps decimal degrees latitude
      and longitude to [-180.0, 180.0] and [-90.0, 90.0], respectively.""" r = latitude
      % 360.0 if r = 270.0: return r - 360, NormalizeLongitude(longitude) else: return
      180 - r, NormalizeLongitude(longitude + 180.0) assert 180.0 == NormalizeLongitude(180.0)
      assert -180.0 == NormalizeLongitude(-180.0) assert -179.0 == NormalizeLongitude(181.0)
      assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0) assert (0.0, 0.0) == NormalizeLatLng(-360.0,
      0.0) assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0) assert (-85.0, -170.0)
      == NormalizeLatLng(-95.0, 10.0) assert (90.0, 10.0) == NormalizeLatLng(90.0,
      10.0) assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0) assert (0.0, -170.0)
      == NormalizeLatLng(-180.0, 10.0) assert (0.0, -170.0) == NormalizeLatLng(180.0,
      10.0) assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0) assert (90.0, 10.0)
      == NormalizeLatLng(-270.0, 10.0)'
  Lead:
    type: object
    properties:
      minMonthlyBudget?: Money
      phoneNumber?:
        type: string
        description: Phone number of lead source.
      comments?:
        type: string
        description: Comments lead source gave.
      websiteUrl?:
        type: string
        description: Website URL of lead source.
      gpsMotivations?:
        type: array
        description: List of reasons for using Google Partner Search and creating a lead.
        items:
          type: string
          enum:
          - GPS_MOTIVATION_UNSPECIFIED
          - GPSM_HELP_WITH_ADVERTISING
          - GPSM_HELP_WITH_WEBSITE
          - GPSM_NO_WEBSITE
      givenName?:
        type: string
        description: First name of lead source.
      familyName?:
        type: string
        description: Last name of lead source.
      id?:
        type: string
        description: ID of the lead.
      type?:
        type: string
        description: Type of lead.
        enum:
        - LEAD_TYPE_UNSPECIFIED
        - LT_GPS
      email?:
        type: string
        description: Email address of lead source.
    description: A lead resource that represents an advertiser contact for a `Company`. These are usually generated via Google Partner Search (the advertiser portal).
  ListCompaniesResponse:
    type: object
    properties:
      companies?:
        type: array
        description: The list of companies.
        items: Company
      nextPageToken?:
        type: string
        description: A token to retrieve next page of results. Pass this value in the `ListCompaniesRequest.page_token` field in the subsequent call to ListCompanies to retrieve the next page of results.
      responseMetadata?: ResponseMetadata
    description: Response message for ListCompanies.
  ListUserStatesResponse:
    type: object
    properties:
      userStates?:
        type: array
        description: User's states.
        items:
          type: string
          enum:
          - USER_STATE_UNSPECIFIED
          - US_REQUIRES_RECAPTCHA_FOR_GPS_CONTACT
      responseMetadata?: ResponseMetadata
    description: Response message for ListUserStates.
  LocalizedCompanyInfo:
    type: object
    properties:
      overview?:
        type: string
        description: Localized brief description that the company uses to advertise themselves.
      countryCodes?:
        type: array
        description: List of country codes for the localized company info.
        items:
          type: string
      displayName?:
        type: string
        description: Localized display name.
      languageCode?:
        type: string
        description: Language code of the localized company info, as defined by BCP 47 (IETF BCP 47, "Tags for Identifying Languages").
    description: The localized company information.
  Location:
    type: object
    properties:
      address?:
        type: string
        description: The complete address of the location.
      latLng?: LatLng
    description: A location with address and geographic coordinates.
  LogMessageRequest:
    type: object
    properties:
      requestMetadata?: RequestMetadata
      level?:
        type: string
        description: Message level of client message.
        enum:
        - MESSAGE_LEVEL_UNSPECIFIED
        - ML_FINE
        - ML_INFO
        - ML_WARNING
        - ML_SEVERE
      clientInfo?:
        type: object
        description: Map of client info, such as URL, browser navigator, browser platform, etc.
      details?:
        type: string
        description: Details about the client message.
    description: Request message for LogClientMessage.
  LogMessageResponse:
    type: object
    properties:
      responseMetadata?: ResponseMetadata
    description: Response message for LogClientMessage.
  LogUserEventRequest:
    type: object
    properties:
      requestMetadata?: RequestMetadata
      eventScope?:
        type: string
        description: The scope of the event.
        enum:
        - EVENT_SCOPE_UNSPECIFIED
        - VISITOR
        - SESSION
        - PAGE
      eventCategory?:
        type: string
        description: The category the action belongs to.
        enum:
        - EVENT_CATEGORY_UNSPECIFIED
        - GOOGLE_PARTNER_SEARCH
        - GOOGLE_PARTNER_SIGNUP_FLOW
        - GOOGLE_PARTNER_PORTAL
        - GOOGLE_PARTNER_PORTAL_MY_PROFILE
        - GOOGLE_PARTNER_PORTAL_CERTIFICATIONS
        - GOOGLE_PARTNER_PORTAL_COMMUNITY
        - GOOGLE_PARTNER_PORTAL_INSIGHTS
        - GOOGLE_PARTNER_PORTAL_CLIENTS
        - GOOGLE_PARTNER_PUBLIC_USER_PROFILE
        - GOOGLE_PARTNER_PANEL
        - GOOGLE_PARTNER_PORTAL_LAST_ADMIN_DIALOG
        - GOOGLE_PARTNER_CLIENT
        - GOOGLE_PARTNER_PORTAL_COMPANY_PROFILE
        - EXTERNAL_LINKS
        - GOOGLE_PARTNER_LANDING
      eventDatas?:
        type: array
        description: List of event data for the event.
        items: EventData
      eventAction?:
        type: string
        description: The action that occurred.
        enum:
        - EVENT_ACTION_UNSPECIFIED
        - SMB_CLICKED_FIND_A_PARTNER_BUTTON_BOTTOM
        - SMB_CLICKED_FIND_A_PARTNER_BUTTON_TOP
        - AGENCY_CLICKED_JOIN_NOW_BUTTON_BOTTOM
        - AGENCY_CLICKED_JOIN_NOW_BUTTON_TOP
        - SMB_CANCELED_PARTNER_CONTACT_FORM
        - SMB_CLICKED_CONTACT_A_PARTNER
        - SMB_COMPLETED_PARTNER_CONTACT_FORM
        - SMB_ENTERED_EMAIL_IN_CONTACT_PARTNER_FORM
        - SMB_ENTERED_NAME_IN_CONTACT_PARTNER_FORM
        - SMB_ENTERED_PHONE_IN_CONTACT_PARTNER_FORM
        - SMB_FAILED_RECAPTCHA_IN_CONTACT_PARTNER_FORM
        - PARTNER_VIEWED_BY_SMB
        - SMB_CANCELED_PARTNER_CONTACT_FORM_ON_GPS
        - SMB_CHANGED_A_SEARCH_PARAMETER_TOP
        - SMB_CLICKED_CONTACT_A_PARTNER_ON_GPS
        - SMB_CLICKED_SHOW_MORE_PARTNERS_BUTTON_BOTTOM
        - SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_GPS
        - SMB_NO_PARTNERS_AVAILABLE_WITH_SEARCH_CRITERIA
        - SMB_PERFORMED_SEARCH_ON_GPS
        - SMB_VIEWED_A_PARTNER_ON_GPS
        - SMB_CANCELED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE
        - SMB_CLICKED_CONTACT_A_PARTNER_ON_PROFILE_PAGE
        - SMB_CLICKED_PARTNER_WEBSITE
        - SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE
        - SMB_VIEWED_A_PARTNER_PROFILE
        - AGENCY_CLICKED_ACCEPT_TOS_BUTTON
        - AGENCY_CHANGED_TOS_COUNTRY
        - AGENCY_ADDED_ADDRESS_IN_MY_PROFILE_PORTAL
        - AGENCY_ADDED_PHONE_NUMBER_IN_MY_PROFILE_PORTAL
        - AGENCY_CHANGED_PRIMARY_ACCOUNT_ASSOCIATION
        - AGENCY_CHANGED_PRIMARY_COUNTRY_ASSOCIATION
        - AGENCY_CLICKED_AFFILIATE_BUTTON_IN_MY_PROFILE_IN_PORTAL
        - AGENCY_CLICKED_GIVE_EDIT_ACCESS_IN_MY_PROFILE_PORTAL
        - AGENCY_CLICKED_LOG_OUT_IN_MY_PROFILE_PORTAL
        - AGENCY_CLICKED_MY_PROFILE_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_COMPLETE_PROFILE
        - AGENCY_CLICKED_UNAFFILIATE_IN_MY_PROFILE_PORTAL
        - AGENCY_FILLED_OUT_COMP_AFFILIATION_IN_MY_PROFILE_PORTAL
        - AGENCY_SUCCESSFULLY_CONNECTED_WITH_COMPANY_IN_MY_PROFILE
        - AGENCY_CLICKED_CREATE_MCC_IN_MY_PROFILE_PORTAL
        - AGENCY_DIDNT_HAVE_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE
        - AGENCY_HAD_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE
        - AGENCY_ADDED_JOB_FUNCTION_IN_MY_PROFILE_PORTAL
        - AGENCY_LOOKED_AT_JOB_FUNCTION_DROP_DOWN
        - AGENCY_SELECTED_ACCOUNT_MANAGER_AS_JOB_FUNCTION
        - AGENCY_SELECTED_ACCOUNT_PLANNER_AS_JOB_FUNCTION
        - AGENCY_SELECTED_ANALYTICS_AS_JOB_FUNCTION
        - AGENCY_SELECTED_CREATIVE_AS_JOB_FUNCTION
        - AGENCY_SELECTED_MEDIA_BUYER_AS_JOB_FUNCTION
        - AGENCY_SELECTED_MEDIA_PLANNER_AS_JOB_FUNCTION
        - AGENCY_SELECTED_OTHER_AS_JOB_FUNCTION
        - AGENCY_SELECTED_PRODUCTION_AS_JOB_FUNCTION
        - AGENCY_SELECTED_SEO_AS_JOB_FUNCTION
        - AGENCY_SELECTED_SALES_REP_AS_JOB_FUNCTION
        - AGENCY_SELECTED_SEARCH_SPECIALIST_AS_JOB_FUNCTION
        - AGENCY_ADDED_CHANNELS_IN_MY_PROFILE_PORTAL
        - AGENCY_LOOKED_AT_ADD_CHANNEL_DROP_DOWN
        - AGENCY_SELECTED_CROSS_CHANNEL_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_DISPLAY_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_MOBILE_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_SEARCH_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_SOCIAL_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_TOOLS_FROM_ADD_CHANNEL
        - AGENCY_SELECTED_YOUTUBE_FROM_ADD_CHANNEL
        - AGENCY_ADDED_INDUSTRIES_IN_MY_PROFILE_PORTAL
        - AGENCY_CHANGED_ADD_INDUSTRIES_DROP_DOWN
        - AGENCY_ADDED_MARKETS_IN_MY_PROFILE_PORTAL
        - AGENCY_CHANGED_ADD_MARKETS_DROP_DOWN
        - AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_MYPROFILE
        - AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_SIGNUP
        - AGENCY_SELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH
        - AGENCY_SELECTED_OPT_IN_BETA_TESTS_IN_MY_PROFILE_PORTAL
        - AGENCY_SELECTED_OPT_IN_NEWS_IN_MY_PROFILE_PORTAL
        - AGENCY_SELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS
        - AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUG_IN_MY_PROFILE_PORTAL
        - AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS
        - AGENCY_SELECTED_OPT_IN_SELECT_ALL_EMAIL_NOTIFICATIONS
        - AGENCY_SELECTED_SELECT_ALL_OPT_INS_IN_MY_PROFILE_PORTAL
        - AGENCY_CLICKED_BACK_BUTTON_ON_CONNECT_WITH_COMPANY
        - AGENCY_CLICKED_CONTINUE_TO_OVERVIEW_ON_CONNECT_WITH_COMPANY
        - AGECNY_CLICKED_CREATE_MCC_CONNECT_WITH_COMPANY_NOT_FOUND
        - AGECNY_CLICKED_GIVE_EDIT_ACCESS_CONNECT_WITH_COMPANY_NOT_FOUND
        - AGECNY_CLICKED_LOG_OUT_CONNECT_WITH_COMPANY_NOT_FOUND
        - AGENCY_CLICKED_SKIP_FOR_NOW_ON_CONNECT_WITH_COMPANY_PAGE
        - AGENCY_CLOSED_CONNECTED_TO_COMPANY_X_BUTTON_WRONG_COMPANY
        - AGENCY_COMPLETED_FIELD_CONNECT_WITH_COMPANY
        - AGECNY_FOUND_COMPANY_TO_CONNECT_WITH
        - AGENCY_SUCCESSFULLY_CREATED_COMPANY
        - AGENCY_ADDED_NEW_COMPANY_LOCATION
        - AGENCY_CLICKED_COMMUNITY_JOIN_NOW_LINK_IN_PORTAL_NOTIFICATIONS
        - AGENCY_CLICKED_CONNECT_TO_COMPANY_LINK_IN_PORTAL_NOTIFICATIONS
        - AGENCY_CLICKED_GET_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS
        - AGENCY_CLICKED_GET_VIDEO_ADS_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS
        - AGENCY_CLICKED_LINK_TO_MCC_LINK_IN_PORTAL_NOTIFICATIONS
        - AGENCY_CLICKED_INSIGHT_CONTENT_IN_PORTAL
        - AGENCY_CLICKED_INSIGHTS_VIEW_NOW_PITCH_DECKS_IN_PORTAL
        - AGENCY_CLICKED_INSIGHTS_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_INSIGHTS_UPLOAD_CONTENT
        - AGENCY_CLICKED_INSIGHTS_VIEWED_DEPRECATED
        - AGENCY_CLICKED_COMMUNITY_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_JOIN_COMMUNITY_BUTTON_COMMUNITY_PORTAL
        - AGENCY_CLICKED_CERTIFICATIONS_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_CERTIFICATIONS_PRODUCT_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_PARTNER_STATUS_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_PARTNER_STATUS_PRODUCT_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_OFFERS_LEFT_NAV_IN_PORTAL
        - AGENCY_CLICKED_SEND_BUTTON_ON_OFFERS_PAGE
        - AGENCY_CLICKED_EXAM_DETAILS_ON_CERT_ADWORDS_PAGE
        - AGENCY_CLICKED_SEE_EXAMS_CERTIFICATION_MAIN_PAGE
        - AGENCY_CLICKED_TAKE_EXAM_ON_CERT_EXAM_PAGE
        - AGENCY_OPENED_LAST_ADMIN_DIALOG
        - AGENCY_OPENED_DIALOG_WITH_NO_USERS
        - AGENCY_PROMOTED_USER_TO_ADMIN
        - AGENCY_UNAFFILIATED
        - AGENCY_CHANGED_ROLES
        - SMB_CLICKED_COMPANY_NAME_LINK_TO_PROFILE
        - SMB_VIEWED_ADWORDS_CERTIFICATE
        - SMB_CLICKED_ADWORDS_CERTIFICATE_HELP_ICON
        - SMB_VIEWED_ANALYTICS_CERTIFICATE
        - SMB_VIEWED_DOUBLECLICK_CERTIFICATE
        - SMB_VIEWED_VIDEO_ADS_CERTIFICATE
        - SMB_VIEWED_SHOPPING_CERTIFICATE
        - SMB_CLICKED_VIDEO_ADS_CERTIFICATE_HELP_ICON
        - CLICKED_HELP_AT_BOTTOM
        - CLICKED_HELP_AT_TOP
        - CLIENT_ERROR
        - AGENCY_CLICKED_LEFT_NAV_STORIES
        - CLICKED
        - SMB_VIEWED_MOBILE_CERTIFICATE
        - AGENCY_FAILED_COMPANY_VERIFICATION
        - VISITED_LANDING
        - VISITED_GPS
        - VISITED_AGENCY_PORTAL
        - CANCELLED_INDIVIDUAL_SIGN_UP
        - CANCELLED_COMPANY_SIGN_UP
        - AGENCY_CLICKED_SIGN_IN_BUTTON_TOP
        - AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_INCOMPLETE_PROFILE
        - AGENCY_UNSELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS
        - AGENCY_UNSELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH
        - AGENCY_UNSELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS
        - AGENCY_SELECTED_OPT_OUT_UNSELECT_ALL_EMAIL_NOTIFICATIONS
        - AGENCY_LINKED_INDIVIDUAL_MCC
        - AGENCY_SUGGESTED_TO_USER
        - AGENCY_IGNORED_SUGGESTED_AGENCIES_AND_SEARCHED
        - AGENCY_PICKED_SUGGESTED_AGENCY
        - AGENCY_SEARCHED_FOR_AGENCIES
        - AGENCY_PICKED_SEARCHED_AGENCY
        - AGENCY_DISMISSED_AFFILIATION_WIDGET
        - AGENCY_CLICKED_INSIGHTS_DOWNLOAD_CONTENT
        - AGENCY_PROGRESS_INSIGHTS_VIEW_CONTENT
        - AGENCY_CLICKED_CANCEL_ACCEPT_TOS_BUTTON
        - SMB_ENTERED_WEBSITE_IN_CONTACT_PARTNER_FORM
      url?:
        type: string
        description: The URL where the event occurred.
      lead?: Lead
    description: Request message for LogUserEvent.
  LogUserEventResponse:
    type: object
    properties:
      responseMetadata?: ResponseMetadata
    description: Response message for LogUserEvent.
  Money:
    type: object
    properties:
      nanos?:
        type: integer
        format: int32
        description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
      units?:
        type: integer
        format: int64
        description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      currencyCode?:
        type: string
        description: The 3-letter currency code defined in ISO 4217.
    description: Represents an amount of money with its currency type.
  PublicProfile:
    type: object
    properties:
      displayImageUrl?:
        type: string
        description: The URL to the main display image of the public profile.
      displayName?:
        type: string
        description: The display name of the public profile.
      id?:
        type: string
        description: The ID which can be used to retrieve more details about the public profile.
      url?:
        type: string
        description: The URL of the public profile.
    description: Basic information from a public profile.
  Rank:
    type: object
    properties:
      type?:
        type: string
        description: The type of rank.
        enum:
        - RANK_TYPE_UNSPECIFIED
        - RT_FINAL_SCORE
      value?:
        type: number
        format: double
        description: The numerical value of the rank.
    description: Information related to ranking of results.
  RecaptchaChallenge:
    type: object
    properties:
      response?:
        type: string
        description: The response to the reCaptcha challenge.
      id?:
        type: string
        description: The ID of the reCaptcha challenge.
    description: reCaptcha challenge info.
  RequestMetadata:
    type: object
    properties:
      userOverrides?: UserOverrides
      experimentIds?:
        type: array
        description: Experiment IDs the current request belongs to.
        items:
          type: string
      partnersSessionId?:
        type: string
        description: Google Partners session ID.
      trafficSource?: TrafficSource
      locale?:
        type: string
        description: Locale to use for the current request.
    description: Common data that is in each API request.
  ResponseMetadata:
    type: object
    properties:
      debugInfo?: DebugInfo
    description: Common data that is in each API response.
  TrafficSource:
    type: object
    properties:
      trafficSubId?:
        type: string
        description: Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
      trafficSourceId?:
        type: string
        description: Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
    description: Source of traffic for the current request.
  UserOverrides:
    type: object
    properties:
      ipAddress?:
        type: string
        description: IP address to use instead of the user's geo-located IP address.
      userId?:
        type: string
        description: Logged-in user ID to impersonate instead of the user's ID.
    description: Values to use instead of the user's respective defaults. These are only honored by whitelisted products.
/v2:
  /companies:
    /{companyId}:
      uriParameters:
        companyId:
          type: string
          description: The ID of the company to retrieve.
      get:
        description: Gets a company.
        is:
        - hasParameters
        queryParameters:
          requestMetadata.locale?:
            type: string
            description: Locale to use for the current request.
          requestMetadata.trafficSource.trafficSourceId?:
            type: string
            description: Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
          requestMetadata.userOverrides.userId?:
            type: string
            description: Logged-in user ID to impersonate instead of the user's ID.
          view?:
            type: string
            description: The view of `Company` resource to be returned. This must not be `COMPANY_VIEW_UNSPECIFIED`.
            enum:
            - COMPANY_VIEW_UNSPECIFIED
            - CV_GOOGLE_PARTNER_SEARCH
          requestMetadata.partnersSessionId?:
            type: string
            description: Google Partners session ID.
          address?:
            type: string
            description: The address to use for sorting the company's addresses by proximity. If not given, the geo-located address of the request is used. Used when order_by is set.
          requestMetadata.userOverrides.ipAddress?:
            type: string
            description: IP address to use instead of the user's geo-located IP address.
          requestMetadata.trafficSource.trafficSubId?:
            type: string
            description: Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
          orderBy?:
            type: string
            description: How to order addresses within the returned company. Currently, only `address` and `address desc` is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.
          requestMetadata.experimentIds?:
            type: string
            description: Experiment IDs the current request belongs to.
          currencyCode?:
            type: string
            description: If the company's budget is in a different currency code than this one, then the converted budget is converted to this currency code.
        responses:
          200:
            body:
              application/json: GetCompanyResponse
    get:
      description: Lists companies.
      is:
      - hasParameters
      queryParameters:
        requestMetadata.locale?:
          type: string
          description: Locale to use for the current request.
        requestMetadata.userOverrides.userId?:
          type: string
          description: Logged-in user ID to impersonate instead of the user's ID.
        requestMetadata.partnersSessionId?:
          type: string
          description: Google Partners session ID.
        address?:
          type: string
          description: The address to use when searching for companies. If not given, the geo-located address of the request is used.
        requestMetadata.userOverrides.ipAddress?:
          type: string
          description: IP address to use instead of the user's geo-located IP address.
        minMonthlyBudget.units?:
          type: integer
          format: int64
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
        gpsMotivations?:
          type: string
          description: List of reasons for using Google Partner Search to get companies.
          enum:
          - GPS_MOTIVATION_UNSPECIFIED
          - GPSM_HELP_WITH_ADVERTISING
          - GPSM_HELP_WITH_WEBSITE
          - GPSM_NO_WEBSITE
        companyName?:
          type: string
          description: Company name to search for.
        pageSize?:
          type: integer
          format: int32
          description: Requested page size. Server may return fewer companies than requested. If unspecified, server picks an appropriate default.
        orderBy?:
          type: string
          description: How to order addresses within the returned companies. Currently, only `address` and `address desc` is supported which will sorted by closest to farthest in distance from given address and farthest to closest distance from given address respectively.
        requestMetadata.experimentIds?:
          type: string
          description: Experiment IDs the current request belongs to.
        minMonthlyBudget.currencyCode?:
          type: string
          description: The 3-letter currency code defined in ISO 4217.
        services?:
          type: string
          description: List of services the company can help with.
          enum:
          - SERVICE_UNSPECIFIED
          - S_ADVANCED_ADWORDS_SUPPORT
          - S_ADVERTISING_ON_GOOGLE
          - S_AN_ENHANCED_WEBSITE
          - S_AN_ONLINE_MARKETING_PLAN
          - S_MOBILE_AND_VIDEO_ADS
        minMonthlyBudget.nanos?:
          type: integer
          format: int32
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
        requestMetadata.trafficSource.trafficSourceId?:
          type: string
          description: Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
        languageCodes?:
          type: string
          description: List of language codes that company can support. Only primary language subtags are accepted as defined by BCP 47 (IETF BCP 47, "Tags for Identifying Languages").
        view?:
          type: string
          description: The view of the `Company` resource to be returned. This must not be `COMPANY_VIEW_UNSPECIFIED`.
          enum:
          - COMPANY_VIEW_UNSPECIFIED
          - CV_GOOGLE_PARTNER_SEARCH
        maxMonthlyBudget.nanos?:
          type: integer
          format: int32
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
        websiteUrl?:
          type: string
          description: Website URL that will help to find a better matched company. .
        maxMonthlyBudget.currencyCode?:
          type: string
          description: The 3-letter currency code defined in ISO 4217.
        industries?:
          type: string
          description: List of industries the company can help with.
          enum:
          - INDUSTRY_UNSPECIFIED
          - I_AUTOMOTIVE
          - I_BUSINESS_TO_BUSINESS
          - I_CONSUMER_PACKAGED_GOODS
          - I_EDUCATION
          - I_FINANCE
          - I_HEALTHCARE
          - I_MEDIA_AND_ENTERTAINMENT
          - I_RETAIL
          - I_TECHNOLOGY
          - I_TRAVEL
        requestMetadata.trafficSource.trafficSubId?:
          type: string
          description: Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
        pageToken?:
          type: string
          description: A token identifying a page of results that the server returns. Typically, this is the value of `ListCompaniesResponse.next_page_token` returned from the previous call to ListCompanies.
        maxMonthlyBudget.units?:
          type: integer
          format: int64
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
      responses:
        200:
          body:
            application/json: ListCompaniesResponse
  /userStates:
    get:
      description: Lists states for current user.
      is:
      - hasParameters
      queryParameters:
        requestMetadata.locale?:
          type: string
          description: Locale to use for the current request.
        requestMetadata.trafficSource.trafficSourceId?:
          type: string
          description: Identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
        requestMetadata.userOverrides.userId?:
          type: string
          description: Logged-in user ID to impersonate instead of the user's ID.
        requestMetadata.partnersSessionId?:
          type: string
          description: Google Partners session ID.
        requestMetadata.userOverrides.ipAddress?:
          type: string
          description: IP address to use instead of the user's geo-located IP address.
        requestMetadata.trafficSource.trafficSubId?:
          type: string
          description: Second level identifier to indicate where the traffic comes from. An identifier has multiple letters created by a team which redirected the traffic to us.
        requestMetadata.experimentIds?:
          type: string
          description: Experiment IDs the current request belongs to.
      responses:
        200:
          body:
            application/json: ListUserStatesResponse
  /clientMessages:log:
    post:
      description: Logs a generic message from the client, such as `Failed to render component`, `Profile page is running slow`, `More than 500 users have accessed this result.`, etc.
      is:
      - hasParameters
      body:
        application/json: LogMessageRequest
      responses:
        200:
          body:
            application/json: LogMessageResponse
  /userEvents:log:
    post:
      description: Logs a user event.
      is:
      - hasParameters
      body:
        application/json: LogUserEventRequest
      responses:
        200:
          body:
            application/json: LogUserEventResponse
