#%RAML 1.0
title: Tasks API
version: v1
baseUri: https://www.googleapis.com/tasks/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/google-apps/tasks/firstapp
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/tasks-32.png
  name: x32
- url: https://www.google.com/images/icons/product/tasks-16.png
  name: x16
(commons.Id): tasks:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/tasks.readonly
      - https://www.googleapis.com/auth/tasks
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Task:
    type: object
    properties:
      parent?:
        type: string
        description: Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the "move" method to move the task under a different parent or to the top level.
      notes?:
        type: string
        description: Notes describing the task. Optional.
      hidden?:
        type: boolean
        description: Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.
      kind?:
        type: string
        default: tasks#task
        description: Type of the resource. This is always "tasks#task".
      completed?:
        type: datetime
        description: Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.
      title?:
        type: string
        description: Title of the task.
      selfLink?:
        type: string
        description: URL pointing to this task. Used to retrieve, update, or delete this task.
      deleted?:
        type: boolean
        description: Flag indicating whether the task has been deleted. The default if False.
      due?:
        type: datetime
        description: Due date of the task (as a RFC 3339 timestamp). Optional.
      etag?:
        type: string
        description: ETag of the resource.
      links?:
        type: array
        description: Collection of links. This collection is read-only.
        items:
          type: object
          properties:
            link?:
              type: string
              description: The URL.
            description?:
              type: string
              description: 'The description. In HTML speak: Everything between <a>
                and </a>.'
            type?:
              type: string
              description: Type of the link, e.g. "email".
      id?:
        type: string
        description: Task identifier.
      position?:
        type: string
        description: String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the "move" method to move the task to another position.
      updated?:
        type: datetime
        description: Last modification time of the task (as a RFC 3339 timestamp).
      status?:
        type: string
        description: Status of the task. This is either "needsAction" or "completed".
  TaskList:
    type: object
    properties:
      kind?:
        type: string
        default: tasks#taskList
        description: Type of the resource. This is always "tasks#taskList".
      etag?:
        type: string
        description: ETag of the resource.
      id?:
        type: string
        description: Task list identifier.
      title?:
        type: string
        description: Title of the task list.
      updated?:
        type: datetime
        description: Last modification time of the task list (as a RFC 3339 timestamp).
      selfLink?:
        type: string
        description: URL pointing to this task list. Used to retrieve, update, or delete this task list.
  TaskLists:
    type: object
    properties:
      kind?:
        type: string
        default: tasks#taskLists
        description: Type of the resource. This is always "tasks#taskLists".
      nextPageToken?:
        type: string
        description: Token that can be used to request the next page of this result.
      etag?:
        type: string
        description: ETag of the resource.
      items?:
        type: array
        description: Collection of task lists.
        items: TaskList
  Tasks:
    type: object
    properties:
      kind?:
        type: string
        default: tasks#tasks
        description: Type of the resource. This is always "tasks#tasks".
      nextPageToken?:
        type: string
        description: Token used to access the next page of this result.
      etag?:
        type: string
        description: ETag of the resource.
      items?:
        type: array
        description: Collection of tasks.
        items: Task
/users:
  /@me:
    /lists:
      /{tasklist}:
        uriParameters:
          tasklist:
            type: string
            description: Task list identifier.
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Updates the authenticated user's specified task list. This method supports patch semantics.
          displayName: Patch
          is:
          - hasParameters
          body:
            application/json: TaskList
          responses:
            200:
              body:
                application/json: TaskList
          (commons.Id): tasks.tasklists.patch
          (commons.LogicalStructure):
          - Tasklists
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
              - https://www.googleapis.com/auth/tasks.readonly
          description: Returns the authenticated user's specified task list.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: TaskList
          (commons.Id): tasks.tasklists.get
          (commons.LogicalStructure):
          - Tasklists
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Updates the authenticated user's specified task list.
          displayName: Update
          is:
          - hasParameters
          body:
            application/json: TaskList
          responses:
            200:
              body:
                application/json: TaskList
          (commons.Id): tasks.tasklists.update
          (commons.LogicalStructure):
          - Tasklists
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Deletes the authenticated user's specified task list.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): tasks.tasklists.delete
          (commons.LogicalStructure):
          - Tasklists
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/tasks
        description: Creates a new task list and adds it to the authenticated user's task lists.
        displayName: Insert
        is:
        - hasParameters
        body:
          application/json: TaskList
        responses:
          200:
            body:
              application/json: TaskList
        (commons.Id): tasks.tasklists.insert
        (commons.LogicalStructure):
        - Tasklists
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/tasks
            - https://www.googleapis.com/auth/tasks.readonly
        description: Returns all the authenticated user's task lists.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          maxResults?:
            type: integer
            format: int64
            description: Maximum number of task lists returned on one page. Optional. The default is 100.
          pageToken?:
            type: string
            description: Token specifying the result page to return. Optional.
        responses:
          200:
            body:
              application/json: TaskLists
        (commons.Id): tasks.tasklists.list
        (commons.LogicalStructure):
        - Tasklists
/lists:
  /{tasklist}:
    uriParameters:
      tasklist:
        type: string
        description: Task list identifier.
    /tasks:
      /{task}:
        uriParameters:
          task:
            type: string
            description: Task identifier.
        /move:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/tasks
            description: Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.
            displayName: Move
            is:
            - hasParameters
            queryParameters:
              parent?:
                type: string
                description: New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.
              previous?:
                type: string
                description: New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.
            responses:
              200:
                body:
                  application/json: Task
            (commons.Id): tasks.tasks.move
            (commons.LogicalStructure):
            - Tasks
        patch:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Updates the specified task. This method supports patch semantics.
          displayName: Patch
          is:
          - hasParameters
          body:
            application/json: Task
          responses:
            200:
              body:
                application/json: Task
          (commons.Id): tasks.tasks.patch
          (commons.LogicalStructure):
          - Tasks
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
              - https://www.googleapis.com/auth/tasks.readonly
          description: Returns the specified task.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: Task
          (commons.Id): tasks.tasks.get
          (commons.LogicalStructure):
          - Tasks
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Updates the specified task.
          displayName: Update
          is:
          - hasParameters
          body:
            application/json: Task
          responses:
            200:
              body:
                application/json: Task
          (commons.Id): tasks.tasks.update
          (commons.LogicalStructure):
          - Tasks
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/tasks
          description: Deletes the specified task from the task list.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): tasks.tasks.delete
          (commons.LogicalStructure):
          - Tasks
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/tasks
        description: Creates a new task on the specified task list.
        displayName: Insert
        is:
        - hasParameters
        queryParameters:
          parent?:
            type: string
            description: Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.
          previous?:
            type: string
            description: Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.
        body:
          application/json: Task
        responses:
          200:
            body:
              application/json: Task
        (commons.Id): tasks.tasks.insert
        (commons.LogicalStructure):
        - Tasks
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/tasks
            - https://www.googleapis.com/auth/tasks.readonly
        description: Returns all tasks in the specified task list.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          completedMin?:
            type: string
            description: Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
          showDeleted?:
            type: boolean
            description: Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.
          showHidden?:
            type: boolean
            description: Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.
          dueMax?:
            type: string
            description: Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
          updatedMin?:
            type: string
            description: Lower bound for a task's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.
          maxResults?:
            type: integer
            format: int64
            description: Maximum number of task lists returned on one page. Optional. The default is 100.
          showCompleted?:
            type: boolean
            description: Flag indicating whether completed tasks are returned in the result. Optional. The default is True.
          dueMin?:
            type: string
            description: Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
          pageToken?:
            type: string
            description: Token specifying the result page to return. Optional.
          completedMax?:
            type: string
            description: Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
        responses:
          200:
            body:
              application/json: Tasks
        (commons.Id): tasks.tasks.list
        (commons.LogicalStructure):
        - Tasks
    /clear:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/tasks
        description: Clears all completed tasks from the specified task list. The affected tasks will be marked as 'hidden' and no longer be returned by default when retrieving all tasks for a task list.
        displayName: Clear
        is:
        - hasParameters
        (commons.Id): tasks.tasks.clear
        (commons.LogicalStructure):
        - Tasks
