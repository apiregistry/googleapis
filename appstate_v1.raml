#%RAML 1.0
title: Google App State API
version: v1
baseUri: https://www.googleapis.com/appstate/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/games/services/web/api/states
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): appstate:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/appstate
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  GetResponse:
    type: object
    properties:
      data?:
        type: string
        description: The requested data.
      kind?:
        type: string
        default: appstate#getResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string appstate#getResponse.
      currentStateVersion?:
        type: string
        description: The current app state version.
      stateKey?:
        type: integer
        format: int32
        description: The key for the data.
    description: This is a JSON template for an app state resource.
  ListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: appstate#listResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string appstate#listResponse.
      items?:
        type: array
        description: The app state data.
        items: GetResponse
      maximumKeyCount?:
        type: integer
        format: int32
        description: The maximum number of keys allowed for this user.
    description: This is a JSON template to convert a list-response for app state.
  UpdateRequest:
    type: object
    properties:
      data?:
        type: string
        description: The new app state data that your application is trying to update with.
      kind?:
        type: string
        default: appstate#updateRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string appstate#updateRequest.
    description: This is a JSON template for a requests which update app state
  WriteResult:
    type: object
    properties:
      kind?:
        type: string
        default: appstate#writeResult
        description: Uniquely identifies the type of this resource. Value is always the fixed string appstate#writeResult.
      currentStateVersion?:
        type: string
        description: The version of the data for this key on the server.
      stateKey?:
        type: integer
        format: int32
        description: The written key.
    description: This is a JSON template for an app state write result.
/states:
  /{stateKey}:
    uriParameters:
      stateKey:
        type: integer
        format: int32
        description: The key for the data to be retrieved.
        maximum: 3
        minimum: 0
    /clear:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/appstate
        description: Clears (sets to empty) the data for the passed key if and only if the passed version matches the currently stored version. This method results in a conflict error on version mismatch.
        displayName: clear
        is:
        - hasParameters
        queryParameters:
          currentDataVersion?:
            type: string
            description: The version of the data to be cleared. Version strings are returned by the server.
        responses:
          200:
            body:
              application/json: WriteResult
        (commons.Id): appstate.states.clear
        (commons.LogicalStucture):
        - States
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/appstate
      description: Retrieves the data corresponding to the passed key. If the key does not exist on the server, an HTTP 404 will be returned.
      displayName: get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: GetResponse
      (commons.Id): appstate.states.get
      (commons.LogicalStucture):
      - States
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/appstate
      description: Update the data associated with the input key if and only if the passed version matches the currently stored version. This method is safe in the face of concurrent writes. Maximum per-key size is 128KB.
      displayName: update
      is:
      - hasParameters
      queryParameters:
        currentStateVersion?:
          type: string
          description: The version of the app state your application is attempting to update. If this does not match the current version, this method will return a conflict error. If there is no data stored on the server for this key, the update will succeed irrespective of the value of this parameter.
      body:
        application/json: UpdateRequest
      responses:
        200:
          body:
            application/json: WriteResult
      (commons.Id): appstate.states.update
      (commons.LogicalStucture):
      - States
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/appstate
      description: Deletes a key and the data associated with it. The key is removed and no longer counts against the key quota. Note that since this method is not safe in the face of concurrent modifications, it should only be used for development and testing purposes. Invoking this method in shipping code can result in data loss and data corruption.
      displayName: delete
      is:
      - hasParameters
      (commons.Id): appstate.states.delete
      (commons.LogicalStucture):
      - States
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/appstate
    description: Lists all the states keys, and optionally the state data.
    displayName: list
    is:
    - hasParameters
    queryParameters:
      includeData?:
        type: boolean
        default: false
        description: Whether to include the full data in addition to the version number
    responses:
      200:
        body:
          application/json: ListResponse
    (commons.Id): appstate.states.list
    (commons.LogicalStucture):
    - States
