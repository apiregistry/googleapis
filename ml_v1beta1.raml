#%RAML 1.0
title: Google Cloud Machine Learning
version: v1beta1
baseUri: https://ml.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/ml/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): ml:v1beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
        enum:
        - '1'
        - '2'
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  GoogleApi__HttpBody:
    type: object
    properties:
      data?:
        type: string
        description: HTTP body binary data.
      contentType?:
        type: string
        description: The HTTP Content-Type string representing the content type of the body.
    description: |-
      Message that represents an arbitrary HTTP body. It should only be used for
      payload formats that can't be represented as JSON, such as raw binary or
      an HTML page.


      This message can be used both in streaming and non-streaming API methods in
      the request as well as the response.

      It can be used as a top-level request field, which is convenient if one
      wants to extract parameters from either the URL or HTTP template into the
      request fields and also want access to the raw HTTP body.

      Example:

          message GetResourceRequest {
            // A unique request id.
            string request_id = 1;

            // The raw HTTP body is bound to this field.
            google.api.HttpBody http_body = 2;
          }

          service ResourceService {
            rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
            rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty);
          }

      Example with streaming methods:

          service CaldavService {
            rpc GetCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
            rpc UpdateCalendar(stream google.api.HttpBody)
              returns (stream google.api.HttpBody);
          }

      Use of this type only changes how the request and response bodies are
      handled, all other features will continue to work unchanged.
  GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric:
    type: object
    properties:
      trainingStep?:
        type: integer
        format: int64
        description: The global training step for this metric.
      objectiveValue?:
        type: number
        format: double
        description: The objective value at this training step.
    description: An observed value of a metric.
  GoogleCloudMlV1beta1__CancelJobRequest:
    type: object
    description: Request message for the CancelJob method.
  GoogleCloudMlV1beta1__GetConfigResponse:
    type: object
    properties:
      serviceAccountProject?:
        type: integer
        format: int64
        description: The project number for `service_account`.
      serviceAccount?:
        type: string
        description: The service account Cloud ML uses to access resources in the project.
    description: Returns service account information associated with a project.
  GoogleCloudMlV1beta1__HyperparameterOutput:
    type: object
    properties:
      allMetrics?:
        type: array
        description: All recorded object metrics for this trial.
        items: GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric
      trialId?:
        type: string
        description: The trial id for these results.
      finalMetric?: GoogleCloudMlV1beta1_HyperparameterOutput_HyperparameterMetric
      hyperparameters?:
        type: object
        description: The hyperparameters given to this trial.
    description: |-
      Represents the result of a single hyperparameter tuning trial from a
      training job. The TrainingOutput object that is returned on successful
      completion of a training job with hyperparameter tuning includes a list
      of HyperparameterOutput objects, one for each successful trial.
  GoogleCloudMlV1beta1__HyperparameterSpec:
    type: object
    properties:
      maxParallelTrials?:
        type: integer
        format: int32
        description: |-
          Optional. The number of training trials to run concurrently.
          You can reduce the time it takes to perform hyperparameter tuning by adding
          trials in parallel. However, each trail only benefits from the information
          gained in completed trials. That means that a trial does not get access to
          the results of trials running at the same time, which could reduce the
          quality of the overall optimization.

          Each trial will use the same scale tier and machine types.

          Defaults to one.
      goal?:
        type: string
        description: |-
          Required. The type of goal to use for tuning. Available types are
          `MAXIMIZE` and `MINIMIZE`.

          Defaults to `MAXIMIZE`.
        enum:
        - GOAL_TYPE_UNSPECIFIED
        - MAXIMIZE
        - MINIMIZE
      params?:
        type: array
        description: Required. The set of parameters to tune.
        items: GoogleCloudMlV1beta1__ParameterSpec
      maxTrials?:
        type: integer
        format: int32
        description: |-
          Optional. How many training trials should be attempted to optimize
          the specified hyperparameters.

          Defaults to one.
    description: Represents a set of hyperparameters to optimize.
  GoogleCloudMlV1beta1__Job:
    type: object
    properties:
      predictionInput?: GoogleCloudMlV1beta1__PredictionInput
      jobId?:
        type: string
        description: Required. The user-specified id of the job.
      predictionOutput?: GoogleCloudMlV1beta1__PredictionOutput
      createTime?:
        type: string
        description: Output only. When the job was created.
      trainingOutput?: GoogleCloudMlV1beta1__TrainingOutput
      errorMessage?:
        type: string
        description: Output only. The details of a failure or a cancellation.
      startTime?:
        type: string
        description: Output only. When the job processing was started.
      state?:
        type: string
        description: Output only. The detailed state of a job.
        enum:
        - STATE_UNSPECIFIED
        - QUEUED
        - PREPARING
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLING
        - CANCELLED
      endTime?:
        type: string
        description: Output only. When the job processing was completed.
      trainingInput?: GoogleCloudMlV1beta1__TrainingInput
    description: Represents a training or prediction job.
  GoogleCloudMlV1beta1__ListJobsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
      jobs?:
        type: array
        description: The list of jobs.
        items: GoogleCloudMlV1beta1__Job
    description: Response message for the ListJobs method.
  GoogleCloudMlV1beta1__ListModelsResponse:
    type: object
    properties:
      models?:
        type: array
        description: The list of models.
        items: GoogleCloudMlV1beta1__Model
      nextPageToken?:
        type: string
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
    description: Response message for the ListModels method.
  GoogleCloudMlV1beta1__ListVersionsResponse:
    type: object
    properties:
      versions?:
        type: array
        description: The list of versions.
        items: GoogleCloudMlV1beta1__Version
      nextPageToken?:
        type: string
        description: |-
          Optional. Pass this token as the `page_token` field of the request for a
          subsequent call.
    description: Response message for the ListVersions method.
  GoogleCloudMlV1beta1__Model:
    type: object
    properties:
      name?:
        type: string
        description: |-
          Required. The name specified for the model when it was created.

          The model name must be unique within the project it is created in.
      description?:
        type: string
        description: Optional. The description specified for the model when it was created.
      defaultVersion?: GoogleCloudMlV1beta1__Version
    description: |-
      Represents a machine learning solution.

      A model can have multiple versions, each of which is a deployed, trained
      model ready to receive prediction requests. The model itself is just a
      container.
  GoogleCloudMlV1beta1__OperationMetadata:
    type: object
    properties:
      modelName?:
        type: string
        description: Contains the name of the model associated with the operation.
      isCancellationRequested?:
        type: boolean
        description: Indicates whether a request to cancel this operation has been made.
      createTime?:
        type: string
        description: The time the operation was submitted.
      startTime?:
        type: string
        description: The time operation processing started.
      operationType?:
        type: string
        description: The operation type.
        enum:
        - OPERATION_TYPE_UNSPECIFIED
        - CREATE_VERSION
        - DELETE_VERSION
        - DELETE_MODEL
      endTime?:
        type: string
        description: The time operation processing completed.
      version?: GoogleCloudMlV1beta1__Version
    description: Represents the metadata of the long-running operation.
  GoogleCloudMlV1beta1__ParameterSpec:
    type: object
    properties:
      discreteValues?:
        type: array
        description: |-
          Required if type is `DISCRETE`.
          A list of feasible points.
          The list should be in strictly increasing order. For instance, this
          parameter might have possible settings of 1.5, 2.5, and 4.0. This list
          should not contain more than 1,000 values.
        items:
          type: number
          format: double
      minValue?:
        type: number
        format: double
        description: |-
          Required if type is `DOUBLE` or `INTEGER`. This field
          should be unset if type is `CATEGORICAL`. This value should be integers if
          type is INTEGER.
      scaleType?:
        type: string
        description: |-
          Optional. How the parameter should be scaled to the hypercube.
          Leave unset for categorical parameters.
          Some kind of scaling is strongly recommended for real or integral
          parameters (e.g., `UNIT_LINEAR_SCALE`).
        enum:
        - NONE
        - UNIT_LINEAR_SCALE
        - UNIT_LOG_SCALE
        - UNIT_REVERSE_LOG_SCALE
      maxValue?:
        type: number
        format: double
        description: |-
          Required if typeis `DOUBLE` or `INTEGER`. This field
          should be unset if type is `CATEGORICAL`. This value should be integers if
          type is `INTEGER`.
      parameterName?:
        type: string
        description: |-
          Required. The parameter name must be unique amongst all ParameterConfigs in
          a HyperparameterSpec message. E.g., "learning_rate".
      type?:
        type: string
        description: Required. The type of the parameter.
        enum:
        - PARAMETER_TYPE_UNSPECIFIED
        - DOUBLE
        - INTEGER
        - CATEGORICAL
        - DISCRETE
      categoricalValues?:
        type: array
        description: Required if type is `CATEGORICAL`. The list of possible categories.
        items:
          type: string
    description: Represents a single hyperparameter to optimize.
  GoogleCloudMlV1beta1__PredictRequest:
    type: object
    properties:
      httpBody?: GoogleApi__HttpBody
    description: |-
      Request for predictions to be issued against a trained model.

      The body of the request is a single JSON object with a single top-level
      field:

      <dl>
        <dt>instances</dt>
        <dd>A JSON array containing values representing the instances to use for
            prediction.</dd>
      </dl>

      The structure of each element of the instances list is determined by your
      model's input definition. Instances can include named inputs or can contain
      only unlabeled values.

      Most data does not include named inputs. Some instances will be simple
      JSON values (boolean, number, or string). However, instances are often lists
      of simple values, or complex nested lists. Here are some examples of request
      bodies:

      CSV data with each row encoded as a string value:
      <pre>
      {"instances": ["1.0,true,\\"x\\"", "-2.0,false,\\"y\\""]}
      </pre>
      Plain text:
      <pre>
      {"instances": ["the quick brown fox", "la bruja le dio"]}
      </pre>
      Sentences encoded as lists of words (vectors of strings):
      <pre>
      {"instances": [["the","quick","brown"], ["la","bruja","le"]]}
      </pre>
      Floating point scalar values:
      <pre>
      {"instances": [0.0, 1.1, 2.2]}
      </pre>
      Vectors of integers:
      <pre>
      {"instances": [[0, 1, 2], [3, 4, 5],...]}
      </pre>
      Tensors (in this case, two-dimensional tensors):
      <pre>
      {"instances": [[[0, 1, 2], [3, 4, 5]], ...]}
      </pre>
      Images represented as a three-dimensional list. In this encoding scheme the
      first two dimensions represent the rows and columns of the image, and the
      third contains the R, G, and B values for each pixel.
      <pre>
      {"instances": [[[[138, 30, 66], [130, 20, 56], ...]]]]}
      </pre>
      Data must be encoded as UTF-8. If your data uses another character encoding,
      you must base64 encode the data and mark it as binary. To mark a JSON string
      as binary, replace it with an object with a single attribute named `b`:
      <pre>{"b": "..."} </pre>
      For example:

      Two Serialized tf.Examples (fake data, for illustrative purposes only):
      <pre>
      {"instances": [{"b64": "X5ad6u"}, {"b64": "IA9j4nx"}]}
      </pre>
      Two JPEG image byte strings (fake data, for illustrative purposes only):
      <pre>
      {"instances": [{"b64": "ASa8asdf"}, {"b64": "JLK7ljk3"}]}
      </pre>
      If your data includes named references, format each instance as a JSON object
      with the named references as the keys:

      JSON input data to be preprocessed:
      <pre>
      {"instances": [{"a": 1.0,  "b": true,  "c": "x"},
                     {"a": -2.0, "b": false, "c": "y"}]}
      </pre>
      Some models have an underlying TensorFlow graph that accepts multiple input
      tensors. In this case, you should use the names of JSON name/value pairs to
      identify the input tensors, as shown in the following exmaples:

      For a graph with input tensor aliases "tag" (string) and "image"
      (base64-encoded string):
      <pre>
      {"instances": [{"tag": "beach", "image": {"b64": "ASa8asdf"}},
                     {"tag": "car", "image": {"b64": "JLK7ljk3"}}]}
      </pre>
      For a graph with input tensor aliases "tag" (string) and "image"
      (3-dimensional array of 8-bit ints):
      <pre>
      {"instances": [{"tag": "beach", "image": [[[263, 1, 10], [262, 2, 11], ...]]},
                     {"tag": "car", "image": [[[10, 11, 24], [23, 10, 15], ...]]}]}
      </pre>
      If the call is successful, the response body will contain one prediction
      entry per instance in the request body. If prediction fails for any
      instance, the response body will contain no predictions and will contian
      a single error entry instead.
  GoogleCloudMlV1beta1__PredictionInput:
    type: object
    properties:
      modelName?:
        type: string
        description: |-
          Use this field if you want to use the default version for the specified
          model. The string must use the following format:

          `"projects/<var>[YOUR_PROJECT]</var>/models/<var>[YOUR_MODEL]</var>"`
      outputPath?:
        type: string
        description: Required. The output Google Cloud Storage location.
      dataFormat?:
        type: string
        description: Required. The format of the input data files.
        enum:
        - DATA_FORMAT_UNSPECIFIED
        - TEXT
        - TF_RECORD
        - TF_RECORD_GZIP
      maxWorkerCount?:
        type: integer
        format: int64
        description: |-
          Optional. The maximum number of workers to be used for parallel processing.
          Defaults to 10 if not specified.
      versionName?:
        type: string
        description: |-
          Use this field if you want to specify a version of the model to use. The
          string is formatted the same way as `model_version`, with the addition
          of the version information:

          `"projects/<var>[YOUR_PROJECT]</var>/models/<var>YOUR_MODEL/versions/<var>[YOUR_VERSION]</var>"`
      region?:
        type: string
        description: Required. The Google Compute Engine region to run the prediction job in.
      inputPaths?:
        type: array
        description: |-
          Required. The Google Cloud Storage location of the input data files.
          May contain wildcards.
        items:
          type: string
    description: Represents input parameters for a prediction job.
  GoogleCloudMlV1beta1__PredictionOutput:
    type: object
    properties:
      outputPath?:
        type: string
        description: The output Google Cloud Storage location provided at the job creation time.
      predictionCount?:
        type: integer
        format: int64
        description: The number of generated predictions.
      errorCount?:
        type: integer
        format: int64
        description: The number of data instances which resulted in errors.
    description: Represents results of a prediction job.
  GoogleCloudMlV1beta1__SetDefaultVersionRequest:
    type: object
    description: Request message for the SetDefaultVersion request.
  GoogleCloudMlV1beta1__TrainingInput:
    type: object
    properties:
      args?:
        type: array
        description: Optional. Command line arguments to pass to the program.
        items:
          type: string
      workerType?:
        type: string
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's worker nodes.

          The supported values are the same as those described in the entry for
          `masterType`.

          This value must be present when `scaleTier` is set to `CUSTOM` and
          `workerCount` is greater than zero.
      packageUris?:
        type: array
        description: |-
          Required. The Google Cloud Storage location of the packages with
          the training program and any additional dependencies.
        items:
          type: string
      workerCount?:
        type: integer
        format: int64
        description: |-
          Optional. The number of worker replicas to use for the training job. Each
          replica in the cluster will be of the type specified in `worker_type`.

          This value can only be used when `scale_tier` is set to `CUSTOM`. If you
          set this value, you must also set `worker_type`.
      parameterServerType?:
        type: string
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's parameter server.

          The supported values are the same as those described in the entry for
          `master_type`.

          This value must be present when `scaleTier` is set to `CUSTOM` and
          `parameter_server_count` is greater than zero.
      hyperparameters?: GoogleCloudMlV1beta1__HyperparameterSpec
      masterType?:
        type: string
        description: |-
          Optional. Specifies the type of virtual machine to use for your training
          job's master worker.

          The following types are supported:

          <dl>
            <dt>standard</dt>
            <dd>
            A basic machine configuration suitable for training simple models with
            small to moderate datasets.
            </dd>
            <dt>large_model</dt>
            <dd>
            A machine with a lot of memory, specially suited for parameter servers
            when your model is large (having many hidden layers or layers with very
            large numbers of nodes).
            </dd>
            <dt>complex_model_s</dt>
            <dd>
            A machine suitable for the master and workers of the cluster when your
            model requires more computation than the standard machine can handle
            satisfactorily.
            </dd>
            <dt>complex_model_m</dt>
            <dd>
            A machine with roughly twice the number of cores and roughly double the
            memory of <code suppresswarning="true">complex_model_s</code>.
            </dd>
            <dt>complex_model_l</dt>
            <dd>
            A machine with roughly twice the number of cores and roughly double the
            memory of <code suppresswarning="true">complex_model_m</code>.
            </dd>
          </dl>

          You must set this value when `scaleTier` is set to `CUSTOM`.
      parameterServerCount?:
        type: integer
        format: int64
        description: |-
          Optional. The number of parameter server replicas to use for the training
          job. Each replica in the cluster will be of the type specified in
          `parameter_server_type`.

          This value can only be used when `scale_tier` is set to `CUSTOM`.If you
          set this value, you must also set `parameter_server_type`.
      region?:
        type: string
        description: Required. The Google Compute Engine region to run the training job in.
      scaleTier?:
        type: string
        description: |-
          Required. Specifies the machine types, the number of replicas for workers
          and parameter servers.
        enum:
        - BASIC
        - STANDARD_1
        - PREMIUM_1
        - CUSTOM
      pythonModule?:
        type: string
        description: Required. The Python module name to run after installing the packages.
    description: Represents input parameters for a training job.
  GoogleCloudMlV1beta1__TrainingOutput:
    type: object
    properties:
      completedTrialCount?:
        type: integer
        format: int64
        description: The number of hyperparameter tuning trials that completed successfully.
      trials?:
        type: array
        description: Results for individual Hyperparameter trials.
        items: GoogleCloudMlV1beta1__HyperparameterOutput
    description: Represents results of a training job.
  GoogleCloudMlV1beta1__Version:
    type: object
    properties:
      isDefault?:
        type: boolean
        description: |-
          Output only. If true, this version will be used to handle prediction
          requests that do not specify a version.

          You can change the default version by calling
          [projects.methods.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
      createTime?:
        type: string
        description: Output only. The time the version was created.
      lastUseTime?:
        type: string
        description: Output only. The time the version was last used for prediction.
      name?:
        type: string
        description: |-
          Required.The name specified for the version when it was created.

          The version name must be unique within the model it is created in.
      description?:
        type: string
        description: Optional. The description specified for the version when it was created.
      deploymentUri?:
        type: string
        description: |-
          Required. The Google Cloud Storage location of the trained model used to
          create the version. See the
          [overview of model deployment](/ml/docs/concepts/deployment-overview) for
          more informaiton.

          When passing Version to
          [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create)
          the model service uses the specified location as the source of the model.
          Once deployed, the model version is hosted by the prediction service, so
          this location is useful only as a historical record.
    description: |-
      Represents a version of the model.

      Each version is a trained model deployed in the cloud, ready to handle
      prediction requests. A model can have multiple versions. You can get
      information about all of the versions of a given model by calling
      [projects.models.versions.list](/ml/reference/rest/v1beta1/projects.models.versions/list).
  GoogleLongrunning__ListOperationsResponse:
    type: object
    properties:
      operations?:
        type: array
        description: A list of operations that matches the specified filter in the request.
        items: GoogleLongrunning__Operation
      nextPageToken?:
        type: string
        description: The standard List next-page token.
    description: The response message for Operations.ListOperations.
  GoogleLongrunning__Operation:
    type: object
    properties:
      metadata?:
        type: object
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
      response?:
        type: object
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
      name?:
        type: string
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
      error?: GoogleRpc__Status
      done?:
        type: boolean
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If true, the operation is completed, and either `error` or `response` is
          available.
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
  GoogleProtobuf__Empty:
    type: object
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
  GoogleRpc__Status:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The status code, which should be an enum value of google.rpc.Code.
      details?:
        type: array
        description: |-
          A list of messages that carry the error details.  There will be a
          common set of message types for APIs to use.
        items:
          type: object
      message?:
        type: string
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` which can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting purpose.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
/v1beta1:
  /{name}:predict:
    uriParameters:
      name:
        type: string
        pattern: ^projects/.+$
        description: |-
          Required. The resource name of a model or a version.

          Authorization: requires `Viewer` role on the parent project.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: |-
        Performs prediction on the data in the request.

        Responses are very similar to requests. There are two top-level fields,
        each of which are JSON lists:

        <dl>
          <dt>predictions</dt>
          <dd>The list of predictions, one per instance in the request.</dd>
          <dt>error</dt>
          <dd>An error message returned instead of a prediction list if any
              instance produced an error.</dd>
        </dl>

        If the call is successful, the response body will contain one prediction
        entry per instance in the request body. If prediction fails for any
        instance, the response body will contain no predictions and will contian
        a single error entry instead.

        Even though there is one prediction per instance, the format of a
        prediction is not directly related to the format of an instance.
        Predictions take whatever format is specified in the outputs collection
        defined in the model. The collection of predictions is returned in a JSON
        list. Each member of the list can be a simple value, a list, or a JSON
        object of any complexity. If your model has more than one output tensor,
        each prediction will be a JSON object containing a name/value pair for each
        output. The names identify the output aliases in the graph.

        The following examples show some possible responses:

        A simple set of predictions for three input instances, where each
        prediction is an integer value:
        <pre>
        {"predictions": [5, 4, 3]}
        </pre>
        A more complex set of predictions, each containing two named values that
        correspond to output tensors, named **label** and **scores** respectively.
        The value of **label** is the predicted category ("car" or "beach") and
        **scores** contains a list of probabilities for that instance across the
        possible categories.
        <pre>
        {"predictions": [{"label": "beach", "scores": [0.1, 0.9]},
                         {"label": "car", "scores": [0.75, 0.25]}]}
        </pre>
        A response when there is an error processing an input instance:
        <pre>
        {"error": "Divide by zero"}
        </pre>
      displayName: Predict
      is:
      - hasParameters
      body:
        application/json: GoogleCloudMlV1beta1__PredictRequest
      responses:
        200:
          body:
            application/json: GoogleApi__HttpBody
      (commons.Id): ml.projects.predict
      (commons.LogicalStructure):
      - Projects
  /{name}:getConfig:
    uriParameters:
      name:
        type: string
        pattern: ^projects/[^/]+$
        description: |-
          Required. The project name.

          Authorization: requires `Viewer` role on the specified project.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: |-
        Get the service account information associated with your project. You need
        this information in order to grant the service account persmissions for
        the Google Cloud Storage location where you put your model training code
        for training the model with Google Cloud Machine Learning.
      displayName: Get Config
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: GoogleCloudMlV1beta1__GetConfigResponse
      (commons.Id): ml.projects.getConfig
      (commons.LogicalStructure):
      - Projects
  /{name}:
    uriParameters:
      name:
        type: string
        pattern: ^projects/[^/]+/models/[^/]+$
        description: |-
          Required. The name of the model.

          Authorization: requires `Viewer` role on the parent project.
    /operations:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Lists operations that match the specified filter in the request. If the
          server doesn't support this method, it returns `UNIMPLEMENTED`.

          NOTE: the `name` binding below allows API services to override the binding
          to use different resource name schemes, such as `users/*/operations`.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          filter?:
            type: string
            description: The standard list filter.
          pageSize?:
            type: integer
            format: int32
            description: The standard list page size.
          pageToken?:
            type: string
            description: The standard list page token.
        responses:
          200:
            body:
              application/json: GoogleLongrunning__ListOperationsResponse
        (commons.Id): ml.projects.operations.list
        (commons.LogicalStructure):
        - Projects
        - Operations
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Describes a job.
      displayName: Get
      is:
      - hasParameters
      - hasParameters
      - hasParameters
      - hasParameters
      responses:
        200:
          body:
            application/json: GoogleCloudMlV1beta1__Job
      (commons.Id): ml.projects.jobs.get
      (commons.LogicalStructure):
      - Projects
      - Jobs
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: |-
        Deletes a long-running operation. This method indicates that the client is
        no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      displayName: Delete
      is:
      - hasParameters
      - hasParameters
      - hasParameters
      responses:
        200:
          body:
            application/json: GoogleProtobuf__Empty
      (commons.Id): ml.projects.operations.delete
      (commons.LogicalStructure):
      - Projects
      - Operations
  /{parent}:
    uriParameters:
      parent:
        type: string
        pattern: ^projects/[^/]+$
        description: |-
          Required. The project name.

          Authorization: requires `Editor` role on the specified project.
    /models:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Creates a model which will later contain one or more versions.

          You must add at least one version before you can request predictions from
          the model. Add versions by calling
          [projects.models.versions.create](/ml/reference/rest/v1beta1/projects.models.versions/create).
        displayName: Create
        is:
        - hasParameters
        body:
          application/json: GoogleCloudMlV1beta1__Model
        responses:
          200:
            body:
              application/json: GoogleCloudMlV1beta1__Model
        (commons.Id): ml.projects.models.create
        (commons.LogicalStructure):
        - Projects
        - Models
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Lists the models in a project.

          Each project can contain multiple models, and each model can have multiple
          versions.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          pageSize?:
            type: integer
            format: int32
            description: |-
              Optional. The number of models to retrieve per "page" of results. If there
              are more remaining results than this number, the response message will
              contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
          pageToken?:
            type: string
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
        responses:
          200:
            body:
              application/json: GoogleCloudMlV1beta1__ListModelsResponse
        (commons.Id): ml.projects.models.list
        (commons.LogicalStructure):
        - Projects
        - Models
    /versions:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Creates a new version of a model from a trained TensorFlow model.

          If the version created in the cloud by this call is the first deployed
          version of the specified model, it will be made the default version of the
          model. When you add a version to a model that already has one or more
          versions, the default version does not automatically change. If you want a
          new version to be the default, you must call
          [projects.models.versions.setDefault](/ml/reference/rest/v1beta1/projects.models.versions/setDefault).
        displayName: Create
        is:
        - hasParameters
        body:
          application/json: GoogleCloudMlV1beta1__Version
        responses:
          200:
            body:
              application/json: GoogleLongrunning__Operation
        (commons.Id): ml.projects.models.versions.create
        (commons.LogicalStructure):
        - Projects
        - Models
        - Versions
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Gets basic information about all the versions of a model.

          If you expect that a model has a lot of versions, or if you need to handle
          only a limited number of results at a time, you can request that the list
          be retrieved in batches (called pages):
        displayName: List
        is:
        - hasParameters
        queryParameters:
          pageSize?:
            type: integer
            format: int32
            description: |-
              Optional. The number of versions to retrieve per "page" of results. If
              there are more remaining results than this number, the response message
              will contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
          pageToken?:
            type: string
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
        responses:
          200:
            body:
              application/json: GoogleCloudMlV1beta1__ListVersionsResponse
        (commons.Id): ml.projects.models.versions.list
        (commons.LogicalStructure):
        - Projects
        - Models
        - Versions
    /jobs:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Creates a training or a batch prediction job.
        displayName: Create
        is:
        - hasParameters
        body:
          application/json: GoogleCloudMlV1beta1__Job
        responses:
          200:
            body:
              application/json: GoogleCloudMlV1beta1__Job
        (commons.Id): ml.projects.jobs.create
        (commons.LogicalStructure):
        - Projects
        - Jobs
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Lists the jobs in the project.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          filter?:
            type: string
            description: Optional. Specifies the subset of jobs to retrieve.
          pageSize?:
            type: integer
            format: int32
            description: |-
              Optional. The number of jobs to retrieve per "page" of results. If there
              are more remaining results than this number, the response message will
              contain a valid value in the `next_page_token` field.

              The default value is 20, and the maximum page size is 100.
          pageToken?:
            type: string
            description: |-
              Optional. A page token to request the next page of results.

              You get the token from the `next_page_token` field of the response from
              the previous call.
        responses:
          200:
            body:
              application/json: GoogleCloudMlV1beta1__ListJobsResponse
        (commons.Id): ml.projects.jobs.list
        (commons.LogicalStructure):
        - Projects
        - Jobs
  /{name}:setDefault:
    uriParameters:
      name:
        type: string
        pattern: ^projects/[^/]+/models/[^/]+/versions/[^/]+$
        description: |-
          Required. The name of the version to make the default for the model. You
          can get the names of all the versions of a model by calling
          [projects.models.versions.list](/ml/reference/rest/v1beta1/projects.models.versions/list).

          Authorization: requires `Editor` role on the parent project.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: |-
        Designates a version to be the default for the model.

        The default version is used for prediction requests made against the model
        that don't specify a version.

        The first version to be created for a model is automatically set as the
        default. You must make any subsequent changes to the default version
        setting manually using this method.
      displayName: Set Default
      is:
      - hasParameters
      body:
        application/json: GoogleCloudMlV1beta1__SetDefaultVersionRequest
      responses:
        200:
          body:
            application/json: GoogleCloudMlV1beta1__Version
      (commons.Id): ml.projects.models.versions.setDefault
      (commons.LogicalStructure):
      - Projects
      - Models
      - Versions
  /{name}:cancel:
    uriParameters:
      name:
        type: string
        pattern: ^projects/[^/]+/operations/[^/]+$
        description: The name of the operation resource to be cancelled.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Cancels a running job.
      displayName: Cancel
      is:
      - hasParameters
      - hasParameters
      body:
        application/json: GoogleCloudMlV1beta1__CancelJobRequest
      responses:
        200:
          body:
            application/json: GoogleProtobuf__Empty
      (commons.Id): ml.projects.jobs.cancel
      (commons.LogicalStructure):
      - Projects
      - Jobs
