#%RAML 1.0
title: Books API
version: v1
baseUri: https://www.googleapis.com/books/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/books/docs/v1/getting_started
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/ebooks-32.png
  name: x32
- url: https://www.google.com/images/icons/product/ebooks-16.png
  name: x16
(commons.Id): books:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/books
    (commons.OathScopeDescriptions):
    - Manage your books
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Annotation:
    type: object
    properties:
      layerSummary?:
        type: object
        properties:
          allowedCharacterCount?:
            type: integer
            format: int32
            description: Maximum allowed characters on this layer, especially for the "copy" layer.
          limitType?:
            type: string
            description: Type of limitation on this layer. "limited" or "unlimited" for the "copy" layer.
          remainingCharacterCount?:
            type: integer
            format: int32
            description: Remaining allowed characters on this layer, especially for the "copy" layer.
      data?:
        type: string
        description: User-created data for this annotation.
      selectedText?:
        type: string
        description: Excerpt from the volume.
      created?:
        type: string
        description: Timestamp for the created time of this annotation.
      kind?:
        type: string
        default: books#annotation
        description: Resource type.
      beforeSelectedText?:
        type: string
        description: Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
      selfLink?:
        type: string
        description: URL to this resource.
      deleted?:
        type: boolean
        description: Indicates that this annotation is deleted.
      layerId?:
        type: string
        description: The layer this annotation is for.
      pageIds?:
        type: array
        description: Pages that this annotation spans.
        items:
          type: string
      clientVersionRanges?:
        type: object
        properties:
          gbImageRange?: BooksAnnotationsRange
          cfiRange?: BooksAnnotationsRange
          contentVersion?:
            type: string
            description: Content version the client sent in.
          gbTextRange?: BooksAnnotationsRange
          imageCfiRange?: BooksAnnotationsRange
        description: Selection ranges sent from the client.
      volumeId?:
        type: string
        description: The volume that this annotation belongs to.
      currentVersionRanges?:
        type: object
        properties:
          gbImageRange?: BooksAnnotationsRange
          cfiRange?: BooksAnnotationsRange
          contentVersion?:
            type: string
            description: Content version applicable to ranges below.
          gbTextRange?: BooksAnnotationsRange
          imageCfiRange?: BooksAnnotationsRange
        description: Selection ranges for the most recent content version.
      id?:
        type: string
        description: Id of this annotation, in the form of a GUID.
      afterSelectedText?:
        type: string
        description: Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
      updated?:
        type: string
        description: Timestamp for the last time this annotation was modified.
      highlightStyle?:
        type: string
        description: The highlight style for this annotation.
  Annotationdata:
    type: object
    properties:
      layerId?:
        type: string
        description: The Layer id for this data. *
      data?:
        type: any
      kind?:
        type: string
        default: books#annotationdata
        description: Resource Type
      volumeId?:
        type: string
        description: The volume id for this data. *
      annotationType?:
        type: string
        description: The type of annotation this data is for.
      id?:
        type: string
        description: Unique id for this annotation data.
      encoded_data?:
        type: string
        description: Base64 encoded data for this annotation data.
      updated?:
        type: datetime
        description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
      selfLink?:
        type: string
        description: URL for this resource. *
  Annotations:
    type: object
    properties:
      totalItems?:
        type: integer
        format: int32
        description: Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.
      kind?:
        type: string
        default: books#annotations
        description: Resource type.
      nextPageToken?:
        type: string
        description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
      items?:
        type: array
        description: A list of annotations.
        items: Annotation
  AnnotationsSummary:
    type: object
    properties:
      kind?:
        type: string
        default: books#annotationsSummary
      layers?:
        type: array
        items:
          type: object
          properties:
            layerId?:
              type: string
            allowedCharacterCount?:
              type: integer
              format: int32
            limitType?:
              type: string
            remainingCharacterCount?:
              type: integer
              format: int32
            updated?:
              type: datetime
  Annotationsdata:
    type: object
    properties:
      totalItems?:
        type: integer
        format: int32
        description: The total number of volume annotations found.
      kind?:
        type: string
        default: books#annotationsdata
        description: Resource type
      nextPageToken?:
        type: string
        description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
      items?:
        type: array
        description: A list of Annotation Data.
        items: Annotationdata
  BooksAnnotationsRange:
    type: object
    properties:
      endOffset?:
        type: string
        description: The offset from the ending position.
      startOffset?:
        type: string
        description: The offset from the starting position.
      endPosition?:
        type: string
        description: The ending position for the range.
      startPosition?:
        type: string
        description: The starting position for the range.
  BooksCloudloadingResource:
    type: object
    properties:
      processingState?:
        type: string
      author?:
        type: string
      volumeId?:
        type: string
      title?:
        type: string
  BooksVolumesRecommendedRateResponse:
    type: object
    properties:
      consistency_token?:
        type: string
  Bookshelf:
    type: object
    properties:
      access?:
        type: string
        description: Whether this bookshelf is PUBLIC or PRIVATE.
      created?:
        type: string
        description: Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).
      kind?:
        type: string
        default: books#bookshelf
        description: Resource type for bookshelf metadata.
      description?:
        type: string
        description: Description of this bookshelf.
      volumeCount?:
        type: integer
        format: int32
        description: Number of volumes in this bookshelf.
      id?:
        type: integer
        format: int32
        description: Id of this bookshelf, only unique by user.
      title?:
        type: string
        description: Title of this bookshelf.
      updated?:
        type: string
        description: Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).
      volumesLastUpdated?:
        type: string
        description: Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).
      selfLink?:
        type: string
        description: URL to this resource.
  Bookshelves:
    type: object
    properties:
      kind?:
        type: string
        default: books#bookshelves
        description: Resource type.
      items?:
        type: array
        description: A list of bookshelves.
        items: Bookshelf
  Category:
    type: object
    properties:
      kind?:
        type: string
        default: onboarding#category
        description: Resource type.
      items?:
        type: array
        description: A list of onboarding categories.
        items:
          type: object
          properties:
            badgeUrl?:
              type: string
            name?:
              type: string
            categoryId?:
              type: string
  ConcurrentAccessRestriction:
    type: object
    properties:
      deviceAllowed?:
        type: boolean
        description: Whether access is granted for this (user, device, volume).
      timeWindowSeconds?:
        type: integer
        format: int32
        description: Time in seconds for license auto-expiration.
      signature?:
        type: string
        description: Response signature.
      kind?:
        type: string
        default: books#concurrentAccessRestriction
        description: Resource type.
      restricted?:
        type: boolean
        description: Whether this volume has any concurrent access restrictions.
      maxConcurrentDevices?:
        type: integer
        format: int32
        description: The maximum number of concurrent access licenses for this volume.
      volumeId?:
        type: string
        description: Identifies the volume for which this entry applies.
      reasonCode?:
        type: string
        description: Error/warning reason code.
      source?:
        type: string
        description: Client app identifier for verification. Download access and client-validation only.
      message?:
        type: string
        description: Error/warning message.
      nonce?:
        type: string
        description: Client nonce for verification. Download access and client-validation only.
  Dictlayerdata:
    type: object
    properties:
      common?:
        type: object
        properties:
          title?:
            type: string
            description: The display title and localized canonical name to use when searching for this entity on Google search.
      kind?:
        type: string
        default: books#dictlayerdata
      dict?:
        type: object
        properties:
          words?:
            type: array
            items:
              type: object
              properties:
                derivatives?:
                  type: array
                  items:
                    type: object
                    properties:
                      source?:
                        type: object
                        properties:
                          attribution?:
                            type: string
                          url?:
                            type: string
                      text?:
                        type: string
                examples?:
                  type: array
                  items:
                    type: object
                    properties:
                      source?:
                        type: object
                        properties:
                          attribution?:
                            type: string
                          url?:
                            type: string
                      text?:
                        type: string
                senses?:
                  type: array
                  items:
                    type: object
                    properties:
                      syllabification?:
                        type: string
                      pronunciation?:
                        type: string
                      pronunciationUrl?:
                        type: string
                      synonyms?:
                        type: array
                        items:
                          type: object
                          properties:
                            source?:
                              type: object
                              properties:
                                attribution?:
                                  type: string
                                url?:
                                  type: string
                            text?:
                              type: string
                      partOfSpeech?:
                        type: string
                      source?:
                        type: object
                        properties:
                          attribution?:
                            type: string
                          url?:
                            type: string
                      definitions?:
                        type: array
                        items:
                          type: object
                          properties:
                            examples?:
                              type: array
                              items:
                                type: object
                                properties:
                                  source?:
                                    type: object
                                    properties:
                                      attribution?:
                                        type: string
                                      url?:
                                        type: string
                                  text?:
                                    type: string
                            definition?:
                              type: string
                      conjugations?:
                        type: array
                        items:
                          type: object
                          properties:
                            type?:
                              type: string
                            value?:
                              type: string
                source?:
                  type: object
                  properties:
                    attribution?:
                      type: string
                    url?:
                      type: string
                  description: The words with different meanings but not related words, e.g. "go" (game) and "go" (verb).
          source?:
            type: object
            properties:
              attribution?:
                type: string
              url?:
                type: string
            description: The source, url and attribution for this dictionary data.
  Discoveryclusters:
    type: object
    properties:
      kind?:
        type: string
        default: books#discovery#clusters
        description: Resorce type.
      totalClusters?:
        type: integer
        format: int32
      clusters?:
        type: array
        items:
          type: object
          properties:
            uid?:
              type: string
            totalVolumes?:
              type: integer
              format: int32
            subTitle?:
              type: string
            volumes?: Volume[]
            banner_with_content_container?:
              type: object
              properties:
                moreButtonText?:
                  type: string
                imageUrl?:
                  type: string
                maskColorArgb?:
                  type: string
                fillColorArgb?:
                  type: string
                moreButtonUrl?:
                  type: string
                textColorArgb?:
                  type: string
            title?:
              type: string
  DownloadAccessRestriction:
    type: object
    properties:
      deviceAllowed?:
        type: boolean
        description: If restricted, whether access is granted for this (user, device, volume).
      maxDownloadDevices?:
        type: integer
        format: int32
        description: If restricted, the maximum number of content download licenses for this volume.
      justAcquired?:
        type: boolean
        description: If deviceAllowed, whether access was just acquired with this request.
      signature?:
        type: string
        description: Response signature.
      kind?:
        type: string
        default: books#downloadAccessRestriction
        description: Resource type.
      restricted?:
        type: boolean
        description: Whether this volume has any download access restrictions.
      volumeId?:
        type: string
        description: Identifies the volume for which this entry applies.
      downloadsAcquired?:
        type: integer
        format: int32
        description: If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).
      reasonCode?:
        type: string
        description: Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS
      source?:
        type: string
        description: Client app identifier for verification. Download access and client-validation only.
      message?:
        type: string
        description: Error/warning message.
      nonce?:
        type: string
        description: Client nonce for verification. Download access and client-validation only.
  DownloadAccesses:
    type: object
    properties:
      downloadAccessList?:
        type: array
        description: A list of download access responses.
        items: DownloadAccessRestriction
      kind?:
        type: string
        default: books#downloadAccesses
        description: Resource type.
  Geolayerdata:
    type: object
    properties:
      geo?:
        type: object
        properties:
          boundary?:
            type: array
            description: The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
            items:
              type: array
              items:
                type: object
                properties:
                  latitude?:
                    type: integer
                    format: int32
                  longitude?:
                    type: integer
                    format: int32
          viewport?:
            type: object
            properties:
              hi?:
                type: object
                properties:
                  latitude?:
                    type: number
                    format: double
                  longitude?:
                    type: number
                    format: double
              lo?:
                type: object
                properties:
                  latitude?:
                    type: number
                    format: double
                  longitude?:
                    type: number
                    format: double
            description: The viewport for showing this location. This is a latitude, longitude rectangle.
          countryCode?:
            type: string
            description: The country code of the location.
          latitude?:
            type: number
            format: double
            description: The latitude of the location.
          mapType?:
            type: string
            description: 'The type of map that should be used for this location. EX:
              HYBRID, ROADMAP, SATELLITE, TERRAIN'
          cachePolicy?:
            type: string
            description: 'The cache policy active for this data. EX: UNRESTRICTED,
              RESTRICTED, NEVER'
          zoom?:
            type: integer
            format: int32
            description: 'The Zoom level to use for the map. Zoom levels between 0
              (the lowest zoom level, in which the entire world can be seen on one
              map) to 21+ (down to individual buildings). See: https://developers.google.com/maps/documentation/staticmaps/#Zoomlevels'
          longitude?:
            type: number
            format: double
            description: The longitude of the location.
      common?:
        type: object
        properties:
          snippet?:
            type: string
            description: The description for this location.
          previewImageUrl?:
            type: string
            description: The URL for the preview image information.
          lang?:
            type: string
            description: The language of the information url and description.
          snippetUrl?:
            type: string
            description: 'The URL for information for this location. Ex: wikipedia
              link.'
          title?:
            type: string
            description: The display title and localized canonical name to use when searching for this entity on Google search.
      kind?:
        type: string
        default: books#geolayerdata
  Layersummaries:
    type: object
    properties:
      totalItems?:
        type: integer
        format: int32
        description: The total number of layer summaries found.
      kind?:
        type: string
        default: books#layersummaries
        description: Resource type.
      items?:
        type: array
        description: A list of layer summary items.
        items: Layersummary
  Layersummary:
    type: object
    properties:
      annotationCount?:
        type: integer
        format: int32
        description: The number of annotations for this layer.
      volumeAnnotationsVersion?:
        type: string
        description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
      kind?:
        type: string
        default: books#layersummary
        description: Resource Type
      annotationsLink?:
        type: string
        description: The link to get the annotations for this layer.
      dataCount?:
        type: integer
        format: int32
        description: The number of data items for this layer.
      selfLink?:
        type: string
        description: URL to this resource.
      annotationsDataLink?:
        type: string
        description: Link to get data for this annotation.
      layerId?:
        type: string
        description: The layer id for this summary.
      volumeId?:
        type: string
        description: The volume id this resource is for.
      id?:
        type: string
        description: Unique id of this layer summary.
      annotationTypes?:
        type: array
        description: The list of annotation types contained for this layer.
        items:
          type: string
      contentVersion?:
        type: string
        description: The content version this resource is for.
      updated?:
        type: string
        description: Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).
  Metadata:
    type: object
    properties:
      kind?:
        type: string
        default: dictionary#metadata
        description: Resource type.
      items?:
        type: array
        description: A list of offline dictionary metadata.
        items:
          type: object
          properties:
            size?:
              type: integer
              format: int64
            encrypted_key?:
              type: string
            download_url?:
              type: string
            language?:
              type: string
            version?:
              type: integer
              format: int64
  Notification:
    type: object
    properties:
      notification_type?:
        type: string
      reason?:
        type: string
      kind?:
        type: string
        default: books#notification
        description: Resource type.
      dont_show_notification?:
        type: boolean
      doc_type?:
        type: string
      body?:
        type: string
      title?:
        type: string
      doc_id?:
        type: string
      show_notification_settings_action?:
        type: boolean
      pcampaign_id?:
        type: string
      crmExperimentIds?:
        type: array
        description: The list of crm experiment ids.
        items:
          type: integer
          format: int64
      iconUrl?:
        type: string
      targetUrl?:
        type: string
  Offers:
    type: object
    properties:
      kind?:
        type: string
        default: promooffer#offers
        description: Resource type.
      items?:
        type: array
        description: A list of offers.
        items:
          type: object
          properties:
            id?:
              type: string
            gservicesKey?:
              type: string
            items?:
              type: array
              items:
                type: object
                properties:
                  coverUrl?:
                    type: string
                  author?:
                    type: string
                  canonicalVolumeLink?:
                    type: string
                  volumeId?:
                    type: string
                  description?:
                    type: string
                  title?:
                    type: string
            artUrl?:
              type: string
  ReadingPosition:
    type: object
    properties:
      gbTextPosition?:
        type: string
        description: Position in a volume for text-based content.
      pdfPosition?:
        type: string
        description: Position in a PDF file.
      kind?:
        type: string
        default: books#readingPosition
        description: Resource type for a reading position.
      volumeId?:
        type: string
        description: Volume id associated with this reading position.
      gbImagePosition?:
        type: string
        description: Position in a volume for image-based content.
      updated?:
        type: datetime
        description: Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
      epubCfiPosition?:
        type: string
        description: Position in an EPUB as a CFI.
  RequestAccess:
    type: object
    properties:
      kind?:
        type: string
        default: books#requestAccess
        description: Resource type.
      concurrentAccess?: ConcurrentAccessRestriction
      downloadAccess?: DownloadAccessRestriction
  Review:
    type: object
    properties:
      date?:
        type: string
        description: Date of this review.
      fullTextUrl?:
        type: string
        description: URL for the full review text, for reviews gathered from the web.
      author?:
        type: object
        properties:
          displayName?:
            type: string
            description: Name of this person.
        description: Author of this review.
      kind?:
        type: string
        default: books#review
        description: Resource type for a review.
      rating?:
        type: string
        description: Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.
      volumeId?:
        type: string
        description: Volume that this review is for.
      source?:
        type: object
        properties:
          extraDescription?:
            type: string
            description: Extra text about the source of the review.
          description?:
            type: string
            description: Name of the source.
          url?:
            type: string
            description: URL of the source of the review.
        description: Information regarding the source of this review, when the review is not from a Google Books user.
      title?:
        type: string
        description: Title for this review.
      type?:
        type: string
        description: Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.
      content?:
        type: string
        description: Review text.
  Series:
    type: object
    properties:
      kind?:
        type: string
        default: books#series
        description: Resource type.
      series?:
        type: array
        description: Series info list. The client always expects this element in the JSON output, hence declared here as OutputAlways.
        items:
          type: object
          properties:
            seriesType?:
              type: string
            bannerImageUrl?:
              type: string
            imageUrl?:
              type: string
            title?:
              type: string
            seriesId?:
              type: string
  Seriesmembership:
    type: object
    properties:
      kind?:
        type: string
        default: books#series#membership
        description: Resorce type.
      nextPageToken?:
        type: string
      member?: Volume[]
  Usersettings:
    type: object
    properties:
      notification?:
        type: object
        properties:
          moreFromSeries?:
            type: object
            properties:
              opted_state?:
                type: string
          moreFromAuthors?:
            type: object
            properties:
              opted_state?:
                type: string
      notesExport?:
        type: object
        properties:
          isEnabled?:
            type: boolean
          folderName?:
            type: string
        description: User settings in sub-objects, each for different purposes.
      kind?:
        type: string
        default: books#usersettings
        description: Resource type.
  Volume:
    type: object
    properties:
      userInfo?:
        type: object
        properties:
          familySharing?:
            type: object
            properties:
              familyRole?:
                type: string
                description: The role of the user in the family.
              isSharingDisabledByFop?:
                type: boolean
                description: Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.
              isSharingAllowed?:
                type: boolean
                description: Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.
            description: Information on the ability to share with the family.
          isFamilySharingAllowed?:
            type: boolean
            description: 'Deprecated: Replaced by familySharing.'
          readingPosition?: ReadingPosition
          acquisitionType?:
            type: integer
            format: int32
            description: How this volume was acquired.
          rentalPeriod?:
            type: object
            properties:
              endUtcSec?:
                type: integer
                format: int64
              startUtcSec?:
                type: integer
                format: int64
            description: Period during this book is/was a valid rental.
          isFamilySharingDisabledByFop?:
            type: boolean
            description: 'Deprecated: Replaced by familySharing.'
          entitlementType?:
            type: integer
            format: int32
            description: Whether this volume is purchased, sample, pd download etc.
          acquiredTime?:
            type: string
            description: Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.
          isFamilySharedToUser?:
            type: boolean
            description: Whether or not the user received this volume through family sharing.
          isPurchased?:
            type: boolean
            description: Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)
          isInMyBooks?:
            type: boolean
            description: Whether or not this volume is currently in "my books."
          userUploadedVolumeInfo?:
            type: object
            properties:
              processingState?:
                type: string
          review?: Review
          isFamilySharedFromUser?:
            type: boolean
            description: Whether or not the user shared this volume with the family.
          isUploaded?:
            type: boolean
            description: Whether or not this volume was user uploaded.
          copy?:
            type: object
            properties:
              allowedCharacterCount?:
                type: integer
                format: int32
              limitType?:
                type: string
              remainingCharacterCount?:
                type: integer
                format: int32
              updated?:
                type: string
            description: Copy/Paste accounting information.
          isPreordered?:
            type: boolean
            description: Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)
          rentalState?:
            type: string
            description: Whether this book is an active or an expired rental.
          updated?:
            type: string
            description: Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).
        description: User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
      recommendedInfo?:
        type: object
        properties:
          explanation?:
            type: string
            description: A text explaining why this volume is recommended.
        description: Recommendation related information for this volume.
      saleInfo?:
        type: object
        properties:
          offers?:
            type: array
            description: Offers available for this volume (sales and rentals).
            items:
              type: object
              properties:
                finskyOfferType?:
                  type: integer
                  format: int32
                  description: The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
                rentalDuration?:
                  type: object
                  properties:
                    unit?:
                      type: string
                    count?:
                      type: number
                      format: double
                  description: The rental duration (for rental offers only).
                retailPrice?:
                  type: object
                  properties:
                    amountInMicros?:
                      type: number
                      format: double
                    currencyCode?:
                      type: string
                  description: Offer retail (=discounted) price in Micros
                listPrice?:
                  type: object
                  properties:
                    amountInMicros?:
                      type: number
                      format: double
                    currencyCode?:
                      type: string
                  description: Offer list (=undiscounted) price in Micros.
                giftable?:
                  type: boolean
                  description: Indicates whether the offer is giftable.
          country?:
            type: string
            description: The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)
          isEbook?:
            type: boolean
            description: Whether or not this volume is an eBook (can be added to the My eBooks shelf).
          saleability?:
            type: string
            description: Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
          buyLink?:
            type: string
            description: URL to purchase this volume on the Google Books site. (In LITE projection)
          onSaleDate?:
            type: string
            description: The date on which this book is available for sale.
          retailPrice?:
            type: object
            properties:
              amount?:
                type: number
                format: double
                description: Amount in the currency listed below. (In LITE projection.)
              currencyCode?:
                type: string
                description: An ISO 4217, three-letter currency code. (In LITE projection.)
            description: The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)
          listPrice?:
            type: object
            properties:
              amount?:
                type: number
                format: double
                description: Amount in the currency listed below. (In LITE projection.)
              currencyCode?:
                type: string
                description: An ISO 4217, three-letter currency code. (In LITE projection.)
            description: Suggested retail price. (In LITE projection.)
        description: Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
      searchInfo?:
        type: object
        properties:
          textSnippet?:
            type: string
            description: A text snippet containing the search query.
        description: Search result information related to this volume.
      kind?:
        type: string
        default: books#volume
        description: Resource type for a volume. (In LITE projection.)
      volumeInfo?:
        type: object
        properties:
          industryIdentifiers?:
            type: array
            description: Industry standard identifiers for this volume.
            items:
              type: object
              properties:
                identifier?:
                  type: string
                  description: Industry specific volume identifier.
                type?:
                  type: string
                  description: Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.
          seriesInfo?: Volumeseriesinfo
          description?:
            type: string
            description: A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)
          language?:
            type: string
            description: Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.
          title?:
            type: string
            description: Volume title. (In LITE projection.)
          samplePageCount?:
            type: integer
            format: int32
            description: Total number of sample pages as per publisher metadata.
          averageRating?:
            type: number
            format: double
            description: The mean review rating for this volume. (min = 1.0, max = 5.0)
          ratingsCount?:
            type: integer
            format: int32
            description: The number of review ratings for this volume.
          categories?:
            type: array
            description: A list of subject categories, such as "Fiction", "Suspense", etc.
            items:
              type: string
          printedPageCount?:
            type: integer
            format: int32
            description: Total number of printed pages in generated pdf representation.
          allowAnonLogging?:
            type: boolean
            description: Whether anonymous logging should be allowed.
          infoLink?:
            type: string
            description: URL to view information about this volume on the Google Books site. (In LITE projection)
          pageCount?:
            type: integer
            format: int32
            description: Total number of pages as per publisher metadata.
          printType?:
            type: string
            description: Type of publication of this volume. Possible values are BOOK or MAGAZINE.
          readingModes?:
            type: any
            description: The reading modes available for this volume.
          previewLink?:
            type: string
            description: URL to preview this volume on the Google Books site.
          canonicalVolumeLink?:
            type: string
            description: Canonical URL for a volume. (In LITE projection.)
          imageLinks?:
            type: object
            properties:
              small?:
                type: string
                description: Image link for small size (width of ~300 pixels). (In LITE projection)
              thumbnail?:
                type: string
                description: Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
              extraLarge?:
                type: string
                description: Image link for extra large size (width of ~1280 pixels). (In LITE projection)
              large?:
                type: string
                description: Image link for large size (width of ~800 pixels). (In LITE projection)
              smallThumbnail?:
                type: string
                description: Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)
              medium?:
                type: string
                description: Image link for medium size (width of ~575 pixels). (In LITE projection)
            description: A list of image links for all the sizes that are available. (In LITE projection.)
          panelizationSummary?:
            type: object
            properties:
              containsImageBubbles?:
                type: boolean
              containsEpubBubbles?:
                type: boolean
              imageBubbleVersion?:
                type: string
              epubBubbleVersion?:
                type: string
            description: A top-level summary of the panelization info in this volume.
          subtitle?:
            type: string
            description: Volume subtitle. (In LITE projection.)
          mainCategory?:
            type: string
            description: The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.
          publisher?:
            type: string
            description: Publisher of this volume. (In LITE projection.)
          publishedDate?:
            type: string
            description: Date of publication. (In LITE projection.)
          contentVersion?:
            type: string
            description: An identifier for the version of the volume content (text & images). (In LITE projection)
          maturityRating?:
            type: string
          authors?:
            type: array
            description: The names of the authors and/or editors for this volume. (In LITE projection)
            items:
              type: string
          dimensions?:
            type: object
            properties:
              thickness?:
                type: string
                description: Thickness of this volume (in cm).
              width?:
                type: string
                description: Width of this volume (in cm).
              height?:
                type: string
                description: Height or length of this volume (in cm).
            description: Physical dimensions of this volume.
        description: General volume information.
      etag?:
        type: string
        description: Opaque identifier for a specific version of a volume resource. (In LITE projection)
      layerInfo?:
        type: object
        properties:
          layers?:
            type: array
            description: A layer should appear here if and only if the layer exists for this book.
            items:
              type: object
              properties:
                layerId?:
                  type: string
                  description: The layer id of this layer (e.g. "geo").
                volumeAnnotationsVersion?:
                  type: string
                  description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
        description: What layers exist in this volume and high level information about them.
      accessInfo?:
        type: object
        properties:
          country?:
            type: string
            description: The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)
          viewability?:
            type: string
            description: The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.
          viewOrderUrl?:
            type: string
            description: For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.
          webReaderLink?:
            type: string
            description: URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.
          quoteSharingAllowed?:
            type: boolean
            description: Whether quote sharing is allowed for this volume.
          downloadAccess?: DownloadAccessRestriction
          driveImportedContentLink?:
            type: string
            description: URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.
          textToSpeechPermission?:
            type: string
            description: Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
          accessViewStatus?:
            type: string
            description: Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)
          pdf?:
            type: object
            properties:
              isAvailable?:
                type: boolean
                description: Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)
              downloadLink?:
                type: string
                description: URL to download pdf. (In LITE projection.)
              acsTokenLink?:
                type: string
                description: URL to retrieve ACS token for pdf download. (In LITE projection.)
            description: Information about pdf content. (In LITE projection.)
          epub?:
            type: object
            properties:
              isAvailable?:
                type: boolean
                description: Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)
              downloadLink?:
                type: string
                description: URL to download epub. (In LITE projection.)
              acsTokenLink?:
                type: string
                description: URL to retrieve ACS token for epub download. (In LITE projection.)
            description: Information about epub content. (In LITE projection.)
          publicDomain?:
            type: boolean
            description: Whether or not this book is public domain in the country listed above.
          explicitOfflineLicenseManagement?:
            type: boolean
            description: Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.
          embeddable?:
            type: boolean
            description: Whether this volume can be embedded in a viewport using the Embedded Viewer API.
        description: Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).
      id?:
        type: string
        description: Unique identifier for a volume. (In LITE projection.)
      selfLink?:
        type: string
        description: URL to this resource. (In LITE projection.)
  Volume2:
    type: object
    properties:
      kind?:
        type: string
        default: onboarding#volume
        description: Resource type.
      nextPageToken?:
        type: string
      items?:
        type: array
        description: A list of volumes.
        items: Volume
  Volumeannotation:
    type: object
    properties:
      data?:
        type: string
        description: Data for this annotation.
      selectedText?:
        type: string
        description: Excerpt from the volume.
      contentRanges?:
        type: object
        properties:
          gbImageRange?: BooksAnnotationsRange
          cfiRange?: BooksAnnotationsRange
          contentVersion?:
            type: string
            description: Content version applicable to ranges below.
          gbTextRange?: BooksAnnotationsRange
        description: The content ranges to identify the selected text.
      kind?:
        type: string
        default: books#volumeannotation
        description: Resource Type
      annotationType?:
        type: string
        description: The type of annotation this is.
      annotationDataLink?:
        type: string
        description: Link to get data for this annotation.
      selfLink?:
        type: string
        description: URL to this resource.
      deleted?:
        type: boolean
        description: Indicates that this annotation is deleted.
      layerId?:
        type: string
        description: The Layer this annotation is for.
      pageIds?:
        type: array
        description: Pages the annotation spans.
        items:
          type: string
      volumeId?:
        type: string
        description: The Volume this annotation is for.
      annotationDataId?:
        type: string
        description: The annotation data id for this volume annotation.
      id?:
        type: string
        description: Unique id of this volume annotation.
      updated?:
        type: string
        description: Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).
  Volumeannotations:
    type: object
    properties:
      totalItems?:
        type: integer
        format: int32
        description: The total number of volume annotations found.
      kind?:
        type: string
        default: books#volumeannotations
        description: Resource type
      nextPageToken?:
        type: string
        description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
      items?:
        type: array
        description: A list of volume annotations.
        items: Volumeannotation
      version?:
        type: string
        description: 'The version string for all of the volume annotations in this
          layer (not just the ones in this response). Note: the version string doesn''t
          apply to the annotation data, just the information in this response (e.g.
          the location of annotations in the book).'
  Volumes:
    type: object
    properties:
      totalItems?:
        type: integer
        format: int32
        description: Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.
      kind?:
        type: string
        default: books#volumes
        description: Resource type.
      items?:
        type: array
        description: A list of volumes.
        items: Volume
  Volumeseriesinfo:
    type: object
    properties:
      shortSeriesBookTitle?:
        type: string
        description: Short book title in the context of the series.
      kind?:
        type: string
        default: books#volume_series_info
        description: Resource type.
      bookDisplayNumber?:
        type: string
        description: The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.
      volumeSeries?:
        type: array
        items:
          type: object
          properties:
            seriesBookType?:
              type: string
              description: The book type in the context of series. Examples - Single Issue, Collection Edition, etc.
            orderNumber?:
              type: integer
              format: int32
              description: The book order number in the series.
            issue?:
              type: array
              description: List of issues. Applicable only for Collection Edition and Omnibus.
              items:
                type: object
                properties:
                  issueOrderNumber?:
                    type: integer
                    format: int32
                  issueDisplayNumber?:
                    type: string
            seriesId?:
              type: string
              description: The series id.
/notification:
  /get:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Returns notification details for a given notification id.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        notification_id:
          type: string
          description: String to identify the notification.
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
            Used for generating notification title and body.'
      responses:
        200:
          body:
            application/json: Notification
      (commons.Id): books.notification.get
      (commons.LogicalStructure):
      - Notification
/dictionary:
  /listOfflineMetadata:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Returns a list of offline dictionary metadata available
      displayName: List Offline Metadata
      is:
      - hasParameters
      queryParameters:
        cpksver:
          type: string
          description: The device/version ID from which to request the data.
      responses:
        200:
          body:
            application/json: Metadata
      (commons.Id): books.dictionary.listOfflineMetadata
      (commons.LogicalStructure):
      - Dictionary
/cloudloading:
  /deleteBook:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Remove the book and its contents
      displayName: Delete Book
      is:
      - hasParameters
      queryParameters:
        volumeId:
          type: string
          description: The id of the book to be removed.
      (commons.Id): books.cloudloading.deleteBook
      (commons.LogicalStructure):
      - Cloudloading
  /updateBook:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: ''
      displayName: Update Book
      is:
      - hasParameters
      body:
        application/json: BooksCloudloadingResource
      responses:
        200:
          body:
            application/json: BooksCloudloadingResource
      (commons.Id): books.cloudloading.updateBook
      (commons.LogicalStructure):
      - Cloudloading
  /addBook:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: ''
      displayName: Add Book
      is:
      - hasParameters
      queryParameters:
        drive_document_id?:
          type: string
          description: A drive document id. The upload_client_token must not be set.
        mime_type?:
          type: string
          description: The document MIME type. It can be set only if the drive_document_id is set.
        upload_client_token?:
          type: string
        name?:
          type: string
          description: The document name. It can be set only if the drive_document_id is set.
      responses:
        200:
          body:
            application/json: BooksCloudloadingResource
      (commons.Id): books.cloudloading.addBook
      (commons.LogicalStructure):
      - Cloudloading
/mylibrary:
  /readingpositions:
    /{volumeId}:
      uriParameters:
        volumeId:
          type: string
          description: ID of volume for which to retrieve a reading position.
      /setPosition:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Sets my reading position information for a volume.
          displayName: Set Position
          is:
          - hasParameters
          queryParameters:
            deviceCookie?:
              type: string
              description: Random persistent device cookie optional on set position.
            action?:
              type: string
              description: Action that caused this reading position to be set.
              (commons.EnumDescriptions):
              - User chose bookmark within volume.
              - User selected chapter from list.
              - Next page event.
              - Previous page event.
              - User navigated to page.
              - User chose search results within volume.
              enum:
              - bookmark
              - chapter
              - next-page
              - prev-page
              - scroll
              - search
            position:
              type: string
              description: Position string for the new volume reading position.
            source?:
              type: string
              description: String to identify the originator of this request.
            contentVersion?:
              type: string
              description: Volume content version for which this reading position applies.
            timestamp:
              type: string
              description: RFC 3339 UTC format timestamp associated with this reading position.
          (commons.Id): books.mylibrary.readingpositions.setPosition
          (commons.LogicalStructure):
          - Mylibrary
          - Readingpositions
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Retrieves my reading position information for a volume.
        displayName: Get
        is:
        - hasParameters
        queryParameters:
          source?:
            type: string
            description: String to identify the originator of this request.
          contentVersion?:
            type: string
            description: Volume content version for which this reading position is requested.
        responses:
          200:
            body:
              application/json: ReadingPosition
        (commons.Id): books.mylibrary.readingpositions.get
        (commons.LogicalStructure):
        - Mylibrary
        - Readingpositions
  /annotations:
    /summary:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Gets the summary of specified layers.
        displayName: Summary
        is:
        - hasParameters
        queryParameters:
          volumeId:
            type: string
            description: Volume id to get the summary for.
          layerIds:
            type: string
            description: Array of layer IDs to get the summary for.
        responses:
          200:
            body:
              application/json: AnnotationsSummary
        (commons.Id): books.mylibrary.annotations.summary
        (commons.LogicalStructure):
        - Mylibrary
        - Annotations
    /{annotationId}:
      uriParameters:
        annotationId:
          type: string
          description: The ID for the annotation to update.
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Updates an existing annotation.
        displayName: Update
        is:
        - hasParameters
        queryParameters:
          source?:
            type: string
            description: String to identify the originator of this request.
        body:
          application/json: Annotation
        responses:
          200:
            body:
              application/json: Annotation
        (commons.Id): books.mylibrary.annotations.update
        (commons.LogicalStructure):
        - Mylibrary
        - Annotations
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Deletes an annotation.
        displayName: Delete
        is:
        - hasParameters
        queryParameters:
          source?:
            type: string
            description: String to identify the originator of this request.
        (commons.Id): books.mylibrary.annotations.delete
        (commons.LogicalStructure):
        - Mylibrary
        - Annotations
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Inserts a new annotation.
      displayName: Insert
      is:
      - hasParameters
      queryParameters:
        country?:
          type: string
          description: ISO-3166-1 code to override the IP-based location.
        source?:
          type: string
          description: String to identify the originator of this request.
        showOnlySummaryInResponse?:
          type: boolean
          description: Requests that only the summary of the specified layer be provided in the response.
      body:
        application/json: Annotation
      responses:
        200:
          body:
            application/json: Annotation
      (commons.Id): books.mylibrary.annotations.insert
      (commons.LogicalStructure):
      - Mylibrary
      - Annotations
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Retrieves a list of annotations, possibly filtered.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        showDeleted?:
          type: boolean
          description: Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.
        layerId?:
          type: string
          description: The layer ID to limit annotation by.
        updatedMin?:
          type: string
          description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
        maxResults?:
          type: integer
          format: int32
          description: Maximum number of results to return
          maximum: 40
          minimum: 0
        volumeId?:
          type: string
          description: The volume to restrict annotations to.
        updatedMax?:
          type: string
          description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
        pageToken?:
          type: string
          description: The value of the nextToken from the previous page.
        source?:
          type: string
          description: String to identify the originator of this request.
        contentVersion?:
          type: string
          description: The content version for the requested volume.
        layerIds?:
          type: string
          description: The layer ID(s) to limit annotation by.
      responses:
        200:
          body:
            application/json: Annotations
      (commons.Id): books.mylibrary.annotations.list
      (commons.LogicalStructure):
      - Mylibrary
      - Annotations
  /bookshelves:
    /{shelf}:
      uriParameters:
        shelf:
          type: string
          description: ID of bookshelf to retrieve.
      /addVolume:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Adds a volume to a bookshelf.
          displayName: Add Volume
          is:
          - hasParameters
          queryParameters:
            reason?:
              type: string
              description: The reason for which the book is added to the library.
              (commons.EnumDescriptions):
              - Volumes added from the PREX flow on iOS.
              - Volumes added from the Search flow on iOS.
              - Volumes added from the Onboarding flow.
              enum:
              - IOS_PREX
              - IOS_SEARCH
              - ONBOARDING
            volumeId:
              type: string
              description: ID of volume to add.
            source?:
              type: string
              description: String to identify the originator of this request.
          (commons.Id): books.mylibrary.bookshelves.addVolume
          (commons.LogicalStructure):
          - Mylibrary
          - Bookshelves
      /removeVolume:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Removes a volume from a bookshelf.
          displayName: Remove Volume
          is:
          - hasParameters
          queryParameters:
            reason?:
              type: string
              description: The reason for which the book is removed from the library.
              (commons.EnumDescriptions):
              - Samples removed from the Onboarding flow.
              enum:
              - ONBOARDING
            volumeId:
              type: string
              description: ID of volume to remove.
            source?:
              type: string
              description: String to identify the originator of this request.
          (commons.Id): books.mylibrary.bookshelves.removeVolume
          (commons.LogicalStructure):
          - Mylibrary
          - Bookshelves
      /clearVolumes:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Clears all volumes from a bookshelf.
          displayName: Clear Volumes
          is:
          - hasParameters
          queryParameters:
            source?:
              type: string
              description: String to identify the originator of this request.
          (commons.Id): books.mylibrary.bookshelves.clearVolumes
          (commons.LogicalStructure):
          - Mylibrary
          - Bookshelves
      /moveVolume:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Moves a volume within a bookshelf.
          displayName: Move Volume
          is:
          - hasParameters
          queryParameters:
            volumePosition:
              type: integer
              format: int32
              description: Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)
            volumeId:
              type: string
              description: ID of volume to move.
            source?:
              type: string
              description: String to identify the originator of this request.
          (commons.Id): books.mylibrary.bookshelves.moveVolume
          (commons.LogicalStructure):
          - Mylibrary
          - Bookshelves
      /volumes:
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Gets volume information for volumes on a bookshelf.
          displayName: List
          is:
          - hasParameters
          queryParameters:
            country?:
              type: string
              description: ISO-3166-1 code to override the IP-based location.
            q?:
              type: string
              description: Full-text search query string in this bookshelf.
            startIndex?:
              type: integer
              format: int32
              description: Index of the first element to return (starts at 0)
              minimum: 0
            maxResults?:
              type: integer
              format: int32
              description: Maximum number of results to return
              minimum: 0
            showPreorders?:
              type: boolean
              description: Set to true to show pre-ordered books. Defaults to false.
            projection?:
              type: string
              description: Restrict information returned to a set of selected fields.
              (commons.EnumDescriptions):
              - Includes all volume data.
              - Includes a subset of fields in volumeInfo and accessInfo.
              enum:
              - full
              - lite
            source?:
              type: string
              description: String to identify the originator of this request.
          responses:
            200:
              body:
                application/json: Volumes
          (commons.Id): books.mylibrary.bookshelves.volumes.list
          (commons.LogicalStructure):
          - Mylibrary
          - Bookshelves
          - Volumes
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Retrieves metadata for a specific bookshelf belonging to the authenticated user.
        displayName: Get
        is:
        - hasParameters
        queryParameters:
          source?:
            type: string
            description: String to identify the originator of this request.
        responses:
          200:
            body:
              application/json: Bookshelf
        (commons.Id): books.mylibrary.bookshelves.get
        (commons.LogicalStructure):
        - Mylibrary
        - Bookshelves
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Retrieves a list of bookshelves belonging to the authenticated user.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        source?:
          type: string
          description: String to identify the originator of this request.
      responses:
        200:
          body:
            application/json: Bookshelves
      (commons.Id): books.mylibrary.bookshelves.list
      (commons.LogicalStructure):
      - Mylibrary
      - Bookshelves
/personalizedstream:
  /get:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Returns a stream of personalized book clusters
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        maxAllowedMaturityRating?:
          type: string
          description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          (commons.EnumDescriptions):
          - Show books which are rated mature or lower.
          - Show books which are rated not mature.
          enum:
          - mature
          - not-mature
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
            Used for generating recommendations.'
      responses:
        200:
          body:
            application/json: Discoveryclusters
      (commons.Id): books.personalizedstream.get
      (commons.LogicalStructure):
      - Personalizedstream
/series:
  /get:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Returns Series metadata for the given series ids.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        series_id:
          type: string
          description: String that identifies the series
      responses:
        200:
          body:
            application/json: Series
      (commons.Id): books.series.get
      (commons.LogicalStructure):
      - Series
  /membership:
    /get:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Returns Series membership data given the series id.
        displayName: Get
        is:
        - hasParameters
        queryParameters:
          page_token?:
            type: string
            description: The value of the nextToken from the previous page.
          page_size?:
            type: integer
            format: int32
            description: Number of maximum results per page to be included in the response.
          series_id:
            type: string
            description: String that identifies the series
        responses:
          200:
            body:
              application/json: Seriesmembership
        (commons.Id): books.series.membership.get
        (commons.LogicalStructure):
        - Series
        - Membership
/promooffer:
  /get:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Returns a list of promo offers available to the user
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        product?:
          type: string
          description: device product
        serial?:
          type: string
          description: device serial
        model?:
          type: string
          description: device model
        device?:
          type: string
          description: device device
        androidId?:
          type: string
          description: device android_id
        manufacturer?:
          type: string
          description: device manufacturer
      responses:
        200:
          body:
            application/json: Offers
      (commons.Id): books.promooffer.get
      (commons.LogicalStructure):
      - Promooffer
  /dismiss:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: ''
      displayName: Dismiss
      is:
      - hasParameters
      queryParameters:
        product?:
          type: string
          description: device product
        serial?:
          type: string
          description: device serial
        offerId?:
          type: string
          description: Offer to dimiss
        model?:
          type: string
          description: device model
        device?:
          type: string
          description: device device
        androidId?:
          type: string
          description: device android_id
        manufacturer?:
          type: string
          description: device manufacturer
      (commons.Id): books.promooffer.dismiss
      (commons.LogicalStructure):
      - Promooffer
  /accept:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: ''
      displayName: Accept
      is:
      - hasParameters
      queryParameters:
        product?:
          type: string
          description: device product
        serial?:
          type: string
          description: device serial
        volumeId?:
          type: string
          description: Volume id to exercise the offer
        offerId?:
          type: string
        model?:
          type: string
          description: device model
        device?:
          type: string
          description: device device
        androidId?:
          type: string
          description: device android_id
        manufacturer?:
          type: string
          description: device manufacturer
      (commons.Id): books.promooffer.accept
      (commons.LogicalStructure):
      - Promooffer
/volumes:
  /{volumeId}:
    uriParameters:
      volumeId:
        type: string
        description: The volume to retrieve layers for.
    /layersummary:
      /{summaryId}:
        uriParameters:
          summaryId:
            type: string
            description: The ID for the layer to get the summary for.
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Gets the layer summary for a volume.
          displayName: Get
          is:
          - hasParameters
          queryParameters:
            source?:
              type: string
              description: String to identify the originator of this request.
            contentVersion?:
              type: string
              description: The content version for the requested volume.
          responses:
            200:
              body:
                application/json: Layersummary
          (commons.Id): books.layers.get
          (commons.LogicalStructure):
          - Layers
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: List the layer summaries for a volume.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          maxResults?:
            type: integer
            format: int32
            description: Maximum number of results to return
            maximum: 200
            minimum: 0
          pageToken?:
            type: string
            description: The value of the nextToken from the previous page.
          source?:
            type: string
            description: String to identify the originator of this request.
          contentVersion?:
            type: string
            description: The content version for the requested volume.
        responses:
          200:
            body:
              application/json: Layersummaries
        (commons.Id): books.layers.list
        (commons.LogicalStructure):
        - Layers
    /layers:
      /{layerId}:
        uriParameters:
          layerId:
            type: string
            description: The ID for the layer to get the annotations.
        /data:
          /{annotationDataId}:
            uriParameters:
              annotationDataId:
                type: string
                description: The ID of the annotation data to retrieve.
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/books
              description: Gets the annotation data.
              displayName: Get
              is:
              - hasParameters
              queryParameters:
                w?:
                  type: integer
                  format: int32
                  description: The requested pixel width for any images. If width is provided height must also be provided.
                h?:
                  type: integer
                  format: int32
                  description: The requested pixel height for any images. If height is provided width must also be provided.
                scale?:
                  type: integer
                  format: int32
                  description: The requested scale for the image.
                  minimum: 0
                source?:
                  type: string
                  description: String to identify the originator of this request.
                locale?:
                  type: string
                  description: 'The locale information for the data. ISO-639-1 language
                    and ISO-3166-1 country code. Ex: ''en_US''.'
                contentVersion:
                  type: string
                  description: The content version for the volume you are trying to retrieve.
                allowWebDefinitions?:
                  type: boolean
                  description: For the dictionary layer. Whether or not to allow web definitions.
              responses:
                200:
                  body:
                    application/json: Annotationdata
              (commons.Id): books.layers.annotationData.get
              (commons.LogicalStructure):
              - Layers
              - Annotation Data
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/books
            description: Gets the annotation data for a volume and layer.
            displayName: List
            is:
            - hasParameters
            queryParameters:
              h?:
                type: integer
                format: int32
                description: The requested pixel height for any images. If height is provided width must also be provided.
              scale?:
                type: integer
                format: int32
                description: The requested scale for the image.
                minimum: 0
              updatedMax?:
                type: string
                description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
              source?:
                type: string
                description: String to identify the originator of this request.
              locale?:
                type: string
                description: 'The locale information for the data. ISO-639-1 language
                  and ISO-3166-1 country code. Ex: ''en_US''.'
              updatedMin?:
                type: string
                description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
              maxResults?:
                type: integer
                format: int32
                description: Maximum number of results to return
                maximum: 200
                minimum: 0
              w?:
                type: integer
                format: int32
                description: The requested pixel width for any images. If width is provided height must also be provided.
              annotationDataId?:
                type: string
                description: The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.
              pageToken?:
                type: string
                description: The value of the nextToken from the previous page.
              contentVersion:
                type: string
                description: The content version for the requested volume.
            responses:
              200:
                body:
                  application/json: Annotationsdata
            (commons.Id): books.layers.annotationData.list
            (commons.LogicalStructure):
            - Layers
            - Annotation Data
        /annotations:
          /{annotationId}:
            uriParameters:
              annotationId:
                type: string
                description: The ID of the volume annotation to retrieve.
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/books
              description: Gets the volume annotation.
              displayName: Get
              is:
              - hasParameters
              queryParameters:
                source?:
                  type: string
                  description: String to identify the originator of this request.
                locale?:
                  type: string
                  description: 'The locale information for the data. ISO-639-1 language
                    and ISO-3166-1 country code. Ex: ''en_US''.'
              responses:
                200:
                  body:
                    application/json: Volumeannotation
              (commons.Id): books.layers.volumeAnnotations.get
              (commons.LogicalStructure):
              - Layers
              - Volume Annotations
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Gets the volume annotations for a volume and layer.
          displayName: List
          is:
          - hasParameters
          queryParameters:
            endOffset?:
              type: string
              description: The end offset to end retrieving data from.
            volumeAnnotationsVersion?:
              type: string
              description: The version of the volume annotations that you are requesting.
            updatedMax?:
              type: string
              description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
            source?:
              type: string
              description: String to identify the originator of this request.
            locale?:
              type: string
              description: 'The locale information for the data. ISO-639-1 language
                and ISO-3166-1 country code. Ex: ''en_US''.'
            startPosition?:
              type: string
              description: The start position to start retrieving data from.
            showDeleted?:
              type: boolean
              description: Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.
            startOffset?:
              type: string
              description: The start offset to start retrieving data from.
            updatedMin?:
              type: string
              description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
            endPosition?:
              type: string
              description: The end position to end retrieving data from.
            maxResults?:
              type: integer
              format: int32
              description: Maximum number of results to return
              maximum: 200
              minimum: 0
            pageToken?:
              type: string
              description: The value of the nextToken from the previous page.
            contentVersion:
              type: string
              description: The content version for the requested volume.
          responses:
            200:
              body:
                application/json: Volumeannotations
          (commons.Id): books.layers.volumeAnnotations.list
          (commons.LogicalStructure):
          - Layers
          - Volume Annotations
    /associated:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Return a list of associated books.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          maxAllowedMaturityRating?:
            type: string
            description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
            (commons.EnumDescriptions):
            - Show books which are rated mature or lower.
            - Show books which are rated not mature.
            enum:
            - mature
            - not-mature
          association?:
            type: string
            description: Association type.
            (commons.EnumDescriptions):
            - Recommendations for display end-of-sample.
            - Recommendations for display end-of-volume.
            - Related volumes for Play Store.
            enum:
            - end-of-sample
            - end-of-volume
            - related-for-play
          source?:
            type: string
            description: String to identify the originator of this request.
          locale?:
            type: string
            description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
              Used for generating recommendations.'
        responses:
          200:
            body:
              application/json: Volumes
        (commons.Id): books.volumes.associated.list
        (commons.LogicalStructure):
        - Volumes
        - Associated
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Gets volume information for a single volume.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        country?:
          type: string
          description: ISO-3166-1 code to override the IP-based location.
        includeNonComicsSeries?:
          type: boolean
          description: Set to true to include non-comics series. Defaults to false.
        partner?:
          type: string
          description: Brand results for partner ID.
        projection?:
          type: string
          description: Restrict information returned to a set of selected fields.
          (commons.EnumDescriptions):
          - Includes all volume data.
          - Includes a subset of fields in volumeInfo and accessInfo.
          enum:
          - full
          - lite
        source?:
          type: string
          description: String to identify the originator of this request.
        user_library_consistent_read?:
          type: boolean
      responses:
        200:
          body:
            application/json: Volume
      (commons.Id): books.volumes.get
      (commons.LogicalStructure):
      - Volumes
  /useruploaded:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Return a list of books uploaded by the current user.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        processingState?:
          type: string
          description: The processing state of the user uploaded volumes to be returned.
          (commons.EnumDescriptions):
          - The volume processing hase failed.
          - The volume processing was completed.
          - The volume processing is not completed.
          enum:
          - COMPLETED_FAILED
          - COMPLETED_SUCCESS
          - RUNNING
        startIndex?:
          type: integer
          format: int32
          description: Index of the first result to return (starts at 0)
          minimum: 0
        maxResults?:
          type: integer
          format: int32
          description: Maximum number of results to return.
          maximum: 40
          minimum: 0
        volumeId?:
          type: string
          description: The ids of the volumes to be returned. If not specified all that match the processingState are returned.
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
            Used for generating recommendations.'
      responses:
        200:
          body:
            application/json: Volumes
      (commons.Id): books.volumes.useruploaded.list
      (commons.LogicalStructure):
      - Volumes
      - Useruploaded
  /mybooks:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Return a list of books in My Library.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        country?:
          type: string
          description: ISO-3166-1 code to override the IP-based location.
        processingState?:
          type: string
          description: The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.
          (commons.EnumDescriptions):
          - The volume processing hase failed.
          - The volume processing was completed.
          - The volume processing is not completed.
          enum:
          - COMPLETED_FAILED
          - COMPLETED_SUCCESS
          - RUNNING
        startIndex?:
          type: integer
          format: int32
          description: Index of the first result to return (starts at 0)
          minimum: 0
        acquireMethod?:
          type: string
          description: How the book was acquired
          (commons.EnumDescriptions):
          - Books acquired via Family Sharing
          - Preordered books (not yet available)
          - User-rented books past their expiration time
          - Public domain books
          - Purchased books
          - User-rented books
          - Sample books
          - User uploaded books
          enum:
          - FAMILY_SHARED
          - PREORDERED
          - PREVIOUSLY_RENTED
          - PUBLIC_DOMAIN
          - PURCHASED
          - RENTED
          - SAMPLE
          - UPLOADED
        maxResults?:
          type: integer
          format: int32
          description: Maximum number of results to return.
          maximum: 100
          minimum: 0
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.
      responses:
        200:
          body:
            application/json: Volumes
      (commons.Id): books.volumes.mybooks.list
      (commons.LogicalStructure):
      - Volumes
      - Mybooks
  /recommended:
    /rate:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Rate a recommended book for the current user.
        displayName: Rate
        is:
        - hasParameters
        queryParameters:
          rating:
            type: string
            description: Rating to be given to the volume.
            (commons.EnumDescriptions):
            - Rating indicating a dismissal due to ownership.
            - Rating indicating a negative dismissal of a volume.
            enum:
            - HAVE_IT
            - NOT_INTERESTED
          volumeId:
            type: string
            description: ID of the source volume.
          source?:
            type: string
            description: String to identify the originator of this request.
          locale?:
            type: string
            description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
              Used for generating recommendations.'
        responses:
          200:
            body:
              application/json: BooksVolumesRecommendedRateResponse
        (commons.Id): books.volumes.recommended.rate
        (commons.LogicalStructure):
        - Volumes
        - Recommended
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Return a list of recommended books for the current user.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        maxAllowedMaturityRating?:
          type: string
          description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          (commons.EnumDescriptions):
          - Show books which are rated mature or lower.
          - Show books which are rated not mature.
          enum:
          - mature
          - not-mature
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: 'ISO-639-1 language and ISO-3166-1 country code. Ex: ''en_US''.
            Used for generating recommendations.'
      responses:
        200:
          body:
            application/json: Volumes
      (commons.Id): books.volumes.recommended.list
      (commons.LogicalStructure):
      - Volumes
      - Recommended
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/books
    description: Performs a book search.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      printType?:
        type: string
        description: Restrict to books or magazines.
        (commons.EnumDescriptions):
        - All volume content types.
        - Just books.
        - Just magazines.
        enum:
        - all
        - books
        - magazines
      maxAllowedMaturityRating?:
        type: string
        description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
        (commons.EnumDescriptions):
        - Show books which are rated mature or lower.
        - Show books which are rated not mature.
        enum:
        - mature
        - not-mature
      orderBy?:
        type: string
        description: Sort search results.
        (commons.EnumDescriptions):
        - Most recently published.
        - Relevance to search terms.
        enum:
        - newest
        - relevance
      source?:
        type: string
        description: String to identify the originator of this request.
      filter?:
        type: string
        description: Filter search results.
        (commons.EnumDescriptions):
        - All Google eBooks.
        - Google eBook with full volume text viewability.
        - Public can view entire volume text.
        - Google eBook with a price.
        - Public able to see parts of text.
        enum:
        - ebooks
        - free-ebooks
        - full
        - paid-ebooks
        - partial
      langRestrict?:
        type: string
        description: Restrict results to books with this language code.
      q:
        type: string
        description: Full-text search query string.
      download?:
        type: string
        description: Restrict to volumes by download availability.
        (commons.EnumDescriptions):
        - All volumes with epub.
        enum:
        - epub
      startIndex?:
        type: integer
        format: int32
        description: Index of the first result to return (starts at 0)
        minimum: 0
      partner?:
        type: string
        description: Restrict and brand results for partner ID.
      maxResults?:
        type: integer
        format: int32
        description: Maximum number of results to return.
        maximum: 40
        minimum: 0
      showPreorders?:
        type: boolean
        description: Set to true to show books available for preorder. Defaults to false.
      libraryRestrict?:
        type: string
        description: Restrict search to this user's library.
        (commons.EnumDescriptions):
        - Restrict to the user's library, any shelf.
        - Do not restrict based on user's library.
        enum:
        - my-library
        - no-restrict
      projection?:
        type: string
        description: Restrict information returned to a set of selected fields.
        (commons.EnumDescriptions):
        - Includes all volume data.
        - Includes a subset of fields in volumeInfo and accessInfo.
        enum:
        - full
        - lite
    responses:
      200:
        body:
          application/json: Volumes
    (commons.Id): books.volumes.list
    (commons.LogicalStructure):
    - Volumes
/onboarding:
  /listCategoryVolumes:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: List available volumes under categories for onboarding experience.
      displayName: List Category Volumes
      is:
      - hasParameters
      queryParameters:
        maxAllowedMaturityRating?:
          type: string
          description: The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.
          (commons.EnumDescriptions):
          - Show books which are rated mature or lower.
          - Show books which are rated not mature.
          enum:
          - mature
          - not-mature
        pageSize?:
          type: integer
          format: int32
          description: Number of maximum results per page to be included in the response.
        pageToken?:
          type: string
          description: The value of the nextToken from the previous page.
        locale?:
          type: string
          description: ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.
        categoryId?:
          type: string
          description: List of category ids requested.
      responses:
        200:
          body:
            application/json: Volume2
      (commons.Id): books.onboarding.listCategoryVolumes
      (commons.LogicalStructure):
      - Onboarding
  /listCategories:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: List categories for onboarding experience.
      displayName: List Categories
      is:
      - hasParameters
      queryParameters:
        locale?:
          type: string
          description: ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.
      responses:
        200:
          body:
            application/json: Category
      (commons.Id): books.onboarding.listCategories
      (commons.LogicalStructure):
      - Onboarding
/users:
  /{userId}:
    uriParameters:
      userId:
        type: string
        description: ID of user for whom to retrieve bookshelves.
    /bookshelves:
      /{shelf}:
        uriParameters:
          shelf:
            type: string
            description: ID of bookshelf to retrieve.
        /volumes:
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/books
            description: Retrieves volumes in a specific bookshelf for the specified user.
            displayName: List
            is:
            - hasParameters
            queryParameters:
              startIndex?:
                type: integer
                format: int32
                description: Index of the first element to return (starts at 0)
                minimum: 0
              maxResults?:
                type: integer
                format: int32
                description: Maximum number of results to return
                minimum: 0
              showPreorders?:
                type: boolean
                description: Set to true to show pre-ordered books. Defaults to false.
              source?:
                type: string
                description: String to identify the originator of this request.
            responses:
              200:
                body:
                  application/json: Volumes
            (commons.Id): books.bookshelves.volumes.list
            (commons.LogicalStructure):
            - Bookshelves
            - Volumes
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/books
          description: Retrieves metadata for a specific bookshelf for the specified user.
          displayName: Get
          is:
          - hasParameters
          queryParameters:
            source?:
              type: string
              description: String to identify the originator of this request.
          responses:
            200:
              body:
                application/json: Bookshelf
          (commons.Id): books.bookshelves.get
          (commons.LogicalStructure):
          - Bookshelves
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/books
        description: Retrieves a list of public bookshelves for the specified user.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          source?:
            type: string
            description: String to identify the originator of this request.
        responses:
          200:
            body:
              application/json: Bookshelves
        (commons.Id): books.bookshelves.list
        (commons.LogicalStructure):
        - Bookshelves
/myconfig:
  /releaseDownloadAccess:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Release downloaded content access restriction.
      displayName: Release Download Access
      is:
      - hasParameters
      queryParameters:
        volumeIds:
          type: string
          description: The volume(s) to release restrictions for.
        source?:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
        cpksver:
          type: string
          description: The device/version ID from which to release the restriction.
      responses:
        200:
          body:
            application/json: DownloadAccesses
      (commons.Id): books.myconfig.releaseDownloadAccess
      (commons.LogicalStructure):
      - Myconfig
  /updateUserSettings:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.
      displayName: Update User Settings
      is:
      - hasParameters
      body:
        application/json: Usersettings
      responses:
        200:
          body:
            application/json: Usersettings
      (commons.Id): books.myconfig.updateUserSettings
      (commons.LogicalStructure):
      - Myconfig
  /syncVolumeLicenses:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Request downloaded content access for specified volumes on the My eBooks shelf.
      displayName: Sync Volume Licenses
      is:
      - hasParameters
      queryParameters:
        features?:
          type: string
          description: List of features supported by the client, i.e., 'RENTALS'
          (commons.EnumDescriptions):
          - Client supports rentals.
          enum:
          - RENTALS
        includeNonComicsSeries?:
          type: boolean
          description: Set to true to include non-comics series. Defaults to false.
        showPreorders?:
          type: boolean
          description: Set to true to show pre-ordered books. Defaults to false.
        volumeIds?:
          type: string
          description: The volume(s) to request download restrictions for.
        source:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
        nonce:
          type: string
          description: The client nonce value.
        cpksver:
          type: string
          description: The device/version ID from which to release the restriction.
      responses:
        200:
          body:
            application/json: Volumes
      (commons.Id): books.myconfig.syncVolumeLicenses
      (commons.LogicalStructure):
      - Myconfig
  /requestAccess:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Request concurrent and download access restrictions.
      displayName: Request Access
      is:
      - hasParameters
      queryParameters:
        volumeId:
          type: string
          description: The volume to request concurrent/download restrictions for.
        source:
          type: string
          description: String to identify the originator of this request.
        locale?:
          type: string
          description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
        licenseTypes?:
          type: string
          description: The type of access license to request. If not specified, the default is BOTH.
          (commons.EnumDescriptions):
          - Both concurrent and download licenses.
          - Concurrent access license.
          - Offline download access license.
          enum:
          - BOTH
          - CONCURRENT
          - DOWNLOAD
        nonce:
          type: string
          description: The client nonce value.
        cpksver:
          type: string
          description: The device/version ID from which to request the restrictions.
      responses:
        200:
          body:
            application/json: RequestAccess
      (commons.Id): books.myconfig.requestAccess
      (commons.LogicalStructure):
      - Myconfig
  /getUserSettings:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/books
      description: Gets the current settings for the user.
      displayName: Get User Settings
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Usersettings
      (commons.Id): books.myconfig.getUserSettings
      (commons.LogicalStructure):
      - Myconfig
