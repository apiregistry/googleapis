#%RAML 1.0
title: Search Console API
version: v3
baseUri: https://www.googleapis.com/webmasters/v3/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/webmaster-tools/
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/webmaster_tools-32.png
  name: x32
- url: https://www.google.com/images/icons/product/webmaster_tools-16.png
  name: x16
(commons.Id): webmasters:v3
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/webmasters.readonly
      - https://www.googleapis.com/auth/webmasters
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  ApiDataRow:
    type: object
    properties:
      ctr?:
        type: number
        format: double
      keys?:
        type: array
        items:
          type: string
      clicks?:
        type: number
        format: double
      impressions?:
        type: number
        format: double
      position?:
        type: number
        format: double
  ApiDimensionFilter:
    type: object
    properties:
      expression?:
        type: string
      dimension?:
        type: string
      operator?:
        type: string
  ApiDimensionFilterGroup:
    type: object
    properties:
      groupType?:
        type: string
      filters?: ApiDimensionFilter[]
  SearchAnalyticsQueryRequest:
    type: object
    properties:
      dimensionFilterGroups?:
        type: array
        description: '[Optional] Zero or more filters to apply to the dimension grouping
          values; for example, ''query contains "buy"'' to see only data where the
          query string contains the substring "buy" (not case-sensitive). You can
          filter by a dimension without grouping by it.'
        items: ApiDimensionFilterGroup
      aggregationType?:
        type: string
        description: |-
          [Optional; Default is "auto"] How data is aggregated. If aggregated by property, all data for the same property is aggregated; if aggregated by page, all data is aggregated by canonical URI. If you filter or group by page, choose AUTO; otherwise you can aggregate either by property or by page, depending on how you want your data calculated; see  the help documentation to learn how data is calculated differently by site versus by page.

          Note: If you group or filter by page, you cannot aggregate by property.

          If you specify any value other than AUTO, the aggregation type in the result will match the requested type, or if you request an invalid type, you will get an error. The API will never change your aggregation type if the requested type is invalid.
      startRow?:
        type: integer
        format: int32
        description: '[Optional; Default is 0] Zero-based index of the first row in
          the response. Must be a non-negative number.'
      endDate?:
        type: string
        description: '[Required] End date of the requested date range, in YYYY-MM-DD
          format, in PST (UTC - 8:00). Must be greater than or equal to the start
          date. This value is included in the range.'
      searchType?:
        type: string
        description: '[Optional; Default is "web"] The search type to filter for.'
      rowLimit?:
        type: integer
        format: int32
        description: '[Optional; Default is 1000] The maximum number of rows to return.
          Must be a number from 1 to 5,000 (inclusive).'
      startDate?:
        type: string
        description: '[Required] Start date of the requested date range, in YYYY-MM-DD
          format, in PST time (UTC - 8:00). Must be less than or equal to the end
          date. This value is included in the range.'
      dimensions?:
        type: array
        description: '[Optional] Zero or more dimensions to group results by. Dimensions
          are the group-by values in the Search Analytics page. Dimensions are combined
          to create a unique row key for each row. Results are grouped in the order
          that you supply these dimensions.'
        items:
          type: string
  SearchAnalyticsQueryResponse:
    type: object
    properties:
      responseAggregationType?:
        type: string
        description: How the results were aggregated.
      rows?:
        type: array
        description: A list of rows grouped by the key values in the order given in the query.
        items: ApiDataRow
    description: A list of rows, one per result, grouped by key. Metrics in each row are aggregated for all data grouped by that key either by page or property, as specified by the aggregation type parameter.
  SitemapsListResponse:
    type: object
    properties:
      sitemap?:
        type: array
        description: Contains detailed information about a specific URL submitted as a sitemap.
        items: WmxSitemap
    description: List of sitemaps.
  SitesListResponse:
    type: object
    properties:
      siteEntry?:
        type: array
        description: Contains permission level information about a Search Console site. For more information, see Permissions in Search Console.
        items: WmxSite
    description: List of sites with access level information.
  UrlCrawlErrorCount:
    type: object
    properties:
      count?:
        type: integer
        format: int64
        description: The error count at the given timestamp.
      timestamp?:
        type: string
        description: The date and time when the crawl attempt took place, in RFC 3339 format.
    description: An entry in a URL crawl errors time series.
  UrlCrawlErrorCountsPerType:
    type: object
    properties:
      entries?:
        type: array
        description: The error count entries time series.
        items: UrlCrawlErrorCount
      category?:
        type: string
        description: The crawl error type.
      platform?:
        type: string
        description: The general type of Googlebot that made the request (see list of Googlebot user-agents for the user-agents used).
    description: Number of errors per day for a specific error type (defined by platform and category).
  UrlCrawlErrorsCountsQueryResponse:
    type: object
    properties:
      countPerTypes?:
        type: array
        description: The time series of the number of URL crawl errors per error category and platform.
        items: UrlCrawlErrorCountsPerType
    description: A time series of the number of URL crawl errors per error category and platform.
  UrlCrawlErrorsSample:
    type: object
    properties:
      last_crawled?:
        type: datetime
        description: The time when the URL was last crawled, in RFC 3339 format.
      urlDetails?: UrlSampleDetails
      first_detected?:
        type: datetime
        description: The time the error was first detected, in RFC 3339 format.
      pageUrl?:
        type: string
        description: The URL of an error, relative to the site.
      responseCode?:
        type: integer
        format: int32
        description: The HTTP response code, if any.
    description: Contains information about specific crawl errors.
  UrlCrawlErrorsSamplesListResponse:
    type: object
    properties:
      urlCrawlErrorSample?:
        type: array
        description: Information about the sample URL and its crawl error.
        items: UrlCrawlErrorsSample
    description: List of crawl error samples.
  UrlSampleDetails:
    type: object
    properties:
      containingSitemaps?:
        type: array
        description: List of sitemaps pointing at this URL.
        items:
          type: string
      linkedFromUrls?:
        type: array
        description: A sample set of URLs linking to this URL.
        items:
          type: string
    description: Additional details about the URL, set only when calling get().
  WmxSite:
    type: object
    properties:
      permissionLevel?:
        type: string
        description: The user's permission level for the site.
      siteUrl?:
        type: string
        description: The URL of the site.
    description: Contains permission level information about a Search Console site. For more information, see  Permissions in Search Console.
  WmxSitemap:
    type: object
    properties:
      lastSubmitted?:
        type: string
        description: Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
      path?:
        type: string
        description: The url of the sitemap.
      contents?:
        type: array
        description: The various content types in the sitemap.
        items: WmxSitemapContent
      warnings?:
        type: integer
        format: int64
        description: Number of warnings for the sitemap. These are generally non-critical issues with URLs in the sitemaps.
      isPending?:
        type: boolean
        description: If true, the sitemap has not been processed.
      lastDownloaded?:
        type: string
        description: Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
      type?:
        type: string
        description: 'The type of the sitemap. For example: rssFeed.'
      isSitemapsIndex?:
        type: boolean
        description: If true, the sitemap is a collection of sitemaps.
      errors?:
        type: integer
        format: int64
        description: Number of errors in the sitemap. These are issues with the sitemap itself that need to be fixed before it can be processed correctly.
    description: Contains detailed information about a specific URL submitted as a sitemap.
  WmxSitemapContent:
    type: object
    properties:
      submitted?:
        type: integer
        format: int64
        description: The number of URLs in the sitemap (of the content type).
      indexed?:
        type: integer
        format: int64
        description: The number of URLs from the sitemap that were indexed (of the content type).
      type?:
        type: string
        description: 'The specific type of content in this sitemap. For example: web.'
    description: Information about the various content types in the sitemap.
/sites:
  /{siteUrl}:
    uriParameters:
      siteUrl:
        type: string
        description: 'The site''s URL, including protocol. For example: http://www.example.com/'
    /urlCrawlErrorsSamples:
      /{url}:
        uriParameters:
          url:
            type: string
            description: The relative path (without the site) of the sample URL. It must be one of the URLs returned by list(). For example, for the URL https://www.example.com/pagename on the site https://www.example.com/, the url value is pagename
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
              - https://www.googleapis.com/auth/webmasters.readonly
          description: Retrieves details about crawl errors for a site's sample URL.
          displayName: Get
          is:
          - hasParameters
          queryParameters:
            category:
              type: string
              description: 'The crawl error category. For example: authPermissions'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              enum:
              - authPermissions
              - flashContent
              - manyToOneRedirect
              - notFollowed
              - notFound
              - other
              - roboted
              - serverError
              - soft404
            platform:
              type: string
              description: 'The user agent type (platform) that made the request.
                For example: web'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              enum:
              - mobile
              - smartphoneOnly
              - web
          responses:
            200:
              body:
                application/json: UrlCrawlErrorsSample
          (commons.Id): webmasters.urlcrawlerrorssamples.get
          (commons.LogicalStructure):
          - Urlcrawlerrorssamples
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
          description: Marks the provided site's sample URL as fixed, and removes it from the samples list.
          displayName: Mark AsFixed
          is:
          - hasParameters
          queryParameters:
            category:
              type: string
              description: 'The crawl error category. For example: authPermissions'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              enum:
              - authPermissions
              - flashContent
              - manyToOneRedirect
              - notFollowed
              - notFound
              - other
              - roboted
              - serverError
              - soft404
            platform:
              type: string
              description: 'The user agent type (platform) that made the request.
                For example: web'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              enum:
              - mobile
              - smartphoneOnly
              - web
          (commons.Id): webmasters.urlcrawlerrorssamples.markAsFixed
          (commons.LogicalStructure):
          - Urlcrawlerrorssamples
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/webmasters
            - https://www.googleapis.com/auth/webmasters.readonly
        description: Lists a site's sample URLs for the specified crawl error category and platform.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          category:
            type: string
            description: 'The crawl error category. For example: authPermissions'
            (commons.EnumDescriptions):
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            enum:
            - authPermissions
            - flashContent
            - manyToOneRedirect
            - notFollowed
            - notFound
            - other
            - roboted
            - serverError
            - soft404
          platform:
            type: string
            description: 'The user agent type (platform) that made the request. For
              example: web'
            (commons.EnumDescriptions):
            - ''
            - ''
            - ''
            enum:
            - mobile
            - smartphoneOnly
            - web
        responses:
          200:
            body:
              application/json: UrlCrawlErrorsSamplesListResponse
        (commons.Id): webmasters.urlcrawlerrorssamples.list
        (commons.LogicalStructure):
        - Urlcrawlerrorssamples
    /sitemaps:
      /{feedpath}:
        uriParameters:
          feedpath:
            type: string
            description: 'The URL of the sitemap to add. For example: http://www.example.com/sitemap.xml'
        put:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
          description: Submits a sitemap for a site.
          displayName: Submit
          is:
          - hasParameters
          (commons.Id): webmasters.sitemaps.submit
          (commons.LogicalStructure):
          - Sitemaps
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
              - https://www.googleapis.com/auth/webmasters.readonly
          description: Retrieves information about a specific sitemap.
          displayName: Get
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: WmxSitemap
          (commons.Id): webmasters.sitemaps.get
          (commons.LogicalStructure):
          - Sitemaps
        delete:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
          description: Deletes a sitemap from this site.
          displayName: Delete
          is:
          - hasParameters
          (commons.Id): webmasters.sitemaps.delete
          (commons.LogicalStructure):
          - Sitemaps
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/webmasters
            - https://www.googleapis.com/auth/webmasters.readonly
        description: Lists the sitemaps-entries submitted for this site, or included in the sitemap index file (if sitemapIndex is specified in the request).
        displayName: List
        is:
        - hasParameters
        queryParameters:
          sitemapIndex?:
            type: string
            description: 'A URL of a site''s sitemap index. For example: http://www.example.com/sitemapindex.xml'
        responses:
          200:
            body:
              application/json: SitemapsListResponse
        (commons.Id): webmasters.sitemaps.list
        (commons.LogicalStructure):
        - Sitemaps
    /urlCrawlErrorsCounts:
      /query:
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
              - https://www.googleapis.com/auth/webmasters.readonly
          description: Retrieves a time series of the number of URL crawl errors per error category and platform.
          displayName: Query
          is:
          - hasParameters
          queryParameters:
            latestCountsOnly?:
              type: boolean
              default: true
              description: If true, returns only the latest crawl error counts.
            category?:
              type: string
              description: 'The crawl error category. For example: serverError. If
                not specified, returns results for all categories.'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              - ''
              enum:
              - authPermissions
              - flashContent
              - manyToOneRedirect
              - notFollowed
              - notFound
              - other
              - roboted
              - serverError
              - soft404
            platform?:
              type: string
              description: 'The user agent type (platform) that made the request.
                For example: web. If not specified, returns results for all platforms.'
              (commons.EnumDescriptions):
              - ''
              - ''
              - ''
              enum:
              - mobile
              - smartphoneOnly
              - web
          responses:
            200:
              body:
                application/json: UrlCrawlErrorsCountsQueryResponse
          (commons.Id): webmasters.urlcrawlerrorscounts.query
          (commons.LogicalStructure):
          - Urlcrawlerrorscounts
    /searchAnalytics:
      /query:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/webmasters
              - https://www.googleapis.com/auth/webmasters.readonly
          description: |-
            Query your data with filters and parameters that you define. Returns zero or more rows grouped by the row keys that you define. You must define a date range of one or more days.

            When date is one of the group by values, any days without data are omitted from the result list. If you need to know which days have data, issue a broad date range query grouped by date for any metric, and see which day rows are returned.
          displayName: Query
          is:
          - hasParameters
          body:
            application/json: SearchAnalyticsQueryRequest
          responses:
            200:
              body:
                application/json: SearchAnalyticsQueryResponse
          (commons.Id): webmasters.searchanalytics.query
          (commons.LogicalStructure):
          - Searchanalytics
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/webmasters
      description: Adds a site to the set of the user's sites in Search Console.
      displayName: Add
      is:
      - hasParameters
      (commons.Id): webmasters.sites.add
      (commons.LogicalStructure):
      - Sites
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/webmasters
          - https://www.googleapis.com/auth/webmasters.readonly
      description: Retrieves information about specific site.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: WmxSite
      (commons.Id): webmasters.sites.get
      (commons.LogicalStructure):
      - Sites
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/webmasters
      description: Removes a site from the set of the user's Search Console sites.
      displayName: Delete
      is:
      - hasParameters
      (commons.Id): webmasters.sites.delete
      (commons.LogicalStructure):
      - Sites
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/webmasters
        - https://www.googleapis.com/auth/webmasters.readonly
    description: Lists the user's Search Console sites.
    displayName: List
    is:
    - hasParameters
    responses:
      200:
        body:
          application/json: SitesListResponse
    (commons.Id): webmasters.sites.list
    (commons.LogicalStructure):
    - Sites
