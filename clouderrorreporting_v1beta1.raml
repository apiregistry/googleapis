#%RAML 1.0
title: Stackdriver Error Reporting API
version: v1beta1
baseUri: https://clouderrorreporting.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/error-reporting/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): clouderrorreporting:v1beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
    (commons.OathScopeDescriptions):
    - View and manage your data across Google Cloud Platform services
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
        enum:
        - '1'
        - '2'
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  DeleteEventsResponse:
    type: object
    description: Response message for deleting error events.
  ErrorContext:
    type: object
    properties:
      httpRequest?: HttpRequestContext
      user?:
        type: string
        description: |-
          The user who caused or was affected by the crash.
          This can be a user ID, an email address, or an arbitrary token that
          uniquely identifies the user.
          When sending an error report, leave this field empty if the user was not
          logged in. In this case the
          Error Reporting system will use other data, such as remote IP address, to
          distinguish affected users. See `affected_users_count` in
          `ErrorGroupStats`.
      reportLocation?: SourceLocation
    description: |-
      A description of the context in which an error occurred.
      This data should be provided by the application when reporting an error,
      unless the
      error report has been generated automatically from Google App Engine logs.
  ErrorEvent:
    type: object
    properties:
      context?: ErrorContext
      eventTime?:
        type: string
        description: |-
          Time when the event occurred as provided in the error report.
          If the report did not contain a timestamp, the time the error was received
          by the Error Reporting system is used.
      serviceContext?: ServiceContext
      message?:
        type: string
        description: The stack trace that was reported or logged by the service.
    description: An error event which is returned by the Error Reporting system.
  ErrorGroup:
    type: object
    properties:
      groupId?:
        type: string
        description: |-
          Group IDs are unique for a given project. If the same kind of error
          occurs in different service contexts, it will receive the same group ID.
      name?:
        type: string
        description: |-
          The group resource name.
          Example: <code>projects/my-project-123/groups/my-groupid</code>
      trackingIssues?:
        type: array
        description: Associated tracking issues.
        items: TrackingIssue
    description: Description of a group of similar error events.
  ErrorGroupStats:
    type: object
    properties:
      lastSeenTime?:
        type: string
        description: |-
          Approximate last occurrence that was ever seen for this group and
          which matches the given filter criteria, ignoring the time_range
          that was specified in the request.
      firstSeenTime?:
        type: string
        description: |-
          Approximate first occurrence that was ever seen for this group
          and which matches the given filter criteria, ignoring the
          time_range that was specified in the request.
      affectedUsersCount?:
        type: integer
        format: int64
        description: |-
          Approximate number of affected users in the given group that
          match the filter criteria.
          Users are distinguished by data in the `ErrorContext` of the
          individual error events, such as their login name or their remote
          IP address in case of HTTP requests.
          The number of affected users can be zero even if the number of
          errors is non-zero if no data was provided from which the
          affected user could be deduced.
          Users are counted based on data in the request
          context that was provided in the error report. If more users are
          implicitly affected, such as due to a crash of the whole service,
          this is not reflected here.
      count?:
        type: integer
        format: int64
        description: |-
          Approximate total number of events in the given group that match
          the filter criteria.
      timedCounts?:
        type: array
        description: |-
          Approximate number of occurrences over time.
          Timed counts returned by ListGroups are guaranteed to be:

          - Inside the requested time interval
          - Non-overlapping, and
          - Ordered by ascending time.
        items: TimedCount
      numAffectedServices?:
        type: integer
        format: int32
        description: |-
          The total number of services with a non-zero error count for the given
          filter criteria.
      affectedServices?:
        type: array
        description: |-
          Service contexts with a non-zero error count for the given filter
          criteria. This list can be truncated if multiple services are affected.
          Refer to `num_affected_services` for the total count.
        items: ServiceContext
      representative?: ErrorEvent
      group?: ErrorGroup
    description: |-
      Data extracted for a specific group based on certain filter criteria,
      such as a given time period and/or service filter.
  HttpRequestContext:
    type: object
    properties:
      responseStatusCode?:
        type: integer
        format: int32
        description: The HTTP response status code for the request.
      referrer?:
        type: string
        description: The referrer information that is provided with the request.
      remoteIp?:
        type: string
        description: |-
          The IP address from which the request originated.
          This can be IPv4, IPv6, or a token which is derived from the
          IP address, depending on the data that has been provided
          in the error report.
      method?:
        type: string
        description: The type of HTTP request, such as `GET`, `POST`, etc.
      userAgent?:
        type: string
        description: The user agent information that is provided with the request.
      url?:
        type: string
        description: The URL of the request.
    description: |-
      HTTP request data that is related to a reported error.
      This data should be provided by the application when reporting an error,
      unless the
      error report has been generated automatically from Google App Engine logs.
  ListEventsResponse:
    type: object
    properties:
      timeRangeBegin?:
        type: string
        description: The timestamp specifies the start time to which the request was restricted.
      nextPageToken?:
        type: string
        description: |-
          If non-empty, more results are available.
          Pass this token, along with the same query parameters as the first
          request, to view the next page of results.
      errorEvents?:
        type: array
        description: The error events which match the given request.
        items: ErrorEvent
    description: Contains a set of requested error events.
  ListGroupStatsResponse:
    type: object
    properties:
      timeRangeBegin?:
        type: string
        description: |-
          The timestamp specifies the start time to which the request was restricted.
          The start time is set based on the requested time range. It may be adjusted
          to a later time if a project has exceeded the storage quota and older data
          has been deleted.
      nextPageToken?:
        type: string
        description: |-
          If non-empty, more results are available.
          Pass this token, along with the same query parameters as the first
          request, to view the next page of results.
      errorGroupStats?:
        type: array
        description: The error group stats which match the given request.
        items: ErrorGroupStats
    description: Contains a set of requested error group stats.
  ReportErrorEventResponse:
    type: object
    description: |-
      Response for reporting an individual error event.
      Data may be added to this message in the future.
  ReportedErrorEvent:
    type: object
    properties:
      context?: ErrorContext
      eventTime?:
        type: string
        description: |-
          [Optional] Time when the event occurred.
          If not provided, the time when the event was received by the
          Error Reporting system will be used.
      serviceContext?: ServiceContext
      message?:
        type: string
        description: |-
          [Required] A message describing the error. The message can contain an
          exception stack in one of the supported programming languages and formats.
          In that case, the message is parsed and detailed exception information
          is returned when retrieving the error event again.
    description: An error event which is reported to the Error Reporting system.
  ServiceContext:
    type: object
    properties:
      service?:
        type: string
        description: |-
          An identifier of the service, such as the name of the
          executable, job, or Google App Engine service name. This field is expected
          to have a low number of values that are relatively stable over time, as
          opposed to `version`, which can be changed whenever new code is deployed.

          Contains the service name for error reports extracted from Google
          App Engine logs or `default` if the App Engine default service is used.
      version?:
        type: string
        description: |-
          Represents the source code version that the developer provided,
          which could represent a version label or a Git SHA-1 hash, for example.
    description: |-
      Describes a running service that sends errors.
      Its version changes over time and multiple versions can run in parallel.
  SourceLocation:
    type: object
    properties:
      functionName?:
        type: string
        description: |-
          Human-readable name of a function or method.
          The value can include optional context like the class or package name.
          For example, `my.package.MyClass.method` in case of Java.
      filePath?:
        type: string
        description: |-
          The source code filename, which can include a truncated relative
          path, or a full path from a production machine.
      lineNumber?:
        type: integer
        format: int32
        description: 1-based. 0 indicates that the line number is unknown.
    description: |-
      Indicates a location in the source code of the service for which
      errors are reported.
      This data should be provided by the application when reporting an error,
      unless the error report has been generated automatically from Google App
      Engine logs. All fields are optional.
  TimedCount:
    type: object
    properties:
      count?:
        type: integer
        format: int64
        description: Approximate number of occurrences in the given time period.
      startTime?:
        type: string
        description: Start of the time period to which `count` refers (included).
      endTime?:
        type: string
        description: End of the time period to which `count` refers (excluded).
    description: |-
      The number of errors in a given time period.
      All numbers are approximate since the error events are sampled
      before counting them.
  TrackingIssue:
    type: object
    properties:
      url?:
        type: string
        description: |-
          A URL pointing to a related entry in an issue tracking system.
          Example: https://github.com/user/project/issues/4
    description: Information related to tracking the progress on resolving the error.
/v1beta1:
  /{projectName}:
    uriParameters:
      projectName:
        type: string
        pattern: ^projects/[^/]+$
        description: |-
          [Required] The resource name of the Google Cloud Platform project. Written
          as `projects/` plus the
          [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840).
          Example: `projects/my-project-123`.
    /events:
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Deletes all error events of a given project.
        displayName: Delete Events
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: DeleteEventsResponse
        (commons.Id): clouderrorreporting.projects.deleteEvents
        (commons.LogicalStructure):
        - Projects
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Lists the specified events.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          serviceFilter.version?:
            type: string
            description: |-
              [Optional] The exact value to match against
              [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
          serviceFilter.service?:
            type: string
            description: |-
              [Optional] The exact value to match against
              [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
          groupId?:
            type: string
            description: '[Required] The group for which events shall be returned.'
          timeRange.period?:
            type: string
            description: Restricts the query to the specified time range.
            enum:
            - PERIOD_UNSPECIFIED
            - PERIOD_1_HOUR
            - PERIOD_6_HOURS
            - PERIOD_1_DAY
            - PERIOD_1_WEEK
            - PERIOD_30_DAYS
          pageSize?:
            type: integer
            format: int32
            description: '[Optional] The maximum number of results to return per response.'
          pageToken?:
            type: string
            description: '[Optional] A `next_page_token` provided by a previous response.'
        responses:
          200:
            body:
              application/json: ListEventsResponse
        (commons.Id): clouderrorreporting.projects.events.list
        (commons.LogicalStructure):
        - Projects
        - Events
    /groupStats:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Lists the specified groups.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          serviceFilter.version?:
            type: string
            description: |-
              [Optional] The exact value to match against
              [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).
          timedCountDuration?:
            type: string
            description: |-
              [Optional] The preferred duration for a single returned `TimedCount`.
              If not set, no timed counts are returned.
          serviceFilter.service?:
            type: string
            description: |-
              [Optional] The exact value to match against
              [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).
          groupId?:
            type: string
            description: '[Optional] List all <code>ErrorGroupStats</code> with these
              IDs.'
          timeRange.period?:
            type: string
            description: Restricts the query to the specified time range.
            enum:
            - PERIOD_UNSPECIFIED
            - PERIOD_1_HOUR
            - PERIOD_6_HOURS
            - PERIOD_1_DAY
            - PERIOD_1_WEEK
            - PERIOD_30_DAYS
          pageSize?:
            type: integer
            format: int32
            description: |-
              [Optional] The maximum number of results to return per response.
              Default is 20.
          pageToken?:
            type: string
            description: |-
              [Optional] A `next_page_token` provided by a previous response. To view
              additional results, pass this token along with the identical query
              parameters as the first request.
          alignment?:
            type: string
            description: |-
              [Optional] The alignment of the timed counts to be returned.
              Default is `ALIGNMENT_EQUAL_AT_END`.
            enum:
            - ERROR_COUNT_ALIGNMENT_UNSPECIFIED
            - ALIGNMENT_EQUAL_ROUNDED
            - ALIGNMENT_EQUAL_AT_END
          alignmentTime?:
            type: string
            description: |-
              [Optional] Time where the timed counts shall be aligned if rounded
              alignment is chosen. Default is 00:00 UTC.
          order?:
            type: string
            description: |-
              [Optional] The sort order in which the results are returned.
              Default is `COUNT_DESC`.
            enum:
            - GROUP_ORDER_UNSPECIFIED
            - COUNT_DESC
            - LAST_SEEN_DESC
            - CREATED_DESC
            - AFFECTED_USERS_DESC
        responses:
          200:
            body:
              application/json: ListGroupStatsResponse
        (commons.Id): clouderrorreporting.projects.groupStats.list
        (commons.LogicalStructure):
        - Projects
        - Group Stats
    /events:report:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: |-
          Report an individual error event.

          This endpoint accepts <strong>either</strong> an OAuth token,
          <strong>or</strong> an
          <a href="https://support.google.com/cloud/answer/6158862">API key</a>
          for authentication. To use an API key, append it to the URL as the value of
          a `key` parameter. For example:
          <pre>POST https://clouderrorreporting.googleapis.com/v1beta1/projects/example-project/events:report?key=123ABC456</pre>
        displayName: Report
        is:
        - hasParameters
        body:
          application/json: ReportedErrorEvent
        responses:
          200:
            body:
              application/json: ReportErrorEventResponse
        (commons.Id): clouderrorreporting.projects.events.report
        (commons.LogicalStructure):
        - Projects
        - Events
  /{groupName}:
    uriParameters:
      groupName:
        type: string
        pattern: ^projects/[^/]+/groups/[^/]+$
        description: |-
          [Required] The group resource name. Written as
          <code>projects/<var>projectID</var>/groups/<var>group_name</var></code>.
          Call
          <a href="/error-reporting/reference/rest/v1beta1/projects.groupStats/list">
          <code>groupStats.list</code></a> to return a list of groups belonging to
          this project.

          Example: <code>projects/my-project-123/groups/my-group</code>
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Get the specified group.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: ErrorGroup
      (commons.Id): clouderrorreporting.projects.groups.get
      (commons.LogicalStructure):
      - Projects
      - Groups
  /{name}:
    uriParameters:
      name:
        type: string
        pattern: ^projects/[^/]+/groups/[^/]+$
        description: |-
          The group resource name.
          Example: <code>projects/my-project-123/groups/my-groupid</code>
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: |-
        Replace the data for the specified group.
        Fails if the group does not exist.
      displayName: Update
      is:
      - hasParameters
      body:
        application/json: ErrorGroup
      responses:
        200:
          body:
            application/json: ErrorGroup
      (commons.Id): clouderrorreporting.projects.groups.update
      (commons.LogicalStructure):
      - Projects
      - Groups
