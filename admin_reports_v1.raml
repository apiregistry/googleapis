#%RAML 1.0
title: Admin Reports API
version: reports_v1
baseUri: https://www.googleapis.com/admin/reports/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Id): admin:reports_v1
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/admin-sdk/reports/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/admin.reports.audit.readonly
      - https://www.googleapis.com/auth/admin.reports.usage.readonly
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Activities:
    type: object
    properties:
      kind?:
        type: string
        default: admin#reports#activities
        description: Kind of list response this is.
      nextPageToken?:
        type: string
        description: Token for retrieving the next page
      etag?:
        type: string
        description: ETag of the resource.
      items?:
        type: array
        description: Each record in read response.
        items: Activity
    description: JSON template for a collection of activites.
  Activity:
    type: object
    properties:
      actor?:
        type: object
        properties:
          profileId?:
            type: string
            description: Obfuscated user id of the user.
          callerType?:
            type: string
            description: User or OAuth 2LO request.
          email?:
            type: string
            description: Email address of the user.
          key?:
            type: string
            description: For OAuth 2LO API requests, consumer_key of the requestor.
        description: User doing the action.
      kind?:
        type: string
        default: admin#reports#activity
        description: Kind of resource this is.
      ipAddress?:
        type: string
        description: IP Address of the user doing the action.
      etag?:
        type: string
        description: ETag of the entry.
      id?:
        type: object
        properties:
          uniqueQualifier?:
            type: integer
            format: int64
            description: Unique qualifier if multiple events have the same time.
          customerId?:
            type: string
            description: Obfuscated customer ID of the source customer.
          time?:
            type: string
            description: Time of occurrence of the activity.
          applicationName?:
            type: string
            description: Application name to which the event belongs.
        description: Unique identifier for each activity record.
      ownerDomain?:
        type: string
        description: Domain of source customer.
      events?:
        type: array
        description: Activity events.
        items:
          type: object
          properties:
            name?:
              type: string
              description: Name of event.
            type?:
              type: string
              description: Type of event.
            parameters?:
              type: array
              description: Parameter value pairs for various applications.
              items:
                type: object
                properties:
                  intValue?:
                    type: integer
                    format: int64
                    description: Integral value of the parameter.
                  multiIntValue?:
                    type: array
                    description: Multi-int value of the parameter.
                    items:
                      type: integer
                      format: int64
                  name?:
                    type: string
                    description: The name of the parameter.
                  boolValue?:
                    type: boolean
                    description: Boolean value of the parameter.
                  multiValue?:
                    type: array
                    description: Multi-string value of the parameter.
                    items:
                      type: string
                  value?:
                    type: string
                    description: String value of the parameter.
    description: JSON template for the activity resource.
  Channel:
    type: object
    properties:
      resourceId?:
        type: string
        description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
      address?:
        type: string
        description: The address where notifications are delivered for this channel.
      payload?:
        type: boolean
        description: A Boolean value to indicate whether payload is wanted. Optional.
      kind?:
        type: string
        default: api#channel
        description: 'Identifies this as a notification channel used to watch for
          changes to a resource. Value: the fixed string "api#channel".'
      expiration?:
        type: integer
        format: int64
        description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
      id?:
        type: string
        description: A UUID or similar unique string that identifies this channel.
      resourceUri?:
        type: string
        description: A version-specific identifier for the watched resource.
      params?:
        type: object
        description: Additional parameters controlling delivery channel behavior. Optional.
      type?:
        type: string
        description: The type of delivery mechanism used for this channel.
      token?:
        type: string
        description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
    description: An notification channel used to watch for resource changes.
  UsageReport:
    type: object
    properties:
      date?:
        type: string
        description: The date to which the record belongs.
      kind?:
        type: string
        default: admin#reports#usageReport
        description: The kind of object.
      etag?:
        type: string
        description: ETag of the resource.
      parameters?:
        type: array
        description: Parameter value pairs for various applications.
        items:
          type: object
          properties:
            stringValue?:
              type: string
              description: String value of the parameter.
            datetimeValue?:
              type: string
              description: RFC 3339 formatted value of the parameter.
            intValue?:
              type: integer
              format: int64
              description: Integral value of the parameter.
            name?:
              type: string
              description: The name of the parameter.
            msgValue?:
              type: array
              description: Nested message value of the parameter.
              items:
                type: object
            boolValue?:
              type: boolean
              description: Boolean value of the parameter.
      entity?:
        type: object
        properties:
          profileId?:
            type: string
            description: Obfuscated user id for the record.
          customerId?:
            type: string
            description: Obfuscated customer id for the record.
          userEmail?:
            type: string
            description: user's email.
          type?:
            type: string
            description: The type of item, can be a customer or user.
        description: Information about the type of the item.
    description: JSON template for a usage report.
  UsageReports:
    type: object
    properties:
      kind?:
        type: string
        default: admin#reports#usageReports
        description: The kind of object.
      nextPageToken?:
        type: string
        description: Token for retrieving the next page
      warnings?:
        type: array
        description: Warnings if any.
        items:
          type: object
          properties:
            code?:
              type: string
              description: Machine readable code / warning type.
            data?:
              type: array
              description: Key-Value pairs to give detailed information on the warning.
              items:
                type: object
                properties:
                  value?:
                    type: string
                    description: Value associated with a key-value pair to give detailed information on the warning.
                  key?:
                    type: string
                    description: Key associated with a key-value pair to give detailed information on the warning.
            message?:
              type: string
              description: Human readable message for the warning.
      usageReports?:
        type: array
        description: Various application parameter records.
        items: UsageReport
      etag?:
        type: string
        description: ETag of the resource.
    description: JSON template for a collection of usage reports.
/usage:
  /dates:
    /{date}:
      uriParameters:
        date:
          type: string
          pattern: (\d){4}-(\d){2}-(\d){2}
          description: Represents the date in yyyy-mm-dd format for which the data is to be fetched.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
        description: Retrieves a report which is a collection of properties / statistics for a specific customer.
        displayName: Get
        is:
        - hasParameters
        queryParameters:
          customerId?:
            type: string
            pattern: C.+
            description: Represents the customer for which the data is to be fetched.
          pageToken?:
            type: string
            description: Token to specify next page.
          parameters?:
            type: string
            pattern: (((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[^,]+,)*(((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[^,]+)
            description: Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.
        responses:
          200:
            body:
              application/json: UsageReports
        (commons.Id): reports.customerUsageReports.get
        (commons.LogicalStructure):
        - Customer Usage Reports
  /users:
    /{userKey}:
      uriParameters:
        userKey:
          type: string
          description: Represents the profile id or the user email for which the data should be filtered.
      /dates:
        /{date}:
          uriParameters:
            date:
              type: string
              pattern: (\d){4}-(\d){2}-(\d){2}
              description: Represents the date in yyyy-mm-dd format for which the data is to be fetched.
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/admin.reports.usage.readonly
            description: Retrieves a report which is a collection of properties / statistics for a set of users.
            displayName: Get
            is:
            - hasParameters
            queryParameters:
              maxResults?:
                type: integer
                format: int32
                description: Maximum number of results to return. Maximum allowed is 1000
                maximum: 1000
              customerId?:
                type: string
                pattern: C.+
                description: Represents the customer for which the data is to be fetched.
              filters?:
                type: string
                pattern: (((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+,)*(((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+)
                description: Represents the set of filters including parameter operator value.
              pageToken?:
                type: string
                description: Token to specify next page.
              parameters?:
                type: string
                pattern: (((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[^,]+,)*(((accounts)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)):[^,]+)
                description: Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2.
            responses:
              200:
                body:
                  application/json: UsageReports
            (commons.Id): reports.userUsageReport.get
            (commons.LogicalStructure):
            - User Usage Report
/:
  /admin:
    /reports_v1:
      /channels:
        /stop:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/admin.reports.audit.readonly
            description: Stop watching resources through this channel
            displayName: Stop
            is:
            - hasParameters
            body:
              application/json: Channel
            (commons.Id): admin.channels.stop
            (commons.LogicalStructure):
            - Channels
/activity:
  /users:
    /{userKey}:
      uriParameters:
        userKey:
          type: string
          description: Represents the profile id or the user email for which the data should be filtered. When 'all' is specified as the userKey, it returns usageReports for all users.
      /applications:
        /{applicationName}:
          uriParameters:
            applicationName:
              type: string
              pattern: (admin)|(calendar)|(drive)|(login)|(mobile)|(token)|(groups)|(saml)
              description: Application name for which the events are to be retrieved.
          /watch:
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/admin.reports.audit.readonly
              description: Push changes to activities
              displayName: Watch
              is:
              - hasParameters
              queryParameters:
                actorIpAddress?:
                  type: string
                  description: IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.
                maxResults?:
                  type: integer
                  format: int32
                  description: Number of activity records to be shown in each page.
                  maximum: 1000
                  minimum: 1
                customerId?:
                  type: string
                  pattern: C.+
                  description: Represents the customer for which the data is to be fetched.
                eventName?:
                  type: string
                  description: Name of the event being queried.
                startTime?:
                  type: string
                  pattern: (\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)(?:\.(\d+))?(?:(Z)|([-+])(\d\d):(\d\d))
                  description: Return events which occured at or after this time.
                endTime?:
                  type: string
                  pattern: (\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)(?:\.(\d+))?(?:(Z)|([-+])(\d\d):(\d\d))
                  description: Return events which occured at or before this time.
                filters?:
                  type: string
                  pattern: (.+[<,<=,==,>=,>,<>].+,)*(.+[<,<=,==,>=,>,<>].+)
                  description: Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...
                pageToken?:
                  type: string
                  description: Token to specify next page.
              body:
                application/json: Channel
              responses:
                200:
                  body:
                    application/json: Channel
              (commons.Id): reports.activities.watch
              (commons.LogicalStructure):
              - Activities
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/admin.reports.audit.readonly
            description: Retrieves a list of activities for a specific customer and application.
            displayName: List
            is:
            - hasParameters
            queryParameters:
              actorIpAddress?:
                type: string
                description: IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses.
              maxResults?:
                type: integer
                format: int32
                description: Number of activity records to be shown in each page.
                maximum: 1000
                minimum: 1
              customerId?:
                type: string
                pattern: C.+
                description: Represents the customer for which the data is to be fetched.
              eventName?:
                type: string
                description: Name of the event being queried.
              startTime?:
                type: string
                pattern: (\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)(?:\.(\d+))?(?:(Z)|([-+])(\d\d):(\d\d))
                description: Return events which occured at or after this time.
              endTime?:
                type: string
                pattern: (\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)(?:\.(\d+))?(?:(Z)|([-+])(\d\d):(\d\d))
                description: Return events which occured at or before this time.
              filters?:
                type: string
                pattern: (.+[<,<=,==,>=,>,<>].+,)*(.+[<,<=,==,>=,>,<>].+)
                description: Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],...
              pageToken?:
                type: string
                description: Token to specify next page.
            responses:
              200:
                body:
                  application/json: Activities
            (commons.Id): reports.activities.list
            (commons.LogicalStructure):
            - Activities
