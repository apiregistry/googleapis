#%RAML 1.0
title: APIs Discovery Service
version: v1
baseUri: https://www.googleapis.com/discovery/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/discovery/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/feature/filing_cabinet_search-g32.png
  name: x32
- url: http://www.google.com/images/icons/feature/filing_cabinet_search-g16.png
  name: x16
(commons.Id): discovery:v1
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
types:
  DirectoryList:
    type: object
    properties:
      kind?:
        type: string
        default: discovery#directoryList
        description: The kind for this response.
      items?:
        type: array
        description: The individual directory entries. One entry per api/version pair.
        items:
          type: object
          properties:
            discoveryRestUrl?:
              type: string
              description: The URL for the discovery REST document.
            kind?:
              type: string
              default: discovery#directoryItem
              description: The kind for this response.
            name?:
              type: string
              description: The name of the API.
            description?:
              type: string
              description: The description of this API.
            discoveryLink?:
              type: string
              description: A link to the discovery document.
            documentationLink?:
              type: string
              description: A link to human readable documentation for the API.
            id?:
              type: string
              description: The id of this API.
            icons?:
              type: object
              properties:
                x32?:
                  type: string
                  description: The URL of the 32x32 icon.
                x16?:
                  type: string
                  description: The URL of the 16x16 icon.
              description: Links to 16x16 and 32x32 icons representing the API.
            title?:
              type: string
              description: The title of this API.
            version?:
              type: string
              description: The version of the API.
            preferred?:
              type: boolean
              description: True if this version is the preferred version to use.
            labels?:
              type: array
              description: Labels for the status of this API, such as labs or deprecated.
              items:
                type: string
      discoveryVersion?:
        type: string
        default: v1
        description: Indicate the version of the Discovery API used to generate this doc.
  JsonSchema:
    type: object
    properties:
      format?:
        type: string
        description: 'An additional regular expression or key that helps constrain
          the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23'
      pattern?:
        type: string
        description: 'The regular expression this parameter must conform to. Uses
          Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html'
      annotations?:
        type: object
        properties:
          required?:
            type: array
            description: A list of methods for which this property is required on requests.
            items:
              type: string
        description: Additional information about this property.
      description?:
        type: string
        description: A description of this object.
      readOnly?:
        type: boolean
        description: The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service.
      type?:
        type: string
        description: 'The value type for this schema. A list of values can be found
          here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1'
      repeated?:
        type: boolean
        description: Whether this parameter may appear multiple times.
      enum?:
        type: array
        description: Values this parameter may take (if it is an enum).
        items:
          type: string
      required?:
        type: boolean
        description: Whether the parameter is required.
      default?:
        type: string
        description: The default value of this property (if one exists).
      variant?:
        type: object
        properties:
          discriminant?:
            type: string
            description: The name of the type discriminant property.
          map?:
            type: array
            description: The map of discriminant value to schema to use for parsing..
            items:
              type: object
              properties:
                $ref?:
                  type: string
                type_value?:
                  type: string
        description: In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.
      enumDescriptions?:
        type: array
        description: The descriptions for the enums. Each position maps to the corresponding value in the "enum" array.
        items:
          type: string
      maximum?:
        type: string
        description: The maximum value of this parameter.
      location?:
        type: string
        description: Whether this parameter goes in the query or the path for REST requests.
      additionalProperties?: JsonSchema
      id?:
        type: string
        description: Unique identifier for this schema.
      $ref?:
        type: string
        description: A reference to another schema. The value of this property is the "id" of another schema.
      items?: JsonSchema
      minimum?:
        type: string
        description: The minimum value of this parameter.
      properties?:
        type: object
        description: If this is a schema for an object, list the schema for each property of this object.
  RestDescription:
    type: object
    properties:
      auth?:
        type: object
        properties:
          oauth2?:
            type: object
            properties:
              scopes?:
                type: object
                description: Available OAuth 2.0 scopes.
            description: OAuth 2.0 authentication information.
        description: Authentication information.
      exponentialBackoffDefault?:
        type: boolean
        description: Enable exponential backoff for suitable methods in the generated clients.
      methods?:
        type: object
        description: API-level methods for this API.
      description?:
        type: string
        description: The description of this API.
      title?:
        type: string
        description: The title of this API.
      discoveryVersion?:
        type: string
        default: v1
        description: Indicate the version of the Discovery API used to generate this doc.
      features?:
        type: array
        description: A list of supported features for this API.
        items:
          type: string
      protocol?:
        type: string
        default: rest
        description: The protocol described by this document.
      ownerName?:
        type: string
        description: The name of the owner of this API. See ownerDomain.
      batchPath?:
        type: string
        default: batch
        description: The path for REST batch requests.
      id?:
        type: string
        description: The ID of this API.
      canonicalName?:
        type: string
        description: Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.
      packagePath?:
        type: string
        description: The package of the owner of this API. See ownerDomain.
      kind?:
        type: string
        default: discovery#restDescription
        description: The kind for this response.
      resources?:
        type: object
        description: The resources in this API.
      documentationLink?:
        type: string
        description: A link to human readable documentation for the API.
      icons?:
        type: object
        properties:
          x32?:
            type: string
            description: The URL of the 32x32 icon.
          x16?:
            type: string
            description: The URL of the 16x16 icon.
        description: Links to 16x16 and 32x32 icons representing the API.
      version?:
        type: string
        description: The version of this API.
      labels?:
        type: array
        description: Labels for the status of this API, such as labs or deprecated.
        items:
          type: string
      revision?:
        type: string
        description: The version of this API.
      rootUrl?:
        type: string
        description: The root URL under which all API services live.
      baseUrl?:
        type: string
        description: '[DEPRECATED] The base URL for REST requests.'
      basePath?:
        type: string
        description: '[DEPRECATED] The base path for REST requests.'
      schemas?:
        type: object
        description: The schemas for this API.
      servicePath?:
        type: string
        description: The base path for all REST requests.
      name?:
        type: string
        description: The name of this API.
      etag?:
        type: string
        description: The ETag for this response.
      ownerDomain?:
        type: string
        description: The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.
      parameters?:
        type: object
        description: Common parameters that apply across all apis.
      version_module?:
        type: boolean
  RestMethod:
    type: object
    properties:
      request?:
        type: object
        properties:
          parameterName?:
            type: string
            description: parameter name.
          $ref?:
            type: string
            description: Schema ID for the request schema.
        description: The schema for the request.
      supportsMediaDownload?:
        type: boolean
        description: Whether this method supports media downloads.
      supportsSubscription?:
        type: boolean
        description: Whether this method supports subscriptions.
      description?:
        type: string
        description: Description of this method.
      supportsMediaUpload?:
        type: boolean
        description: Whether this method supports media uploads.
      etagRequired?:
        type: boolean
        description: Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.
      httpMethod?:
        type: string
        description: HTTP method used by this method.
      parameterOrder?:
        type: array
        description: Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the "most-significant" parameter appears first.
        items:
          type: string
      mediaUpload?:
        type: object
        properties:
          maxSize?:
            type: string
            description: Maximum size of a media upload, such as "1MB", "2GB" or "3TB".
          protocols?:
            type: object
            properties:
              resumable?:
                type: object
                properties:
                  path?:
                    type: string
                    description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                  multipart?:
                    type: boolean
                    default: true
                    description: True if this endpoint supports uploading multipart media.
                description: Supports the Resumable Media Upload protocol.
              simple?:
                type: object
                properties:
                  path?:
                    type: string
                    description: The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.
                  multipart?:
                    type: boolean
                    default: true
                    description: True if this endpoint supports upload multipart media.
                description: Supports uploading as a single HTTP request.
            description: Supported upload protocols.
          accept?:
            type: array
            description: MIME Media Ranges for acceptable media uploads to this method.
            items:
              type: string
        description: Media upload parameters.
      path?:
        type: string
        description: The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.
      response?:
        type: object
        properties:
          $ref?:
            type: string
            description: Schema ID for the response schema.
        description: The schema for the response.
      id?:
        type: string
        description: A unique ID for this method. This property can be used to match methods between different versions of Discovery.
      scopes?:
        type: array
        description: OAuth 2.0 scopes applicable to this method.
        items:
          type: string
      parameters?:
        type: object
        description: Details for all parameters in this method.
      useMediaDownloadService?:
        type: boolean
        description: Indicates that downloads from this method should use the download service URL (i.e. "/download"). Only applies if the method supports media download.
  RestResource:
    type: object
    properties:
      methods?:
        type: object
        description: Methods on this resource.
      resources?:
        type: object
        description: Sub-resources on this resource.
/apis:
  /{api}:
    uriParameters:
      api:
        type: string
        description: The name of the API.
    /{version}:
      uriParameters:
        version:
          type: string
          description: The version of the API.
      /rest:
        get:
          description: Retrieve the description of a particular version of an api.
          displayName: GetRest Apis
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: RestDescription
  get:
    description: Retrieve the list of APIs supported at this endpoint.
    displayName: List Apis
    is:
    - hasParameters
    queryParameters:
      name?:
        type: string
        description: Only include APIs with the given name.
      preferred?:
        type: boolean
        default: false
        description: Return only the preferred version of an API.
    responses:
      200:
        body:
          application/json: DirectoryList
