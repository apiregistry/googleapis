#%RAML 1.0
title: Stackdriver Logging API
version: v2beta1
baseUri: https://logging.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/logging/docs/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): logging:v2beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/logging.write
      - https://www.googleapis.com/auth/logging.admin
      - https://www.googleapis.com/auth/logging.read
      - https://www.googleapis.com/auth/cloud-platform.read-only
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
        enum:
        - '1'
        - '2'
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Empty:
    type: object
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method. For instance:

          service Foo {
            rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
          }

      The JSON representation for `Empty` is empty JSON object `{}`.
  HttpRequest:
    type: object
    properties:
      referer?:
        type: string
        description: |-
          The referer URL of the request, as defined in
          [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
      remoteIp?:
        type: string
        description: |-
          The IP address (IPv4 or IPv6) of the client that issued the HTTP
          request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
      latency?:
        type: string
        description: |-
          The request processing latency on the server, from the time the request was
          received until the response was sent.
      requestMethod?:
        type: string
        description: 'The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`.'
      responseSize?:
        type: integer
        format: int64
        description: |-
          The size of the HTTP response message sent back to the client, in bytes,
          including the response headers and the response body.
      userAgent?:
        type: string
        description: |-
          The user agent sent by the client. Example:
          `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
      cacheLookup?:
        type: boolean
        description: Whether or not a cache lookup was attempted.
      requestUrl?:
        type: string
        description: |-
          The scheme (http, https), the host name, the path and the query
          portion of the URL that was requested.
          Example: `"http://example.com/some/info?color=red"`.
      cacheHit?:
        type: boolean
        description: |-
          Whether or not an entity was served from cache
          (with or without validation).
      serverIp?:
        type: string
        description: |-
          The IP address (IPv4 or IPv6) of the origin server that the request was
          sent to.
      cacheValidatedWithOriginServer?:
        type: boolean
        description: |-
          Whether or not the response was validated with the origin server before
          being served from cache. This field is only meaningful if `cache_hit` is
          True.
      requestSize?:
        type: integer
        format: int64
        description: |-
          The size of the HTTP request message in bytes, including the request
          headers and the request body.
      cacheFillBytes?:
        type: integer
        format: int64
        description: |-
          The number of HTTP response bytes inserted into cache. Set only when a
          cache fill was attempted.
      status?:
        type: integer
        format: int32
        description: |-
          The response code indicating the status of response.
          Examples: 200, 404.
    description: |-
      A common proto for logging HTTP requests. Only contains semantics
      defined by the HTTP specification. Product-specific logging
      information MUST be defined in a separate message.
  LabelDescriptor:
    type: object
    properties:
      valueType?:
        type: string
        description: The type of data that can be assigned to the label.
        enum:
        - STRING
        - BOOL
        - INT64
      description?:
        type: string
        description: A human-readable description for the label.
      key?:
        type: string
        description: The label key.
    description: A description of a label.
  ListLogEntriesRequest:
    type: object
    properties:
      filter?:
        type: string
        description: |-
          Optional. A filter that chooses which log entries to return.  See [Advanced
          Logs Filters](/logging/docs/view/advanced_filters).  Only log entries that
          match the filter are returned.  An empty filter matches all log entries.
      resourceNames?:
        type: array
        description: |-
          Required. One or more cloud resources from which to retrieve log entries.
          Example: `"projects/my-project-1A"`, `"projects/1234567890"`.  Projects
          listed in `projectIds` are added to this list.
        items:
          type: string
      pageSize?:
        type: integer
        format: int32
        description: |-
          Optional. The maximum number of results to return from this request.
          Non-positive values are ignored.  The presence of `nextPageToken` in the
          response indicates that more results might be available.
      orderBy?:
        type: string
        description: |-
          Optional. How the results should be sorted.  Presently, the only permitted
          values are `"timestamp asc"` (default) and `"timestamp desc"`. The first
          option returns entries in order of increasing values of
          `LogEntry.timestamp` (oldest first), and the second option returns entries
          in order of decreasing timestamps (newest first).  Entries with equal
          timestamps are returned in order of `LogEntry.insertId`.
      projectIds?:
        type: array
        description: |-
          Deprecated. One or more project identifiers or project numbers from which
          to retrieve log entries.  Examples: `"my-project-1A"`, `"1234567890"`. If
          present, these project identifiers are converted to resource format and
          added to the list of resources in `resourceNames`. Callers should use
          `resourceNames` rather than this parameter.
        items:
          type: string
      pageToken?:
        type: string
        description: |-
          Optional. If present, then retrieve the next batch of results from the
          preceding call to this method.  `pageToken` must be the value of
          `nextPageToken` from the previous response.  The values of other method
          parameters should be identical to those in the previous call.
    description: The parameters to `ListLogEntries`.
  ListLogEntriesResponse:
    type: object
    properties:
      entries?:
        type: array
        description: A list of log entries.
        items: LogEntry
      nextPageToken?:
        type: string
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
    description: Result returned from `ListLogEntries`.
  ListLogMetricsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
      metrics?:
        type: array
        description: A list of logs-based metrics.
        items: LogMetric
    description: Result returned from ListLogMetrics.
  ListMonitoredResourceDescriptorsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call this
          method again using the value of `nextPageToken` as `pageToken`.
      resourceDescriptors?:
        type: array
        description: A list of resource descriptors.
        items: MonitoredResourceDescriptor
    description: Result returned from ListMonitoredResourceDescriptors.
  ListSinksResponse:
    type: object
    properties:
      sinks?:
        type: array
        description: A list of sinks.
        items: LogSink
      nextPageToken?:
        type: string
        description: |-
          If there might be more results than appear in this response, then
          `nextPageToken` is included.  To get the next set of results, call the same
          method again using the value of `nextPageToken` as `pageToken`.
    description: Result returned from `ListSinks`.
  LogEntry:
    type: object
    properties:
      severity?:
        type: string
        description: |-
          Optional. The severity of the log entry. The default value is
          `LogSeverity.DEFAULT`.
        enum:
        - DEFAULT
        - DEBUG
        - INFO
        - NOTICE
        - WARNING
        - ERROR
        - CRITICAL
        - ALERT
        - EMERGENCY
      logName?:
        type: string
        description: |-
          Required. The resource name of the log to which this log entry
          belongs. The format of the name is
          `"projects/<project-id>/logs/<log-id>"`.  Examples:
          `"projects/my-projectid/logs/syslog"`,
          `"projects/my-projectid/logs/library.googleapis.com%2Fbook_log"`.

          The log ID part of resource name must be less than 512 characters
          long and can only include the following characters: upper and
          lower case alphanumeric characters: [A-Za-z0-9]; and punctuation
          characters: forward-slash, underscore, hyphen, and period.
          Forward-slash (`/`) characters in the log ID must be URL-encoded.
      resource?: MonitoredResource
      jsonPayload?:
        type: object
        description: |-
          The log entry payload, represented as a structure that
          is expressed as a JSON object.
      protoPayload?:
        type: object
        description: |-
          The log entry payload, represented as a protocol buffer.  Some
          Google Cloud Platform services use this field for their log
          entry payloads.
      textPayload?:
        type: string
        description: The log entry payload, represented as a Unicode string (UTF-8).
      httpRequest?: HttpRequest
      operation?: LogEntryOperation
      labels?:
        type: object
        description: |-
          Optional. A set of user-defined (key, value) data that provides additional
          information about the log entry.
      timestamp?:
        type: string
        description: |-
          Optional. The time the event described by the log entry occurred.  If
          omitted, Stackdriver Logging will use the time the log entry is received.
      insertId?:
        type: string
        description: |-
          Optional. A unique ID for the log entry. If you provide this
          field, the logging service considers other log entries in the
          same project with the same ID as duplicates which can be removed.  If
          omitted, Stackdriver Logging will generate a unique ID for this
          log entry.
    description: An individual entry in a log.
  LogEntryOperation:
    type: object
    properties:
      last?:
        type: boolean
        description: Optional. Set this to True if this is the last log entry in the operation.
      producer?:
        type: string
        description: |-
          Optional. An arbitrary producer identifier. The combination of
          `id` and `producer` must be globally unique.  Examples for `producer`:
          `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
      id?:
        type: string
        description: |-
          Optional. An arbitrary operation identifier. Log entries with the
          same identifier are assumed to be part of the same operation.
      first?:
        type: boolean
        description: Optional. Set this to True if this is the first log entry in the operation.
    description: |-
      Additional information about a potentially long-running operation with which
      a log entry is associated.
  LogLine:
    type: object
    properties:
      severity?:
        type: string
        description: Severity of this log entry.
        enum:
        - DEFAULT
        - DEBUG
        - INFO
        - NOTICE
        - WARNING
        - ERROR
        - CRITICAL
        - ALERT
        - EMERGENCY
      logMessage?:
        type: string
        description: App-provided log message.
      sourceLocation?: SourceLocation
      time?:
        type: string
        description: Approximate time when this log entry was made.
    description: Application log line emitted while processing a request.
  LogMetric:
    type: object
    properties:
      filter?:
        type: string
        description: |-
          Required. An [advanced logs filter](/logging/docs/view/advanced_filters).
          Example: `"resource.type=gae_app AND severity>=ERROR"`.
      name?:
        type: string
        description: |-
          Required. The client-assigned metric identifier. Example:
          `"severe_errors"`.  Metric identifiers are limited to 100
          characters and can include only the following characters: `A-Z`,
          `a-z`, `0-9`, and the special characters `_-.,+!*',()%/`.  The
          forward-slash character (`/`) denotes a hierarchy of name pieces,
          and it cannot be the first character of the name.  The '%' character
          is used to URL encode unsafe and reserved characters and must be
          followed by two hexadecimal digits according to RFC 1738.
      description?:
        type: string
        description: Optional. A description of this metric, which is used in documentation.
      version?:
        type: string
        description: |-
          Output only. The API version that created or updated this metric.
          The version also dictates the syntax of the filter expression. When a value
          for this field is missing, the default value of V2 should be assumed.
        enum:
        - V2
        - V1
    description: |-
      Describes a logs-based metric.  The value of the metric is the
      number of log entries that match a logs filter.
  LogSink:
    type: object
    properties:
      filter?:
        type: string
        description: |-
          Optional. An [advanced logs filter](/logging/docs/view/advanced_filters).
          Only log entries matching the filter are exported. The filter
          must be consistent with the log entry format specified by the
          `outputVersionFormat` parameter, regardless of the format of the
          log entry that was originally written to Stackdriver Logging.
          Example filter (V2 format):

              logName=projects/my-projectid/logs/syslog AND severity>=ERROR
      writerIdentity?:
        type: string
        description: |-
          Output only. An IAM identity&mdash;a service account or group&mdash;that
          will write exported log entries to the destination on behalf of Stackdriver
          Logging. You must grant this identity write-access to the destination.
          Consult the destination service's documentation to determine the exact role
          that must be granted.
      destination?:
        type: string
        description: |-
          Required. The export destination. See
          [Exporting Logs With Sinks](/logging/docs/api/tasks/exporting-logs).
          Examples:

              "storage.googleapis.com/my-gcs-bucket"
              "bigquery.googleapis.com/projects/my-project-id/datasets/my-dataset"
              "pubsub.googleapis.com/projects/my-project/topics/my-topic"
      name?:
        type: string
        description: |-
          Required. The client-assigned sink identifier, unique within the
          project. Example: `"my-syslog-errors-to-pubsub"`.  Sink identifiers are
          limited to 1000 characters and can include only the following characters:
          `A-Z`, `a-z`, `0-9`, and the special characters `_-.`.  The maximum length
          of the name is 100 characters.
      startTime?:
        type: string
        description: |-
          Optional. The time at which this sink will begin exporting log entries.  If
          this value is present, then log entries are exported only if `start_time`
          <=`entry.timestamp`.
      endTime?:
        type: string
        description: |-
          Optional. Time at which this sink will stop exporting log entries.  If this
          value is present, then log entries are exported only if `entry.timestamp` <
          `end_time`.
      outputVersionFormat?:
        type: string
        description: |-
          Optional. The log entry version to use for this sink's exported log
          entries.  This version does not have to correspond to the version of the
          log entry that was written to Stackdriver Logging. If omitted, the
          v2 format is used.
        enum:
        - VERSION_FORMAT_UNSPECIFIED
        - V2
        - V1
    description: |-
      Describes a sink used to export log entries outside of Stackdriver Logging.
      A logs filter controls which log entries are exported.  Sinks can have a
      start time and an end time; these can be used to place log entries from an
      exact time range into a particular destination.  If both `start_time` and
      `end_time` are present, then `start_time` must be less than `end_time`.
  MonitoredResource:
    type: object
    properties:
      type?:
        type: string
        description: |-
          Required. The monitored resource type. This field must match
          the `type` field of a MonitoredResourceDescriptor object. For
          example, the type of a Cloud SQL database is `"cloudsql_database"`.
      labels?:
        type: object
        description: |-
          Required. Values for all of the labels listed in the associated monitored
          resource descriptor. For example, Cloud SQL databases use the labels
          `"database_id"` and `"zone"`.
    description: |-
      An object representing a resource that can be used for monitoring, logging,
      billing, or other purposes. Examples include virtual machine instances,
      databases, and storage devices such as disks. The `type` field identifies a
      MonitoredResourceDescriptor object that describes the resource's
      schema. Information in the `labels` field identifies the actual resource and
      its attributes according to the schema. For example, a particular Compute
      Engine VM instance could be represented by the following object, because the
      MonitoredResourceDescriptor for `"gce_instance"` has labels
      `"instance_id"` and `"zone"`:

          { "type": "gce_instance",
            "labels": { "instance_id": "12345678901234",
                        "zone": "us-central1-a" }}
  MonitoredResourceDescriptor:
    type: object
    properties:
      displayName?:
        type: string
        description: |-
          Optional. A concise name for the monitored resource type that might be
          displayed in user interfaces. It should be a Title Cased Noun Phrase,
          without any article or other determiners. For example,
          `"Google Cloud SQL Database"`.
      name?:
        type: string
        description: |-
          Optional. The resource name of the monitored resource descriptor:
          `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where
          {type} is the value of the `type` field in this object and
          {project_id} is a project ID that provides API-specific context for
          accessing the type.  APIs that do not use project information can use the
          resource name format `"monitoredResourceDescriptors/{type}"`.
      description?:
        type: string
        description: |-
          Optional. A detailed description of the monitored resource type that might
          be used in documentation.
      type?:
        type: string
        description: |-
          Required. The monitored resource type. For example, the type
          `"cloudsql_database"` represents databases in Google Cloud SQL.
          The maximum length of this value is 256 characters.
      labels?:
        type: array
        description: |-
          Required. A set of labels used to describe instances of this monitored
          resource type. For example, an individual Google Cloud SQL database is
          identified by values for the labels `"database_id"` and `"zone"`.
        items: LabelDescriptor
    description: |-
      An object that describes the schema of a MonitoredResource object using a
      type name and a set of labels.  For example, the monitored resource
      descriptor for Google Compute Engine VM instances has a type of
      `"gce_instance"` and specifies the use of the labels `"instance_id"` and
      `"zone"` to identify particular VM instances.

      Different APIs can support different monitored resource types. APIs generally
      provide a `list` method that returns the monitored resource descriptors used
      by the API.
  RequestLog:
    type: object
    properties:
      sourceReference?:
        type: array
        description: |-
          Source code for the application that handled this request. There can be
          more than one source reference per deployed application if source code is
          distributed among multiple repositories.
        items: SourceReference
      line?:
        type: array
        description: A list of log lines emitted by the application while serving this request.
        items: LogLine
      latency?:
        type: string
        description: Latency of the request.
      appEngineRelease?:
        type: string
        description: App Engine release version.
      instanceId?:
        type: string
        description: An identifier for the instance that handled the request.
      httpVersion?:
        type: string
        description: 'HTTP version of request. Example: `"HTTP/1.1"`.'
      requestId?:
        type: string
        description: |-
          Globally unique identifier for a request, which is based on the request
          start time.  Request IDs for requests which started later will compare
          greater as strings than those for requests which started earlier.
      appId?:
        type: string
        description: Application that handled this request.
      nickname?:
        type: string
        description: |-
          The logged-in user who made the request.

          Most likely, this is the part of the user's email before the `@` sign.  The
          field value is the same for different requests from the same user, but
          different users can have similar names.  This information is also
          available to the application via the App Engine Users API.

          This field will be populated starting with App Engine 1.9.21.
      host?:
        type: string
        description: Internet host and port number of the resource being requested.
      megaCycles?:
        type: integer
        format: int64
        description: Number of CPU megacycles used to process request.
      startTime?:
        type: string
        description: Time when the request started.
      moduleId?:
        type: string
        description: Module of the application that handled this request.
      instanceIndex?:
        type: integer
        format: int32
        description: |-
          If the instance processing this request belongs to a manually scaled
          module, then this is the 0-based index of the instance. Otherwise, this
          value is -1.
      pendingTime?:
        type: string
        description: Time this request spent in the pending request queue.
      traceId?:
        type: string
        description: Cloud Trace identifier for this request.
      cost?:
        type: number
        format: double
        description: An indication of the relative cost of serving this request.
      method?:
        type: string
        description: 'Request method. Example: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`,
          `"DELETE"`.'
      resource?:
        type: string
        description: |-
          Contains the path and query portion of the URL that was requested. For
          example, if the URL was "http://example.com/app?name=val", the resource
          would be "/app?name=val".  The fragment identifier, which is identified by
          the `#` character, is not included.
      ip?:
        type: string
        description: Origin IP address.
      taskQueueName?:
        type: string
        description: Queue name of the request, in the case of an offline request.
      responseSize?:
        type: integer
        format: int64
        description: Size in bytes sent back to client by request.
      userAgent?:
        type: string
        description: User agent that made the request.
      finished?:
        type: boolean
        description: Whether this request is finished or active.
      urlMapEntry?:
        type: string
        description: File or class that handled the request.
      referrer?:
        type: string
        description: Referrer URL of request.
      versionId?:
        type: string
        description: Version of the application that handled this request.
      taskName?:
        type: string
        description: Task name of the request, in the case of an offline request.
      endTime?:
        type: string
        description: Time when the request finished.
      wasLoadingRequest?:
        type: boolean
        description: Whether this was a loading request for the instance.
      first?:
        type: boolean
        description: |-
          Whether this is the first RequestLog entry for this request.  If an active
          request has several RequestLog entries written to Cloud Logging, this field
          will be set for one of them.
      status?:
        type: integer
        format: int32
        description: 'HTTP response status code. Example: 200, 404.'
    description: |-
      Complete log information about a single HTTP request to an App Engine
      application.
  SourceLocation:
    type: object
    properties:
      file?:
        type: string
        description: |-
          Source file name. Depending on the runtime environment, this might be a
          simple name or a fully-qualified name.
      functionName?:
        type: string
        description: |-
          Human-readable name of the function or method being invoked, with optional
          context such as the class or package name. This information is used in
          contexts such as the logs viewer, where a file and line number are less
          meaningful. The format can vary by language. For example:
          `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
          (Python).
      line?:
        type: integer
        format: int64
        description: Line within the source file.
    description: Specifies a location in a source code file.
  SourceReference:
    type: object
    properties:
      revisionId?:
        type: string
        description: |-
          The canonical and persistent identifier of the deployed revision.
          Example (git): "0035781c50ec7aa23385dc841529ce8a4b70db1b"
      repository?:
        type: string
        description: |-
          Optional. A URI string identifying the repository.
          Example: "https://github.com/GoogleCloudPlatform/kubernetes.git"
    description: |-
      A reference to a particular snapshot of the source tree used to build and
      deploy an application.
  WriteLogEntriesRequest:
    type: object
    properties:
      entries?:
        type: array
        description: |-
          Required. The log entries to write. Values supplied for the fields
          `log_name`, `resource`, and `labels` in this `entries.write` request are
          added to those log entries that do not provide their own values for the
          fields.

          To improve throughput and to avoid exceeding the
          [quota limit](/logging/quota-policy) for calls to `entries.write`,
          you should write multiple log entries at once rather than
          calling this method for each individual log entry.
        items: LogEntry
      logName?:
        type: string
        description: |-
          Optional. A default log resource name that is assigned to all log entries
          in `entries` that do not specify a value for `log_name`.  Example:
          `"projects/my-project/logs/syslog"`.  See
          LogEntry.
      resource?: MonitoredResource
      partialSuccess?:
        type: boolean
        description: |-
          Optional. Whether valid entries should be written even if some other
          entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any
          entry is not written, the response status will be the error associated
          with one of the failed entries and include error details in the form of
          WriteLogEntriesPartialErrors.
      labels?:
        type: object
        description: |-
          Optional. Default labels that are added to the `labels` field of all log
          entries in `entries`. If a log entry already has a label with the same key
          as a label in this parameter, then the log entry's label is not changed.
          See LogEntry.
    description: The parameters to WriteLogEntries.
  WriteLogEntriesResponse:
    type: object
    description: |-
      Result returned from WriteLogEntries.
      empty
/v2beta1:
  /entries:list:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.read
      description: |-
        Lists log entries.  Use this method to retrieve log entries from Cloud
        Logging.  For ways to export log entries, see
        [Exporting Logs](/logging/docs/export).
      displayName: List
      is:
      - hasParameters
      body:
        application/json: ListLogEntriesRequest
      responses:
        200:
          body:
            application/json: ListLogEntriesResponse
      (commons.Id): logging.entries.list
      (commons.LogicalStructure):
      - Entries
  /entries:write:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.write
      description: |-
        Writes log entries to Stackdriver Logging.  All log entries are
        written by this method.
      displayName: Write
      is:
      - hasParameters
      body:
        application/json: WriteLogEntriesRequest
      responses:
        200:
          body:
            application/json: WriteLogEntriesResponse
      (commons.Id): logging.entries.write
      (commons.LogicalStructure):
      - Entries
  /{sinkName}:
    uriParameters:
      sinkName:
        type: string
        pattern: ^projects/[^/]+/sinks/[^/]+$
        description: |-
          Required. The resource name of the sink to return.
          Example: `"projects/my-project-id/sinks/my-sink-id"`.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.read
      description: Gets a sink.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: LogSink
      (commons.Id): logging.projects.sinks.get
      (commons.LogicalStructure):
      - Projects
      - Sinks
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
      description: Updates or creates a sink.
      displayName: Update
      is:
      - hasParameters
      queryParameters:
        uniqueWriterIdentity?:
          type: boolean
          description: |-
            Optional. Whether the sink will have a dedicated service account returned
            in the sink's writer_identity. Set this field to be true to export
            logs from one project to a different project. This field is ignored for
            non-project sinks (e.g. organization sinks) because those sinks are
            required to have dedicated service accounts.
      body:
        application/json: LogSink
      responses:
        200:
          body:
            application/json: LogSink
      (commons.Id): logging.projects.sinks.update
      (commons.LogicalStructure):
      - Projects
      - Sinks
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
      description: Deletes a sink.
      displayName: Delete
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): logging.projects.sinks.delete
      (commons.LogicalStructure):
      - Projects
      - Sinks
  /{parent}:
    uriParameters:
      parent:
        type: string
        pattern: ^projects/[^/]+$
        description: |-
          Required. The resource in which to create the sink.
          Example: `"projects/my-project-id"`.
          The new sink must be provided in the request.
    /sinks:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/logging.admin
        description: Creates a sink.
        displayName: Create
        is:
        - hasParameters
        queryParameters:
          uniqueWriterIdentity?:
            type: boolean
            description: |-
              Optional. Whether the sink will have a dedicated service account returned
              in the sink's writer_identity. Set this field to be true to export
              logs from one project to a different project. This field is ignored for
              non-project sinks (e.g. organization sinks) because those sinks are
              required to have dedicated service accounts.
        body:
          application/json: LogSink
        responses:
          200:
            body:
              application/json: LogSink
        (commons.Id): logging.projects.sinks.create
        (commons.LogicalStructure):
        - Projects
        - Sinks
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
            - https://www.googleapis.com/auth/logging.admin
            - https://www.googleapis.com/auth/logging.read
        description: Lists sinks.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          pageSize?:
            type: integer
            format: int32
            description: |-
              Optional. The maximum number of results to return from this request.
              Non-positive values are ignored.  The presence of `nextPageToken` in the
              response indicates that more results might be available.
          pageToken?:
            type: string
            description: |-
              Optional. If present, then retrieve the next batch of results from the
              preceding call to this method.  `pageToken` must be the value of
              `nextPageToken` from the previous response.  The values of other method
              parameters should be identical to those in the previous call.
        responses:
          200:
            body:
              application/json: ListSinksResponse
        (commons.Id): logging.projects.sinks.list
        (commons.LogicalStructure):
        - Projects
        - Sinks
    /metrics:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/logging.admin
            - https://www.googleapis.com/auth/logging.write
        description: Creates a logs-based metric.
        displayName: Create
        is:
        - hasParameters
        body:
          application/json: LogMetric
        responses:
          200:
            body:
              application/json: LogMetric
        (commons.Id): logging.projects.metrics.create
        (commons.LogicalStructure):
        - Projects
        - Metrics
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
            - https://www.googleapis.com/auth/logging.admin
            - https://www.googleapis.com/auth/logging.read
        description: Lists logs-based metrics.
        displayName: List
        is:
        - hasParameters
        queryParameters:
          pageSize?:
            type: integer
            format: int32
            description: |-
              Optional. The maximum number of results to return from this request.
              Non-positive values are ignored.  The presence of `nextPageToken` in the
              response indicates that more results might be available.
          pageToken?:
            type: string
            description: |-
              Optional. If present, then retrieve the next batch of results from the
              preceding call to this method.  `pageToken` must be the value of
              `nextPageToken` from the previous response.  The values of other method
              parameters should be identical to those in the previous call.
        responses:
          200:
            body:
              application/json: ListLogMetricsResponse
        (commons.Id): logging.projects.metrics.list
        (commons.LogicalStructure):
        - Projects
        - Metrics
  /{metricName}:
    uriParameters:
      metricName:
        type: string
        pattern: ^projects/[^/]+/metrics/[^/]+$
        description: |-
          The resource name of the desired metric.
          Example: `"projects/my-project-id/metrics/my-metric-id"`.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.read
      description: Gets a logs-based metric.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: LogMetric
      (commons.Id): logging.projects.metrics.get
      (commons.LogicalStructure):
      - Projects
      - Metrics
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.write
      description: Creates or updates a logs-based metric.
      displayName: Update
      is:
      - hasParameters
      body:
        application/json: LogMetric
      responses:
        200:
          body:
            application/json: LogMetric
      (commons.Id): logging.projects.metrics.update
      (commons.LogicalStructure):
      - Projects
      - Metrics
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.write
      description: Deletes a logs-based metric.
      displayName: Delete
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): logging.projects.metrics.delete
      (commons.LogicalStructure):
      - Projects
      - Metrics
  /{logName}:
    uriParameters:
      logName:
        type: string
        pattern: ^projects/[^/]+/logs/[^/]+$
        description: |-
          Required. The resource name of the log to delete.  Example:
          `"projects/my-project/logs/syslog"`.
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/logging.admin
      description: |-
        Deletes a log and all its log entries.
        The log will reappear if it receives new entries.
      displayName: Delete
      is:
      - hasParameters
      - hasParameters
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): logging.billingAccounts.logs.delete
      (commons.LogicalStructure):
      - Billing Accounts
      - Logs
  /monitoredResourceDescriptors:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
          - https://www.googleapis.com/auth/logging.admin
          - https://www.googleapis.com/auth/logging.read
      description: Lists the monitored resource descriptors used by Stackdriver Logging.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        pageSize?:
          type: integer
          format: int32
          description: |-
            Optional. The maximum number of results to return from this request.
            Non-positive values are ignored.  The presence of `nextPageToken` in the
            response indicates that more results might be available.
        pageToken?:
          type: string
          description: |-
            Optional. If present, then retrieve the next batch of results from the
            preceding call to this method.  `pageToken` must be the value of
            `nextPageToken` from the previous response.  The values of other method
            parameters should be identical to those in the previous call.
      responses:
        200:
          body:
            application/json: ListMonitoredResourceDescriptorsResponse
      (commons.Id): logging.monitoredResourceDescriptors.list
      (commons.LogicalStructure):
      - Monitored Resource Descriptors
