#%RAML 1.0
title: YouTube Analytics API
version: v1
baseUri: https://www.googleapis.com/youtube/analytics/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: http://developers.google.com/youtube/analytics/
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/youtube-32.png
  name: x32
- url: https://www.google.com/images/icons/product/youtube-16.png
  name: x16
(commons.Id): youtubeAnalytics:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/yt-analytics.readonly
      - https://www.googleapis.com/auth/youtube.readonly
      - https://www.googleapis.com/auth/youtube
      - https://www.googleapis.com/auth/youtubepartner
      - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  BatchReport:
    type: object
    properties:
      outputs?:
        type: array
        description: Report outputs.
        items:
          type: object
          properties:
            downloadUrl?:
              type: string
              description: Cloud storage URL to download this report. This URL is valid for 30 minutes.
            format?:
              type: string
              description: Format of the output.
            type?:
              type: string
              default: cloudStorageOutput
              description: Type of the output.
      reportId?:
        type: string
        description: The ID of the the report definition.
      kind?:
        type: string
        default: youtubeAnalytics#batchReport
        description: This value specifies the type of data of this item. For batch report the kind property value is youtubeAnalytics#batchReport.
      timeUpdated?:
        type: datetime
        description: The time when the report was updated.
      timeSpan?:
        type: object
        properties:
          startTime?:
            type: datetime
            description: Start of the period included in the report. Inclusive.
          endTime?:
            type: datetime
            description: End of the period included in the report. Inclusive. For reports containing all entities endTime is not set.
        description: Period included in the report. For reports containing all entities endTime is not set. Both startTime and endTime are inclusive.
      id?:
        type: string
        description: The ID that YouTube assigns and uses to uniquely identify the report.
    description: Contains single batchReport resource.
  BatchReportDefinition:
    type: object
    properties:
      kind?:
        type: string
        default: youtubeAnalytics#batchReportDefinition
        description: This value specifies the type of data of this item. For batch report definition the kind property value is youtubeAnalytics#batchReportDefinition.
      name?:
        type: string
        description: Name of the report definition.
      id?:
        type: string
        description: The ID that YouTube assigns and uses to uniquely identify the report definition.
      type?:
        type: string
        description: Type of the report definition.
      status?:
        type: string
        description: Status of the report definition.
    description: Contains single batchReportDefinition resource.
  BatchReportDefinitionList:
    type: object
    properties:
      kind?:
        type: string
        default: youtubeAnalytics#batchReportDefinitionList
        description: This value specifies the type of data included in the API response. For the list method, the kind property value is youtubeAnalytics#batchReportDefinitionList.
      items?:
        type: array
        description: A list of batchReportDefinition resources that match the request criteria.
        items: BatchReportDefinition
    description: A paginated list of batchReportDefinition resources returned in response to a youtubeAnalytics.batchReportDefinitions.list request.
  BatchReportList:
    type: object
    properties:
      kind?:
        type: string
        default: youtubeAnalytics#batchReportList
        description: This value specifies the type of data included in the API response. For the list method, the kind property value is youtubeAnalytics#batchReportList.
      items?:
        type: array
        description: A list of batchReport resources that match the request criteria.
        items: BatchReport
    description: A paginated list of batchReport resources returned in response to a youtubeAnalytics.batchReport.list request.
  Group:
    type: object
    properties:
      snippet?:
        type: object
        properties:
          publishedAt?:
            type: datetime
          title?:
            type: string
      kind?:
        type: string
        default: youtube#group
      etag?:
        type: string
      id?:
        type: string
      contentDetails?:
        type: object
        properties:
          itemType?:
            type: string
          itemCount?:
            type: integer
            format: int64
  GroupItem:
    type: object
    properties:
      resource?:
        type: object
        properties:
          kind?:
            type: string
          id?:
            type: string
      kind?:
        type: string
        default: youtube#groupItem
      groupId?:
        type: string
      etag?:
        type: string
      id?:
        type: string
  GroupItemListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: youtube#groupItemListResponse
      etag?:
        type: string
      items?: GroupItem[]
    description: A paginated list of grouList resources returned in response to a youtubeAnalytics.groupApi.list request.
  GroupListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: youtube#groupListResponse
      nextPageToken?:
        type: string
      etag?:
        type: string
      items?: Group[]
    description: A paginated list of grouList resources returned in response to a youtubeAnalytics.groupApi.list request.
  ResultTable:
    type: object
    properties:
      columnHeaders?:
        type: array
        description: 'This value specifies information about the data returned in
          the rows fields. Each item in the columnHeaders list identifies a field
          returned in the rows value, which contains a list of comma-delimited data.
          The columnHeaders list will begin with the dimensions specified in the API
          request, which will be followed by the metrics specified in the API request.
          The order of both dimensions and metrics will match the ordering in the
          API request. For example, if the API request contains the parameters dimensions=ageGroup,gender&metrics=viewerPercentage,
          the API response will return columns in this order: ageGroup,gender,viewerPercentage.'
        items:
          type: object
          properties:
            columnType?:
              type: string
              description: The type of the column (DIMENSION or METRIC).
            dataType?:
              type: string
              description: The type of the data in the column (STRING, INTEGER, FLOAT, etc.).
            name?:
              type: string
              description: The name of the dimension or metric.
      kind?:
        type: string
        default: youtubeAnalytics#resultTable
        description: This value specifies the type of data included in the API response. For the query method, the kind property value will be youtubeAnalytics#resultTable.
      rows?:
        type: array
        description: The list contains all rows of the result table. Each item in the list is an array that contains comma-delimited data corresponding to a single row of data. The order of the comma-delimited data fields will match the order of the columns listed in the columnHeaders field. If no data is available for the given query, the rows element will be omitted from the response. The response for a query with the day dimension will not contain rows for the most recent days.
        items:
          type: array
          items:
            type: any
    description: Contains a single result table. The table is returned as an array of rows that contain the values for the cells of the table. Depending on the metric or dimension, the cell can contain a string (video ID, country code) or a number (number of views or number of likes).
/reports:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtube.readonly
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - https://www.googleapis.com/auth/yt-analytics.readonly
    description: Retrieve your YouTube Analytics reports.
    displayName: Query
    is:
    - hasParameters
    queryParameters:
      end-date:
        type: string
        pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
        description: The end date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.
      max-results?:
        type: integer
        format: int32
        description: The maximum number of rows to include in the response.
        minimum: 1
      start-index?:
        type: integer
        format: int32
        description: An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter (one-based, inclusive).
        minimum: 1
      ids:
        type: string
        pattern: '[a-zA-Z]+==[a-zA-Z0-9_+-]+'
        description: |-
          Identifies the YouTube channel or content owner for which you are retrieving YouTube Analytics data.
          - To request data for a YouTube user, set the ids parameter value to channel==CHANNEL_ID, where CHANNEL_ID specifies the unique YouTube channel ID.
          - To request data for a YouTube CMS content owner, set the ids parameter value to contentOwner==OWNER_NAME, where OWNER_NAME is the CMS name of the content owner.
      currency?:
        type: string
        pattern: '[A-Z]{3}'
        description: The currency to which financial metrics should be converted. The default is US Dollar (USD). If the result contains no financial metrics, this flag will be ignored. Responds with an error if the specified currency is not recognized.
      start-date:
        type: string
        pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
        description: The start date for fetching YouTube Analytics data. The value should be in YYYY-MM-DD format.
      filters?:
        type: string
        description: A list of filters that should be applied when retrieving YouTube Analytics data. The Available Reports document identifies the dimensions that can be used to filter each report, and the Dimensions document defines those dimensions. If a request uses multiple filters, join them together with a semicolon (;), and the returned result table will satisfy both filters. For example, a filters parameter value of video==dMH0bHeiRNg;country==IT restricts the result set to include data for the given video in Italy.
      metrics:
        type: string
        pattern: '[0-9a-zA-Z,]+'
        description: A comma-separated list of YouTube Analytics metrics, such as views or likes,dislikes. See the Available Reports document for a list of the reports that you can retrieve and the metrics available in each report, and see the Metrics document for definitions of those metrics.
      sort?:
        type: string
        pattern: '[-0-9a-zA-Z,]+'
        description: A comma-separated list of dimensions or metrics that determine the sort order for YouTube Analytics data. By default the sort order is ascending. The '-' prefix causes descending sort order.
      dimensions?:
        type: string
        pattern: '[0-9a-zA-Z,]+'
        description: A comma-separated list of YouTube Analytics dimensions, such as views or ageGroup,gender. See the Available Reports document for a list of the reports that you can retrieve and the dimensions used for those reports. Also see the Dimensions document for definitions of those dimensions.
    responses:
      200:
        body:
          application/json: ResultTable
    (commons.Id): youtubeAnalytics.reports.query
    (commons.LogicalStructure):
    - Reports
/batchReportDefinitions:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - https://www.googleapis.com/auth/yt-analytics.readonly
    description: Retrieves a list of available batch report definitions.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner:
        type: string
        description: The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of.
    responses:
      200:
        body:
          application/json: BatchReportDefinitionList
    (commons.Id): youtubeAnalytics.batchReportDefinitions.list
    (commons.LogicalStructure):
    - Batch Report Definitions
/groups:
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtubepartner
    description: Creates a group.
    displayName: Insert
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
    body:
      application/json: Group
    responses:
      200:
        body:
          application/json: Group
    (commons.Id): youtubeAnalytics.groups.insert
    (commons.LogicalStructure):
    - Groups
  put:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtubepartner
    description: Modifies a group. For example, you could change a group's title.
    displayName: Update
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
    body:
      application/json: Group
    responses:
      200:
        body:
          application/json: Group
    (commons.Id): youtubeAnalytics.groups.update
    (commons.LogicalStructure):
    - Groups
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtube.readonly
        - https://www.googleapis.com/auth/youtubepartner
        - https://www.googleapis.com/auth/yt-analytics.readonly
    description: Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      mine?:
        type: boolean
        description: Set this parameter's value to true to instruct the API to only return groups owned by the authenticated user.
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
      id?:
        type: string
        description: The id parameter specifies a comma-separated list of the YouTube group ID(s) for the resource(s) that are being retrieved. In a group resource, the id property specifies the group's YouTube group ID.
      pageToken?:
        type: string
        description: The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page that can be retrieved.
    responses:
      200:
        body:
          application/json: GroupListResponse
    (commons.Id): youtubeAnalytics.groups.list
    (commons.LogicalStructure):
    - Groups
  delete:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtubepartner
    description: Deletes a group.
    displayName: Delete
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
      id:
        type: string
        description: The id parameter specifies the YouTube group ID for the group that is being deleted.
    (commons.Id): youtubeAnalytics.groups.delete
    (commons.LogicalStructure):
    - Groups
/groupItems:
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtubepartner
    description: Creates a group item.
    displayName: Insert
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
    body:
      application/json: GroupItem
    responses:
      200:
        body:
          application/json: GroupItem
    (commons.Id): youtubeAnalytics.groupItems.insert
    (commons.LogicalStructure):
    - Group Items
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtube.readonly
        - https://www.googleapis.com/auth/youtubepartner
        - https://www.googleapis.com/auth/yt-analytics.readonly
    description: Returns a collection of group items that match the API request parameters.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
      groupId:
        type: string
        description: The id parameter specifies the unique ID of the group for which you want to retrieve group items.
    responses:
      200:
        body:
          application/json: GroupItemListResponse
    (commons.Id): youtubeAnalytics.groupItems.list
    (commons.LogicalStructure):
    - Group Items
  delete:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/youtube
        - https://www.googleapis.com/auth/youtubepartner
    description: Removes an item from a group.
    displayName: Delete
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner?:
        type: string
        description: |-
          Note: This parameter is intended exclusively for YouTube content partners.

          The onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.
      id:
        type: string
        description: The id parameter specifies the YouTube group item ID for the group that is being deleted.
    (commons.Id): youtubeAnalytics.groupItems.delete
    (commons.LogicalStructure):
    - Group Items
/batchReports:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/yt-analytics-monetary.readonly
        - https://www.googleapis.com/auth/yt-analytics.readonly
    description: Retrieves a list of processed batch reports.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      onBehalfOfContentOwner:
        type: string
        description: The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of.
      batchReportDefinitionId:
        type: string
        description: The batchReportDefinitionId parameter specifies the ID of the batch reportort definition for which you are retrieving reports.
    responses:
      200:
        body:
          application/json: BatchReportList
    (commons.Id): youtubeAnalytics.batchReports.list
    (commons.LogicalStructure):
    - Batch Reports
