#%RAML 1.0
title: Google Apps Script Execution API
version: v1
baseUri: https://script.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/apps-script/execution/rest/v1/scripts/run
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): script:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/groups
      - https://www.google.com/m8/feeds
      - https://www.googleapis.com/auth/userinfo.email
      - https://www.googleapis.com/auth/spreadsheets
      - https://www.googleapis.com/auth/forms
      - https://www.google.com/calendar/feeds
      - https://www.googleapis.com/auth/forms.currentonly
      - https://mail.google.com/
      - https://www.googleapis.com/auth/admin.directory.user
      - https://www.googleapis.com/auth/drive
      - https://www.googleapis.com/auth/admin.directory.group
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  ExecutionError:
    type: object
    properties:
      errorType?:
        type: string
        description: The error type, for example `TypeError` or `ReferenceError`. If the error type is unavailable, this field is not included.
      scriptStackTraceElements?:
        type: array
        description: An array of objects that provide a stack trace through the script to show where the execution failed, with the deepest call first.
        items: ScriptStackTraceElement
      errorMessage?:
        type: string
        description: The error message thrown by Apps Script, usually localized into the user's language.
    description: An object that provides information about the nature of an error in the Apps Script Execution API. If an `run` call succeeds but the script function (or Apps Script itself) throws an exception, the response body's `error` field will contain a `Status` object. The `Status` object's `details` field will contain an array with a single one of these `ExecutionError` objects.
  ExecutionRequest:
    type: object
    properties:
      sessionState?:
        type: string
        description: This field is not used.
      devMode?:
        type: boolean
        description: If `true` and the user is an owner of the script, the script runs at the most recently saved version rather than the version deployed for use with the Execution API. Optional; default is `false`.
      function?:
        type: string
        description: The name of the function to execute in the given script. The name does not include parentheses or parameters.
      parameters?:
        type: array
        description: The parameters to be passed to the function being executed. The type for each parameter should match the expected type in Apps Script. Parameters cannot be Apps Script-specific objects (such as a `Document` or `Calendar`); they can only be primitive types such as a `string`, `number`, `array`, `object`, or `boolean`. Optional.
        items:
          type: any
    description: A request to run the function in a script. The script is identified by the specified `script_id`. Executing a function on a script will return results based on the implementation of the script.
  ExecutionResponse:
    type: object
    properties:
      result?:
        type: any
        description: The return value of the script function. The type will match the type returned in Apps Script. Functions called through the Execution API cannot return Apps Script-specific objects (such as a `Document` or `Calendar`); they can only return primitive types such as a `string`, `number`, `array`, `object`, or `boolean`.
      status?:
        type: string
        enum:
        - SUCCESS
        - CANCELED
    description: An object that provides the return value of a function executed through the Apps Script Execution API. If an `run` call succeeds and the script function returns successfully, the response body's `response` field will contain this `ExecutionResponse` object.
  Operation:
    type: object
    properties:
      metadata?:
        type: object
        description: This field is not used.
      response?:
        type: object
        description: If the script function returns successfully, this field will contain an `ExecutionResponse` object with the function's return value as the object's `result` field.
      name?:
        type: string
        description: This field is not used.
      error?: Status
      done?:
        type: boolean
        description: This field is not used.
    description: |-
      The response will not arrive until the function finishes executing. The maximum runtime is listed in the guide to [limitations in Apps Script](https://developers.google.com/apps-script/guides/services/quotas#current_limitations).
      If the script function returns successfully, the `response` field will contain an `ExecutionResponse` object with the function's return value in the object's `result` field.

      If the script function (or Apps Script itself) throws an exception, the `error` field will contain a `Status` object. The `Status` object's `details` field will contain an array with a single `ExecutionError` object that provides information about the nature of the error.

      If the `run` call itself fails (for example, because of a malformed request or an authorization error), the method will return an HTTP response code in the 4XX range with a different format for the response body. Client libraries will automatically convert a 4XX response into an exception class.
  ScriptStackTraceElement:
    type: object
    properties:
      function?:
        type: string
        description: The name of the function that failed.
      lineNumber?:
        type: integer
        format: int32
        description: The line number where the script failed.
    description: A stack trace through the script that shows where the execution failed.
  Status:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The status code, which should be an enum value of google.rpc.Code.
      details?:
        type: array
        description: An array that contains a single `ExecutionError` object that provides information about the nature of the error.
        items:
          type: object
      message?:
        type: string
        description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
    description: If a `run` call succeeds but the script function (or Apps Script itself) throws an exception, the response body's `error` field will contain this `Status` object.
/v1:
  /scripts:
    /{scriptId}:run:
      uriParameters:
        scriptId:
          type: string
          description: The project key of the script to be executed. To find the project key, open the project in the script editor, then select **File > Project properties**.
      post:
        securedBy:
          oath2:
            scopes:
            - https://mail.google.com/
            - https://www.google.com/calendar/feeds
            - https://www.google.com/m8/feeds
            - https://www.googleapis.com/auth/admin.directory.group
            - https://www.googleapis.com/auth/admin.directory.user
            - https://www.googleapis.com/auth/drive
            - https://www.googleapis.com/auth/forms
            - https://www.googleapis.com/auth/forms.currentonly
            - https://www.googleapis.com/auth/groups
            - https://www.googleapis.com/auth/spreadsheets
            - https://www.googleapis.com/auth/userinfo.email
        description: Runs a function in an Apps Script project that has been deployed for use with the Apps Script Execution API. This method requires authorization with an OAuth 2.0 token that includes at least one of the scopes listed in the [Authentication](#authentication) section; script projects that do not require authorization cannot be executed through this API. To find the correct scopes to include in the authentication token, open the project in the script editor, then select **File > Project properties** and click the **Scopes** tab.
        displayName: Run
        is:
        - hasParameters
        body:
          application/json: ExecutionRequest
        responses:
          200:
            body:
              application/json: Operation
        (commons.Id): script.scripts.run
        (commons.LogicalStructure):
        - Scripts
