#%RAML 1.0
title: Replica Pool API
version: v1beta1
baseUri: https://www.googleapis.com/replicapool/v1beta1/projects/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/compute/docs/replica-pool/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Tags):
- limited_availability
(commons.Id): replicapool:v1beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/ndev.cloudman
      - https://www.googleapis.com/auth/ndev.cloudman.readonly
      - https://www.googleapis.com/auth/replicapool
      - https://www.googleapis.com/auth/replicapool.readonly
      - https://www.googleapis.com/auth/cloud-platform.read-only
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AccessConfig:
    type: object
    properties:
      natIp?:
        type: string
        description: An external IP address associated with this instance.
      name?:
        type: string
        description: Name of this access configuration.
      type?:
        type: string
        description: Type of this access configuration file. Currently only ONE_TO_ONE_NAT is supported.
    description: A Compute Engine network accessConfig. Identical to the accessConfig on corresponding Compute Engine resource.
  Action:
    type: object
    properties:
      timeoutMilliSeconds?:
        type: integer
        format: int32
        description: If an action's commands on a particular replica do not finish in the specified timeoutMilliSeconds, the replica is considered to be in a FAILING state. No efforts are made to stop any processes that were spawned or created as the result of running the action's commands. The default is the max allowed value, 1 hour (i.e. 3600000 milliseconds).
      envVariables?:
        type: array
        description: A list of environment variables to use for the commands in this action.
        items: EnvVariable
      commands?:
        type: array
        description: A list of commands to run, one per line. If any command fails, the whole action is considered a failure and no further actions are run. This also marks the virtual machine or replica as a failure.
        items:
          type: string
    description: An action that gets executed during initialization of the replicas.
  DiskAttachment:
    type: object
    properties:
      index?:
        type: integer
        format: int32
        description: A zero-based index to assign to this disk, where 0 is reserved for the boot disk. If not specified, this is assigned by the server.
      deviceName?:
        type: string
        description: The device name of this disk.
    description: Specifies how to attach a disk to a Replica.
  EnvVariable:
    type: object
    properties:
      hidden?:
        type: boolean
        description: Deprecated, do not use.
      name?:
        type: string
        description: The name of the environment variable.
      value?:
        type: string
        description: The value of the variable.
    description: An environment variable to set for an action.
  ExistingDisk:
    type: object
    properties:
      attachment?: DiskAttachment
      source?:
        type: string
        description: The name of the Persistent Disk resource. The Persistent Disk resource must be in the same zone as the Pool.
    description: A pre-existing persistent disk that will be attached to every Replica in the Pool in READ_ONLY mode.
  HealthCheck:
    type: object
    properties:
      path?:
        type: string
        description: The localhost request path to send this health check, in the format /path/to/use. For example, /healthcheck.
      port?:
        type: integer
        format: int32
        description: The TCP port for the health check requests.
      checkIntervalSec?:
        type: integer
        format: int32
        description: How often (in seconds) to make HTTP requests for this healthcheck. The default value is 5 seconds.
      host?:
        type: string
        description: The value of the host header in the HTTP health check request. If left empty (default value), the localhost IP 127.0.0.1 will be used.
      name?:
        type: string
        description: The name of this health check.
      description?:
        type: string
        description: The description for this health check.
      unhealthyThreshold?:
        type: integer
        format: int32
        description: The number of consecutive health check requests that need to fail in order to consider the replica unhealthy. The default value is 2.
      healthyThreshold?:
        type: integer
        format: int32
        description: The number of consecutive health check requests that need to succeed before the replica is considered healthy again. The default value is 2.
      timeoutSec?:
        type: integer
        format: int32
        description: How long (in seconds) to wait before a timeout failure for this healthcheck. The default value is 5 seconds.
  Label:
    type: object
    properties:
      value?:
        type: string
        description: The value of this label.
      key?:
        type: string
        description: The key for this label.
    description: A label to apply to this replica pool.
  Metadata:
    type: object
    properties:
      fingerPrint?:
        type: string
        description: The fingerprint of the metadata. Required for updating the metadata entries for this instance.
      items?:
        type: array
        description: A list of metadata items.
        items: MetadataItem
    description: A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.
  MetadataItem:
    type: object
    properties:
      value?:
        type: string
        description: A metadata value.
      key?:
        type: string
        description: A metadata key.
    description: A Compute Engine metadata item, defined as a key:value pair. Identical to the metadata on the corresponding Compute Engine resource.
  NetworkInterface:
    type: object
    properties:
      networkIp?:
        type: string
        description: An optional IPV4 internal network address to assign to the instance for this network interface.
      accessConfigs?:
        type: array
        description: An array of configurations for this interface. This specifies how this interface is configured to interact with other network services.
        items: AccessConfig
      network?:
        type: string
        description: Name the Network resource to which this interface applies.
    description: A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding Compute Engine resource.
  NewDisk:
    type: object
    properties:
      attachment?: DiskAttachment
      autoDelete?:
        type: boolean
        description: If true, then this disk will be deleted when the instance is deleted. The default value is true.
      boot?:
        type: boolean
        description: If true, indicates that this is the root persistent disk.
      initializeParams?: NewDiskInitializeParams
    description: A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
  NewDiskInitializeParams:
    type: object
    properties:
      diskType?:
        type: string
        description: Name of the disk type resource describing which disk type to use to create the disk. For example 'pd-ssd' or 'pd-standard'. Default is 'pd-standard'
      sourceImage?:
        type: string
        description: |-
          The name or fully-qualified URL of a source image to use to create this disk. If you provide a name of the source image, Replica Pool will look for an image with that name in your project. If you are specifying an image provided by Compute Engine, you will need to provide the full URL with the correct project, such as:
          http://www.googleapis.com/compute/v1/projects/debian-cloud/ global/images/debian-wheezy-7-vYYYYMMDD
      diskSizeGb?:
        type: integer
        format: int64
        description: The size of the created disk in gigabytes.
    description: Initialization parameters for creating a new disk.
  Pool:
    type: object
    properties:
      autoRestart?:
        type: boolean
        description: Whether replicas in this pool should be restarted if they experience a failure. The default value is true.
      template?: Template
      healthChecks?:
        type: array
        description: Deprecated. Please use template[].healthChecks instead.
        items: HealthCheck
      initialNumReplicas?:
        type: integer
        format: int32
        description: The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.
      description?:
        type: string
        description: An optional description of the replica pool.
      baseInstanceName?:
        type: string
        description: |-
          The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format <base-instance-name>-<ID>. The <ID> postfix will be a four character alphanumeric identifier generated by the service.

          If this is not specified by the user, a random base instance name is generated by the service.
      targetPools?:
        type: array
        description: A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.
        items:
          type: string
      type?:
        type: string
        description: Deprecated! Do not set.
      labels?:
        type: array
        description: A list of labels to attach to this replica pool and all created virtual machines in this replica pool.
        items: Label
      selfLink?:
        type: string
        description: '[Output Only] A self-link to the replica pool.'
      numReplicas?:
        type: integer
        format: int32
        description: Deprecated! Use initial_num_replicas instead.
      targetPool?:
        type: string
        description: Deprecated, please use target_pools instead.
      currentNumReplicas?:
        type: integer
        format: int32
        description: '[Output Only] The current number of replicas in the pool.'
      name?:
        type: string
        description: The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.
      resourceViews?:
        type: array
        description: The list of resource views that should be updated with all the replicas that are managed by this pool.
        items:
          type: string
  PoolsDeleteRequest:
    type: object
    properties:
      abandonInstances?:
        type: array
        description: If there are instances you would like to keep, you can specify them here. These instances won't be deleted, but the associated replica objects will be removed.
        items:
          type: string
  PoolsListResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
      resources?: Pool[]
  Replica:
    type: object
    properties:
      name?:
        type: string
        description: '[Output Only] The name of the Replica object.'
      selfLink?:
        type: string
        description: '[Output Only] The self-link of the Replica.'
      status?: ReplicaStatus
    description: An individual Replica within a Pool. Replicas are automatically created by the replica pool, using the template provided by the user. You cannot directly create replicas.
  ReplicaStatus:
    type: object
    properties:
      details?:
        type: string
        description: '[Output Only] Human-readable details about the current state
          of the replica'
      templateVersion?:
        type: string
        description: '[Output Only] The template used to build the replica.'
      state?:
        type: string
        description: '[Output Only] The state of the Replica.'
      vmLink?:
        type: string
        description: '[Output Only] Link to the virtual machine that this Replica
          represents.'
      vmStartTime?:
        type: string
        description: '[Output Only] The time that this Replica got to the RUNNING
          state, in RFC 3339 format. If the start time is unknown, UNKNOWN is returned.'
    description: The current status of a Replica.
  ReplicasDeleteRequest:
    type: object
    properties:
      abandonInstance?:
        type: boolean
        description: Whether the instance resource represented by this replica should be deleted or abandoned. If abandoned, the replica will be deleted but the virtual machine instance will remain. By default, this is set to false and the instance will be deleted along with the replica.
  ReplicasListResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
      resources?: Replica[]
  ServiceAccount:
    type: object
    properties:
      scopes?:
        type: array
        description: 'The list of OAuth2 scopes to obtain for the service account,
          for example: https://www.googleapis.com/auth/devstorage.full_control'
        items:
          type: string
      email?:
        type: string
        description: 'The service account email address, for example: 123845678986@project.gserviceaccount.com'
    description: A Compute Engine service account, identical to the Compute Engine resource.
  Tag:
    type: object
    properties:
      fingerPrint?:
        type: string
        description: The fingerprint of the tag. Required for updating the list of tags.
      items?:
        type: array
        description: Items contained in this tag.
        items:
          type: string
    description: A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.
  Template:
    type: object
    properties:
      healthChecks?:
        type: array
        description: A list of HTTP Health Checks to configure for this replica pool and all virtual machines in this replica pool.
        items: HealthCheck
      action?: Action
      vmParams?: VmParams
      version?:
        type: string
        description: A free-form string describing the version of this template. You can provide any versioning string you would like. For example, version1 or template-v1.
    description: The template used for creating replicas in the pool.
  VmParams:
    type: object
    properties:
      canIpForward?:
        type: boolean
        description: Enables IP Forwarding, which allows this instance to receive packets destined for a different IP address, and send packets with a different source IP. See IP Forwarding for more information.
      metadata?: Metadata
      networkInterfaces?:
        type: array
        description: A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT.
        items: NetworkInterface
      serviceAccounts?:
        type: array
        description: A list of Service Accounts to enable for this instance.
        items: ServiceAccount
      disksToAttach?:
        type: array
        description: A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.
        items: ExistingDisk
      onHostMaintenance?:
        type: string
      disksToCreate?:
        type: array
        description: A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.
        items: NewDisk
      description?:
        type: string
        description: An optional textual description of the instance.
      baseInstanceName?:
        type: string
        description: Deprecated. Please use baseInstanceName instead.
      machineType?:
        type: string
        description: The machine type for this instance. The resource name (e.g. n1-standard-1).
      tags?: Tag
    description: Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.
/{projectName}:
  uriParameters:
    projectName:
      type: string
      description: The project ID for this request.
  /zones:
    /{zone}:
      uriParameters:
        zone:
          type: string
          description: The zone where the replica lives.
      /pools:
        /{poolName}:
          uriParameters:
            poolName:
              type: string
              description: The replica pool name for this request.
          /replicas:
            /{replicaName}:
              uriParameters:
                replicaName:
                  type: string
                  description: The name of the replica for this request.
              /restart:
                post:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/cloud-platform
                      - https://www.googleapis.com/auth/ndev.cloudman
                      - https://www.googleapis.com/auth/replicapool
                  description: Restarts a replica in a pool.
                  displayName: Restart Replicas
                  is:
                  - hasParameters
                  responses:
                    200:
                      body:
                        application/json: Replica
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                    - https://www.googleapis.com/auth/cloud-platform.read-only
                    - https://www.googleapis.com/auth/ndev.cloudman
                    - https://www.googleapis.com/auth/ndev.cloudman.readonly
                    - https://www.googleapis.com/auth/replicapool
                    - https://www.googleapis.com/auth/replicapool.readonly
                description: Gets information about a specific replica.
                displayName: Get Replicas
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Replica
              post:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                    - https://www.googleapis.com/auth/ndev.cloudman
                    - https://www.googleapis.com/auth/replicapool
                description: Deletes a replica from the pool.
                displayName: Delete Replicas
                is:
                - hasParameters
                body:
                  application/json: ReplicasDeleteRequest
                responses:
                  200:
                    body:
                      application/json: Replica
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
                  - https://www.googleapis.com/auth/cloud-platform.read-only
                  - https://www.googleapis.com/auth/ndev.cloudman
                  - https://www.googleapis.com/auth/ndev.cloudman.readonly
                  - https://www.googleapis.com/auth/replicapool
                  - https://www.googleapis.com/auth/replicapool.readonly
              description: Lists all replicas in a pool.
              displayName: List Replicas
              is:
              - hasParameters
              queryParameters:
                maxResults?:
                  type: integer
                  default: 500
                  format: int32
                  description: 'Maximum count of results to be returned. Acceptable
                    values are 0 to 100, inclusive. (Default: 50)'
                  maximum: 1000
                  minimum: 0
                pageToken?:
                  type: string
                  description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
              responses:
                200:
                  body:
                    application/json: ReplicasListResponse
          /resize:
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
                  - https://www.googleapis.com/auth/ndev.cloudman
                  - https://www.googleapis.com/auth/replicapool
              description: Resize a pool. This is an asynchronous operation, and multiple overlapping resize requests can be made. Replica Pools will use the information from the last resize request.
              displayName: Resize Pools
              is:
              - hasParameters
              queryParameters:
                numReplicas?:
                  type: integer
                  format: int32
                  description: The desired number of replicas to resize to. If this number is larger than the existing number of replicas, new replicas will be added. If the number is smaller, then existing replicas will be deleted.
              responses:
                200:
                  body:
                    application/json: Pool
          /updateTemplate:
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
                  - https://www.googleapis.com/auth/ndev.cloudman
                  - https://www.googleapis.com/auth/replicapool
              description: Update the template used by the pool.
              displayName: Updatetemplate Pools
              is:
              - hasParameters
              body:
                application/json: Template
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/cloud-platform.read-only
                - https://www.googleapis.com/auth/ndev.cloudman
                - https://www.googleapis.com/auth/ndev.cloudman.readonly
                - https://www.googleapis.com/auth/replicapool
                - https://www.googleapis.com/auth/replicapool.readonly
            description: Gets information about a single replica pool.
            displayName: Get Pools
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Pool
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
                - https://www.googleapis.com/auth/ndev.cloudman
                - https://www.googleapis.com/auth/replicapool
            description: Deletes a replica pool.
            displayName: Delete Pools
            is:
            - hasParameters
            body:
              application/json: PoolsDeleteRequest
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/ndev.cloudman
              - https://www.googleapis.com/auth/replicapool
          description: Inserts a new replica pool.
          displayName: Insert Pools
          is:
          - hasParameters
          body:
            application/json: Pool
          responses:
            200:
              body:
                application/json: Pool
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
              - https://www.googleapis.com/auth/cloud-platform.read-only
              - https://www.googleapis.com/auth/ndev.cloudman
              - https://www.googleapis.com/auth/ndev.cloudman.readonly
              - https://www.googleapis.com/auth/replicapool
              - https://www.googleapis.com/auth/replicapool.readonly
          description: List all replica pools.
          displayName: List Pools
          is:
          - hasParameters
          queryParameters:
            maxResults?:
              type: integer
              default: 500
              format: int32
              description: 'Maximum count of results to be returned. Acceptable values
                are 0 to 100, inclusive. (Default: 50)'
              maximum: 1000
              minimum: 0
            pageToken?:
              type: string
              description: Set this to the nextPageToken value returned by a previous list request to obtain the next page of results from the previous list request.
          responses:
            200:
              body:
                application/json: PoolsListResponse
