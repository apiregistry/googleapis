#%RAML 1.0
title: Google Container Engine API
version: v1
baseUri: https://container.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/container-engine/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): container:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AddonsConfig:
    type: object
    properties:
      httpLoadBalancing?: HttpLoadBalancing
      horizontalPodAutoscaling?: HorizontalPodAutoscaling
    description: Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
  Cluster:
    type: object
    properties:
      addonsConfig?: AddonsConfig
      masterAuth?: MasterAuth
      description?:
        type: string
        description: An optional description of this cluster.
      nodeConfig?: NodeConfig
      currentMasterVersion?:
        type: string
        description: '[Output only] The current software version of the master endpoint.'
      network?:
        type: string
        description: The name of the Google Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
      initialNodeCount?:
        type: integer
        format: int32
        description: The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time.
      endpoint?:
        type: string
        description: '[Output only] The IP address of this cluster''s master endpoint.
          The endpoint can be accessed from the internet at `https://username:password@endpoint/`.
          See the `masterAuth` property of this resource for username and password
          information.'
      zone?:
        type: string
        description: '[Output only] The name of the Google Compute Engine [zone](/compute/docs/zones#available)
          in which the cluster resides.'
      nodePools?:
        type: array
        description: The node pools associated with this cluster. When creating a new cluster, only a single node pool should be specified. This field should not be set if "node_config" or "initial_node_count" are specified.
        items: NodePool
      initialClusterVersion?:
        type: string
        description: '[Output only] The software version of the master endpoint and
          kubelets used in the cluster when it was first created. The version can
          be upgraded over time.'
      clusterIpv4Cidr?:
        type: string
        description: The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
      monitoringService?:
        type: string
        description: 'The monitoring service the cluster should use to write metrics.
          Currently available options: * `monitoring.googleapis.com` - the Google
          Cloud Monitoring service. * `none` - no metrics will be exported from the
          cluster. * if left as an empty string, `monitoring.googleapis.com` will
          be used.'
      loggingService?:
        type: string
        description: 'The logging service the cluster should use to write logs. Currently
          available options: * `logging.googleapis.com` - the Google Cloud Logging
          service. * `none` - no logs will be exported from the cluster. * if left
          as an empty string,`logging.googleapis.com` will be used.'
      currentNodeCount?:
        type: integer
        format: int32
        description: '[Output only] The number of nodes currently in the cluster.'
      statusMessage?:
        type: string
        description: '[Output only] Additional information about the current status
          of this cluster, if available.'
      selfLink?:
        type: string
        description: '[Output only] Server-defined URL for the resource.'
      instanceGroupUrls?:
        type: array
        description: '[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/)
          associated with this cluster.'
        items:
          type: string
      currentNodeVersion?:
        type: string
        description: '[Output only] The current version of the node software components.
          If they are currently at multiple versions because they''re in the process
          of being upgraded, this reflects the minimum version of all nodes.'
      createTime?:
        type: string
        description: '[Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
          text format.'
      subnetwork?:
        type: string
        description: The name of the Google Compute Engine [subnetwork](/compute/docs/subnetworks) to which the cluster is connected.
      nodeIpv4CidrSize?:
        type: integer
        format: int32
        description: '[Output only] The size of the address space on each node for
          hosting containers. This is provisioned from within the `container_ipv4_cidr`
          range.'
      name?:
        type: string
        description: 'The name of this cluster. The name must be unique within this
          project and zone, and can be up to 40 characters with the following restrictions:
          * Lowercase letters, numbers, and hyphens only. * Must start with a letter.
          * Must end with a number or a letter.'
      servicesIpv4Cidr?:
        type: string
        description: '[Output only] The IP address range of the Kubernetes services
          in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the
          last `/16` from the container CIDR.'
      locations?:
        type: array
        description: The list of Google Compute Engine [locations](/compute/docs/zones#available) in which the cluster's nodes should be located.
        items:
          type: string
      status?:
        type: string
        description: '[Output only] The current status of this cluster.'
        enum:
        - STATUS_UNSPECIFIED
        - PROVISIONING
        - RUNNING
        - RECONCILING
        - STOPPING
        - ERROR
    description: A Google Container Engine cluster.
  ClusterUpdate:
    type: object
    properties:
      desiredMonitoringService?:
        type: string
        description: 'The monitoring service the cluster should use to write metrics.
          Currently available options: * "monitoring.googleapis.com" - the Google
          Cloud Monitoring service * "none" - no metrics will be exported from the
          cluster'
      desiredMasterVersion?:
        type: string
        description: The Kubernetes version to change the master to. The only valid value is the latest supported version. Use "-" to have the server automatically select the latest version.
      desiredNodePoolId?:
        type: string
        description: The node pool to be upgraded. This field is mandatory if the "desired_node_version" or "desired_image_family" is specified and there is more than one node pool on the cluster.
      desiredNodeVersion?:
        type: string
        description: The Kubernetes version to change the nodes to (typically an upgrade). Use `-` to upgrade to the latest version supported by the server.
      desiredAddonsConfig?: AddonsConfig
    description: ClusterUpdate describes an update to the cluster. Exactly one update can be applied to a cluster with each request, so at most one field can be provided.
  CreateClusterRequest:
    type: object
    properties:
      cluster?: Cluster
    description: CreateClusterRequest creates a cluster.
  CreateNodePoolRequest:
    type: object
    properties:
      nodePool?: NodePool
    description: CreateNodePoolRequest creates a node pool for a cluster.
  HorizontalPodAutoscaling:
    type: object
    properties:
      disabled?:
        type: boolean
        description: Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.
    description: Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
  HttpLoadBalancing:
    type: object
    properties:
      disabled?:
        type: boolean
        description: Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.
    description: Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
  ListClustersResponse:
    type: object
    properties:
      missingZones?:
        type: array
        description: If any zones are listed here, the list of clusters returned may be missing those zones.
        items:
          type: string
      clusters?:
        type: array
        description: A list of clusters in the project in the specified zone, or across all ones.
        items: Cluster
    description: ListClustersResponse is the result of ListClustersRequest.
  ListNodePoolsResponse:
    type: object
    properties:
      nodePools?:
        type: array
        description: A list of node pools for a cluster.
        items: NodePool
    description: ListNodePoolsResponse is the result of ListNodePoolsRequest.
  ListOperationsResponse:
    type: object
    properties:
      missingZones?:
        type: array
        description: If any zones are listed here, the list of operations returned may be missing the operations from those zones.
        items:
          type: string
      operations?:
        type: array
        description: A list of operations in the project in the specified zone.
        items: Operation
    description: ListOperationsResponse is the result of ListOperationsRequest.
  MasterAuth:
    type: object
    properties:
      password?:
        type: string
        description: The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password.
      clientCertificate?:
        type: string
        description: '[Output only] Base64-encoded public certificate used by clients
          to authenticate to the cluster endpoint.'
      clientKey?:
        type: string
        description: '[Output only] Base64-encoded private key used by clients to
          authenticate to the cluster endpoint.'
      clusterCaCertificate?:
        type: string
        description: '[Output only] Base64-encoded public certificate that is the
          root of trust for the cluster.'
      username?:
        type: string
        description: The username to use for HTTP basic authentication to the master endpoint.
    description: The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
  NodeConfig:
    type: object
    properties:
      metadata?:
        type: object
        description: 'The metadata key/value pairs assigned to instances in the cluster.
          Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
          in length. These are reflected as part of a URL in the metadata server.
          Additionally, to avoid ambiguity, keys must not conflict with any other
          metadata keys for the project or be one of the four reserved keys: "instance-template",
          "kube-env", "startup-script", and "user-data" Values are free-form strings,
          and only have meaning as interpreted by the image running in the instance.
          The only restriction placed on them is that each value''s size must be less
          than or equal to 32 KB. The total size of all keys and values must be less
          than 512 KB.'
      oauthScopes?:
        type: array
        description: 'The set of Google API scopes to be made available on all of
          the node VMs under the "default" service account. The following scopes are
          recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute`
          is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only`
          is required for communicating with **gcr.io** (the [Google Container Registry](/container-registry/)).
          If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring
          are enabled, in which case their required scopes will be added.'
        items:
          type: string
      machineType?:
        type: string
        description: The name of a Google Compute Engine [machine type](/compute/docs/machine-types) (e.g. `n1-standard-1`). If unspecified, the default machine type is `n1-standard-1`.
      diskSizeGb?:
        type: integer
        format: int32
        description: Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
    description: Parameters that describe the nodes in a cluster.
  NodePool:
    type: object
    properties:
      initialNodeCount?:
        type: integer
        format: int32
        description: The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota.
      instanceGroupUrls?:
        type: array
        description: '[Output only] The resource URLs of [instance groups](/compute/docs/instance-groups/)
          associated with this node pool.'
        items:
          type: string
      name?:
        type: string
        description: The name of the node pool.
      config?: NodeConfig
      version?:
        type: string
        description: The version of the Kubernetes of this node.
      statusMessage?:
        type: string
        description: '[Output only] Additional information about the current status
          of this node pool instance, if available.'
      selfLink?:
        type: string
        description: Server-defined URL for the resource.
      status?:
        type: string
        description: The status of the nodes in this pool instance.
        enum:
        - STATUS_UNSPECIFIED
        - PROVISIONING
        - RUNNING
        - RUNNING_WITH_ERROR
        - RECONCILING
        - STOPPING
        - ERROR
    description: NodePool contains the name and configuration for a cluster's node pool. Node pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.
  Operation:
    type: object
    properties:
      zone?:
        type: string
        description: The name of the Google Compute Engine [zone](/compute/docs/zones#available) in which the operation is taking place.
      targetLink?:
        type: string
        description: Server-defined URL for the target of the operation.
      name?:
        type: string
        description: The server-assigned ID for the operation.
      operationType?:
        type: string
        description: The operation type.
        enum:
        - TYPE_UNSPECIFIED
        - CREATE_CLUSTER
        - DELETE_CLUSTER
        - UPGRADE_MASTER
        - UPGRADE_NODES
        - REPAIR_CLUSTER
        - UPDATE_CLUSTER
        - CREATE_NODE_POOL
        - DELETE_NODE_POOL
      detail?:
        type: string
        description: Detailed operation progress, if available.
      statusMessage?:
        type: string
        description: If an error has occurred, a textual description of the error.
      status?:
        type: string
        description: The current status of the operation.
        enum:
        - STATUS_UNSPECIFIED
        - PENDING
        - RUNNING
        - DONE
      selfLink?:
        type: string
        description: Server-defined URL for the resource.
    description: This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only.
  ServerConfig:
    type: object
    properties:
      validNodeVersions?:
        type: array
        description: List of valid node upgrade target versions.
        items:
          type: string
      validImageFamilies?:
        type: array
        description: List of valid image families.
        items:
          type: string
      defaultImageFamily?:
        type: string
        description: Default image family.
      defaultClusterVersion?:
        type: string
        description: Version of Kubernetes the service deploys by default.
    description: Container Engine service configuration.
  UpdateClusterRequest:
    type: object
    properties:
      update?: ClusterUpdate
    description: UpdateClusterRequest updates the settings of a cluster.
/v1:
  /projects:
    /{projectId}:
      uriParameters:
        projectId:
          type: string
          description: The Google Developers Console [project ID or project number](https://support.google.com/cloud/answer/6158840).
      /zones:
        /{zone}:
          uriParameters:
            zone:
              type: string
              description: The name of the Google Compute Engine [zone](/compute/docs/zones#available) to return operations for.
          /serverconfig:
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Returns configuration info about the Container Engine service.
              is:
              - hasParameters
              responses:
                200:
                  body:
                    application/json: ServerConfig
