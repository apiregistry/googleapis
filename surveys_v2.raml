#%RAML 1.0
title: Surveys API
version: v2
baseUri: https://www.googleapis.com/surveys/v2/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): surveys:v2
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/consumersurveys.readonly
      - https://www.googleapis.com/auth/userinfo.email
      - https://www.googleapis.com/auth/consumersurveys
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  FieldMask:
    type: object
    properties:
      id?:
        type: integer
        format: int32
      fields?: FieldMask[]
  MobileAppPanel:
    type: object
    properties:
      country?:
        type: string
        description: Country code for the country of the users that the panel contains. Uses standard ISO 3166-1 2-character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom. Any survey created targeting this panel must also target the corresponding country.
      name?:
        type: string
        description: Human readable name of the audience panel.
      isPublicPanel?:
        type: boolean
        description: Whether or not the panel is accessible to all API users.
      language?:
        type: string
        description: Language code that the panel can target. For instance, 'en-US'. Uses standard BCP47 language codes. See specification. Any survey created targeting this panel must also target the corresponding language.
      owners?:
        type: array
        description: List of email addresses for users who can target members of this panel. Must contain at least the address of the user making the API call for panels that are not public. This field will be empty for public panels.
        items:
          type: string
      mobileAppPanelId?:
        type: string
        description: Unique panel ID string. This corresponds to the mobile_app_panel_id used in Survey Insert requests.
    description: Representation of an individual pre-defined panel object defining a targeted audience of opinion rewards mobile app users.
  MobileAppPanelsListResponse:
    type: object
    properties:
      tokenPagination?: TokenPagination
      requestId?:
        type: string
        description: Unique request ID used for logging and debugging. Please include in any error reporting or troubleshooting requests.
      pageInfo?: PageInfo
      resources?:
        type: array
        description: An individual predefined panel of Opinion Rewards mobile users.
        items: MobileAppPanel
  PageInfo:
    type: object
    properties:
      startIndex?:
        type: integer
        format: int32
      totalResults?:
        type: integer
        format: int32
      resultPerPage?:
        type: integer
        format: int32
  ResultsGetRequest:
    type: object
    properties:
      resultMask?: ResultsMask
  ResultsMask:
    type: object
    properties:
      projection?:
        type: string
      fields?: FieldMask[]
  Survey:
    type: object
    properties:
      audience?: SurveyAudience
      cost?: SurveyCost
      surveyUrlId?:
        type: string
        description: Unique survey ID, that is viewable in the URL of the Survey Creator UI
      questions?:
        type: array
        description: List of questions defining the survey.
        items: SurveyQuestion
      wantedResponseCount?:
        type: integer
        format: int32
        description: Number of responses desired for the survey.
      description?:
        type: string
        description: Text description of the survey.
      customerData?:
        type: string
        description: Additional information to store on behalf of the API consumer and associate with this question. This binary blob is treated as opaque. This field is limited to 64K bytes.
      owners?:
        type: array
        description: List of email addresses for survey owners. Must contain at least the address of the user making the API call.
        items:
          type: string
      state?:
        type: string
        description: State that the survey is in.
      rejectionReason?: SurveyRejection
      title?:
        type: string
        description: Optional name that will be given to the survey.
    description: Representation of an individual survey object.
  SurveyAudience:
    type: object
    properties:
      country?:
        type: string
        description: Required country code that surveys should be targeted to. Accepts standard ISO 3166-1 2 character language codes. For instance, 'US' for the United States, and 'GB' for the United Kingdom.
      gender?:
        type: string
        description: Optional gender to target.
      languages?:
        type: array
        description: Language code that surveys should be targeted to. For instance, 'en-US'. Surveys may target bilingual users by specifying a list of language codes (for example, 'de' and 'en-US'). In that case, all languages will be used for targeting users but the survey content (which is displayed) must match the first language listed. Accepts standard BCP47 language codes. See specification.
        items:
          type: string
      ages?:
        type: array
        description: 'Optional list of age buckets to target. Supported age buckets
          are: [''18-24'', ''25-34'', ''35-44'', ''45-54'', ''55-64'', ''65+'']'
        items:
          type: string
      populationSource?:
        type: string
        description: Online population source where the respondents are sampled from.
      countrySubdivision?:
        type: string
        description: Country subdivision (states/provinces/etc) that surveys should be targeted to. For all countries except GB, ISO-3166-2 subdivision code is required (eg. 'US-OH' for Ohio, United States). For GB, NUTS 1 statistical region codes for the United Kingdom is required (eg. 'UK-UKC' for North East England).
      mobileAppPanelId?:
        type: string
        description: Key for predefined panel that causes survey to be sent to a predefined set of Opinion Rewards App users. You must set PopulationSource to ANDROID_APP_PANEL to use this field.
    description: Specifications for the target audience of a survey run through the API.
  SurveyCost:
    type: object
    properties:
      costPerResponseNanos?:
        type: integer
        format: int64
        description: Cost per survey response in nano units of the given currency. To get the total cost for a survey, multiply this value by wanted_response_count.
      nanos?:
        type: integer
        format: int64
        description: Cost of survey in nano units of the given currency. DEPRECATED in favor of cost_per_response_nanos
      currencyCode?:
        type: string
        description: Currency code that the cost is given in.
      maxCostPerResponseNanos?:
        type: integer
        format: int64
        description: Threshold to start a survey automatically if the quoted price is at most this value. When a survey has a Screener (threshold) question, it must go through an incidence pricing test to determine the final cost per response. Typically you will have to make a followup call to start the survey giving the final computed cost per response. If the survey has no threshold_answers, setting this property will return an error. By specifying this property, you indicate the max price per response you are willing to pay in advance of the incidence test. If the price turns out to be lower than the specified value, the survey will begin immediately and you will be charged at the rate determined by the incidence pricing test. If the price turns out to be greater than the specified value the survey will not be started and you will instead be notified what price was determined by the incidence test. At that point, you must raise the value of this property to be greater than or equal to that cost before attempting to start the survey again. This will immediately start the survey as long the incidence test was run within the last 21 days.
    description: Message defining the cost to run a given survey through API.
  SurveyQuestion:
    type: object
    properties:
      images?: SurveyQuestionImage[]
      thresholdAnswers?:
        type: array
        description: The threshold/screener answer options, which will screen a user into the rest of the survey. These will be a subset of the answer option strings.
        items:
          type: string
      highValueLabel?:
        type: string
        description: For rating questions, the text for the higher end of the scale, such as 'Best'. For numeric questions, a string representing a floating-point that is the maximum allowed number for a response.
      question?:
        type: string
        description: Required question text shown to the respondent.
      answers?:
        type: array
        description: Required list of answer options for a question.
        items:
          type: string
      videoId?:
        type: string
        description: The YouTube video ID to be show in video questions.
      singleLineResponse?:
        type: boolean
        description: Option to allow multiple line open text responses instead of a single line response. Note that we don't show auto-complete suggestions with multiple line responses.
      type?:
        type: string
        description: Required field defining the question type. For details about configuring different type of questions, consult the question configuration guide.
      mustPickSuggestion?:
        type: boolean
        description: Option to force the user to pick one of the open text suggestions. This requires that suggestions are provided for this question.
      lastAnswerPositionPinned?:
        type: boolean
        description: Currently only support pinning an answer option to the last position.
      lowValueLabel?:
        type: string
        description: For rating questions, the text for the lower end of the scale, such as 'Worst'. For numeric questions, a string representing a floating-point that is the minimum allowed number for a response.
      hasOther?:
        type: boolean
        description: Option to allow open-ended text box for Single Answer and Multiple Answer question types. This can be used with SINGLE_ANSWER, SINGLE_ANSWER_WITH_IMAGE, MULTIPLE_ANSWERS, and MULTIPLE_ANSWERS_WITH_IMAGE question types.
      openTextSuggestions?:
        type: array
        description: A list of suggested answers for open text question auto-complete. This is only valid if single_line_response is true.
        items:
          type: string
      sentimentText?:
        type: string
        description: Used by the Rating Scale with Text question type. This text goes along with the question field that is presented to the respondent, and is the actual text that the respondent is asked to rate.
      numStars?:
        type: string
        description: Number of stars to use for ratings questions.
      answerOrder?:
        type: string
        description: The randomization option for multiple choice and multi-select questions. If not specified, this option defaults to randomize.
      openTextPlaceholder?:
        type: string
        description: Placeholder text for an open text question.
      unitOfMeasurementLabel?:
        type: string
        description: 'Optional unit of measurement for display (for example: hours,
          people, miles).'
    description: Message defining the question specifications.
  SurveyQuestionImage:
    type: object
    properties:
      altText?:
        type: string
        description: The alt text property used in image tags is required for all images.
      data?:
        type: string
        description: Inline jpeg, gif, tiff, bmp, or png image raw bytes for an image question types.
      url?:
        type: string
        description: The read-only URL for the hosted images.
    description: Container object for image data and alt_text.
  SurveyRejection:
    type: object
    properties:
      explanation?:
        type: string
        description: A human-readable explanation of what was wrong with the survey.
      type?:
        type: string
        description: Which category of rejection this was. See the GCS Help Center for additional details on each category.
    description: Message representing why the survey was rejected from review, if it was.
  SurveyResults:
    type: object
    properties:
      surveyUrlId?:
        type: string
        description: External survey ID as viewable by survey owners in the editor view.
      status?:
        type: string
        description: Human readable string describing the status of the request.
    description: Reference to the current results for a given survey.
  SurveysDeleteResponse:
    type: object
    properties:
      requestId?:
        type: string
        description: Unique request ID used for logging and debugging. Please include in any error reporting or troubleshooting requests.
  SurveysListResponse:
    type: object
    properties:
      tokenPagination?: TokenPagination
      requestId?:
        type: string
        description: Unique request ID used for logging and debugging. Please include in any error reporting or troubleshooting requests.
      pageInfo?: PageInfo
      resources?:
        type: array
        description: An individual survey resource.
        items: Survey
  SurveysStartRequest:
    type: object
    properties:
      maxCostPerResponseNanos?:
        type: integer
        format: int64
        description: Threshold to start a survey automically if the quoted prices is less than or equal to this value. See Survey.Cost for more details.
  SurveysStartResponse:
    type: object
    properties:
      resource?: Survey
      requestId?:
        type: string
        description: Unique request ID used for logging and debugging. Please include in any error reporting or troubleshooting requests.
  SurveysStopResponse:
    type: object
    properties:
      resource?: Survey
      requestId?:
        type: string
        description: Unique request ID used for logging and debugging. Please include in any error reporting or troubleshooting requests.
  TokenPagination:
    type: object
    properties:
      nextPageToken?:
        type: string
      previousPageToken?:
        type: string
/surveys:
  /{resourceId}:
    uriParameters:
      resourceId:
        type: string
    /stop:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/consumersurveys
            - https://www.googleapis.com/auth/userinfo.email
        description: Stops a running survey.
        displayName: Stop
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: SurveysStopResponse
        (commons.Id): surveys.surveys.stop
        (commons.LogicalStructure):
        - Surveys
    /start:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/consumersurveys
            - https://www.googleapis.com/auth/userinfo.email
        description: Begins running a survey.
        displayName: Start
        is:
        - hasParameters
        body:
          application/json: SurveysStartRequest
        responses:
          200:
            body:
              application/json: SurveysStartResponse
        (commons.Id): surveys.surveys.start
        (commons.LogicalStructure):
        - Surveys
  /{surveyUrlId}:
    uriParameters:
      surveyUrlId:
        type: string
        description: External URL ID for the survey.
    /results:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/consumersurveys
            - https://www.googleapis.com/auth/consumersurveys.readonly
            - https://www.googleapis.com/auth/userinfo.email
        description: Retrieves any survey results that have been produced so far. Results are formatted as an Excel file. You must add "?alt=media" to the URL as an argument to get results.
        displayName: Get
        is:
        - hasParameters
        body:
          application/json: ResultsGetRequest
        responses:
          200:
            body:
              application/json: SurveyResults
        (commons.Id): surveys.results.get
        (commons.LogicalStructure):
        - Results
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/consumersurveys
          - https://www.googleapis.com/auth/consumersurveys.readonly
          - https://www.googleapis.com/auth/userinfo.email
      description: Retrieves information about the specified survey.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Survey
      (commons.Id): surveys.surveys.get
      (commons.LogicalStructure):
      - Surveys
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/consumersurveys
          - https://www.googleapis.com/auth/userinfo.email
      description: Updates a survey. Currently the only property that can be updated is the owners property.
      displayName: Update
      is:
      - hasParameters
      body:
        application/json: Survey
      responses:
        200:
          body:
            application/json: Survey
      (commons.Id): surveys.surveys.update
      (commons.LogicalStructure):
      - Surveys
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/consumersurveys
          - https://www.googleapis.com/auth/userinfo.email
      description: Removes a survey from view in all user GET requests.
      displayName: Delete
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: SurveysDeleteResponse
      (commons.Id): surveys.surveys.delete
      (commons.LogicalStructure):
      - Surveys
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/consumersurveys
        - https://www.googleapis.com/auth/userinfo.email
    description: Creates a survey.
    displayName: Insert
    is:
    - hasParameters
    body:
      application/json: Survey
    responses:
      200:
        body:
          application/json: Survey
    (commons.Id): surveys.surveys.insert
    (commons.LogicalStructure):
    - Surveys
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/consumersurveys
        - https://www.googleapis.com/auth/consumersurveys.readonly
        - https://www.googleapis.com/auth/userinfo.email
    description: Lists the surveys owned by the authenticated user.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      startIndex?:
        type: integer
        format: int32
      maxResults?:
        type: integer
        format: int32
      token?:
        type: string
    responses:
      200:
        body:
          application/json: SurveysListResponse
    (commons.Id): surveys.surveys.list
    (commons.LogicalStructure):
    - Surveys
/mobileAppPanels:
  /{panelId}:
    uriParameters:
      panelId:
        type: string
        description: External URL ID for the panel.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/consumersurveys
          - https://www.googleapis.com/auth/consumersurveys.readonly
          - https://www.googleapis.com/auth/userinfo.email
      description: Retrieves a MobileAppPanel that is available to the authenticated user.
      displayName: Get
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: MobileAppPanel
      (commons.Id): surveys.mobileapppanels.get
      (commons.LogicalStructure):
      - Mobileapppanels
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/consumersurveys
          - https://www.googleapis.com/auth/userinfo.email
      description: Updates a MobileAppPanel. Currently the only property that can be updated is the owners property.
      displayName: Update
      is:
      - hasParameters
      body:
        application/json: MobileAppPanel
      responses:
        200:
          body:
            application/json: MobileAppPanel
      (commons.Id): surveys.mobileapppanels.update
      (commons.LogicalStructure):
      - Mobileapppanels
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/consumersurveys
        - https://www.googleapis.com/auth/consumersurveys.readonly
        - https://www.googleapis.com/auth/userinfo.email
    description: Lists the MobileAppPanels available to the authenticated user.
    displayName: List
    is:
    - hasParameters
    queryParameters:
      startIndex?:
        type: integer
        format: int32
      maxResults?:
        type: integer
        format: int32
      token?:
        type: string
    responses:
      200:
        body:
          application/json: MobileAppPanelsListResponse
    (commons.Id): surveys.mobileapppanels.list
    (commons.LogicalStructure):
    - Mobileapppanels
