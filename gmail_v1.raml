#%RAML 1.0
title: Gmail API
version: v1
baseUri: https://www.googleapis.com/gmail/v1/users/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/gmail/api/
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/googlemail-32.png
  name: x32
- url: https://www.google.com/images/icons/product/googlemail-16.png
  name: x16
(commons.Id): gmail:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/gmail.readonly
      - https://www.googleapis.com/auth/gmail.send
      - https://www.googleapis.com/auth/gmail.settings.basic
      - https://www.googleapis.com/auth/gmail.labels
      - https://www.googleapis.com/auth/gmail.compose
      - https://www.googleapis.com/auth/gmail.insert
      - https://www.googleapis.com/auth/gmail.settings.sharing
      - https://mail.google.com/
      - https://www.googleapis.com/auth/gmail.modify
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AutoForwarding:
    type: object
    properties:
      disposition?:
        type: string
        description: The state that a message should be left in after it has been forwarded.
        enum:
        - archive
        - dispositionUnspecified
        - leaveInInbox
        - markRead
        - trash
      emailAddress?:
        type: string
        description: Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.
      enabled?:
        type: boolean
        description: Whether all incoming mail is automatically forwarded to another address.
    description: Auto-forwarding settings for an account.
  BatchDeleteMessagesRequest:
    type: object
    properties:
      ids?:
        type: array
        description: The IDs of the messages to delete.
        items:
          type: string
  Draft:
    type: object
    properties:
      id?:
        type: string
        description: The immutable ID of the draft.
      message?: Message
    description: A draft email in the user's mailbox.
  Filter:
    type: object
    properties:
      criteria?: FilterCriteria
      action?: FilterAction
      id?:
        type: string
        description: The server assigned ID of the filter.
    description: Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.
  FilterAction:
    type: object
    properties:
      addLabelIds?:
        type: array
        description: List of labels to add to the message.
        items:
          type: string
      forward?:
        type: string
        description: Email address that the message should be forwarded to.
      removeLabelIds?:
        type: array
        description: List of labels to remove from the message.
        items:
          type: string
    description: A set of actions to perform on a message.
  FilterCriteria:
    type: object
    properties:
      hasAttachment?:
        type: boolean
        description: Whether the message has any attachment.
      excludeChats?:
        type: boolean
        description: Whether the response should exclude chats.
      size?:
        type: integer
        format: int32
        description: The size of the entire RFC822 message in bytes, including all headers and attachments.
      sizeComparison?:
        type: string
        description: How the message size in bytes should be in relation to the size field.
        enum:
        - larger
        - smaller
        - unspecified
      subject?:
        type: string
        description: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.
      query?:
        type: string
        description: 'Only return messages matching the specified query. Supports
          the same query format as the Gmail search box. For example, "from:someuser@example.com
          rfc822msgid: is:unread".'
      from?:
        type: string
        description: The sender's display name or email address.
      to?:
        type: string
        description: The recipient's display name or email address. Includes recipients in the "to", "cc", and "bcc" header fields. You can use simply the local part of the email address. For example, "example" and "example@" both match "example@gmail.com". This field is case-insensitive.
      negatedQuery?:
        type: string
        description: 'Only return messages not matching the specified query. Supports
          the same query format as the Gmail search box. For example, "from:someuser@example.com
          rfc822msgid: is:unread".'
    description: Message matching criteria.
  ForwardingAddress:
    type: object
    properties:
      verificationStatus?:
        type: string
        description: Indicates whether this address has been verified and is usable for forwarding. Read-only.
        enum:
        - accepted
        - pending
        - verificationStatusUnspecified
      forwardingEmail?:
        type: string
        description: An email address to which messages can be forwarded.
    description: Settings for a forwarding address.
  History:
    type: object
    properties:
      messagesAdded?:
        type: array
        description: Messages added to the mailbox in this history record.
        items: HistoryMessageAdded
      labelsAdded?:
        type: array
        description: Labels added to messages in this history record.
        items: HistoryLabelAdded
      messages?:
        type: array
        description: List of messages changed in this history record. The fields for specific change types, such as messagesAdded may duplicate messages in this field. We recommend using the specific change-type fields instead of this.
        items: Message
      id?:
        type: integer
        format: int64
        description: The mailbox sequence ID.
      labelsRemoved?:
        type: array
        description: Labels removed from messages in this history record.
        items: HistoryLabelRemoved
      messagesDeleted?:
        type: array
        description: Messages deleted (not Trashed) from the mailbox in this history record.
        items: HistoryMessageDeleted
    description: A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.
  HistoryLabelAdded:
    type: object
    properties:
      labelIds?:
        type: array
        description: Label IDs added to the message.
        items:
          type: string
      message?: Message
  HistoryLabelRemoved:
    type: object
    properties:
      labelIds?:
        type: array
        description: Label IDs removed from the message.
        items:
          type: string
      message?: Message
  HistoryMessageAdded:
    type: object
    properties:
      message?: Message
  HistoryMessageDeleted:
    type: object
    properties:
      message?: Message
  ImapSettings:
    type: object
    properties:
      maxFolderSize?:
        type: integer
        format: int32
        description: An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.
      expungeBehavior?:
        type: string
        description: The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.
        enum:
        - archive
        - deleteForever
        - expungeBehaviorUnspecified
        - trash
      autoExpunge?:
        type: boolean
        description: If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.
      enabled?:
        type: boolean
        description: Whether IMAP is enabled for the account.
    description: IMAP settings for an account.
  Label:
    type: object
    properties:
      messageListVisibility?:
        type: string
        description: The visibility of the label in the message list in the Gmail web interface.
        enum:
        - hide
        - show
      messagesUnread?:
        type: integer
        format: int32
        description: The number of unread messages with the label.
      threadsUnread?:
        type: integer
        format: int32
        description: The number of unread threads with the label.
      threadsTotal?:
        type: integer
        format: int32
        description: The total number of threads with the label.
      name?:
        type: string
        description: The display name of the label.
      id?:
        type: string
        description: The immutable ID of the label.
      labelListVisibility?:
        type: string
        description: The visibility of the label in the label list in the Gmail web interface.
        enum:
        - labelHide
        - labelShow
        - labelShowIfUnread
      type?:
        type: string
        description: The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the INBOX and UNREAD labels from messages and threads, but cannot apply or remove the DRAFTS or SENT labels from messages or threads.
        enum:
        - system
        - user
      messagesTotal?:
        type: integer
        format: int32
        description: The total number of messages with the label.
    description: Labels are used to categorize messages and threads within the user's mailbox.
  ListDraftsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Token to retrieve the next page of results in the list.
      drafts?:
        type: array
        description: List of drafts.
        items: Draft
      resultSizeEstimate?:
        type: integer
        format: int32
        description: Estimated total number of results.
  ListFiltersResponse:
    type: object
    properties:
      filter?:
        type: array
        description: List of a user's filters.
        items: Filter
    description: Response for the ListFilters method.
  ListForwardingAddressesResponse:
    type: object
    properties:
      forwardingAddresses?:
        type: array
        description: List of addresses that may be used for forwarding.
        items: ForwardingAddress
    description: Response for the ListForwardingAddresses method.
  ListHistoryResponse:
    type: object
    properties:
      historyId?:
        type: integer
        format: int64
        description: The ID of the mailbox's current history record.
      nextPageToken?:
        type: string
        description: Page token to retrieve the next page of results in the list.
      history?:
        type: array
        description: List of history records. Any messages contained in the response will typically only have id and threadId fields populated.
        items: History
  ListLabelsResponse:
    type: object
    properties:
      labels?:
        type: array
        description: List of labels.
        items: Label
  ListMessagesResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Token to retrieve the next page of results in the list.
      messages?:
        type: array
        description: List of messages.
        items: Message
      resultSizeEstimate?:
        type: integer
        format: int32
        description: Estimated total number of results.
  ListSendAsResponse:
    type: object
    properties:
      sendAs?:
        type: array
        description: List of send-as aliases.
        items: SendAs
    description: Response for the ListSendAs method.
  ListThreadsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Page token to retrieve the next page of results in the list.
      threads?:
        type: array
        description: List of threads.
        items: Thread
      resultSizeEstimate?:
        type: integer
        format: int32
        description: Estimated total number of results.
  Message:
    type: object
    properties:
      snippet?:
        type: string
        description: A short part of the message text.
      threadId?:
        type: string
        description: "The ID of the thread the message belongs to. To add a message\
          \ or draft to a thread, the following criteria must be met: \n- The requested\
          \ threadId must be specified on the Message or Draft.Message you supply\
          \ with your request. \n- The References and In-Reply-To headers must be\
          \ set in compliance with the RFC 2822 standard. \n- The Subject headers\
          \ must match."
      labelIds?:
        type: array
        description: List of IDs of labels applied to this message.
        items:
          type: string
      payload?: MessagePart
      historyId?:
        type: integer
        format: int64
        description: The ID of the last history record that modified this message.
      raw?:
        type: string
        description: The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in messages.get and drafts.get responses when the format=RAW parameter is supplied.
      id?:
        type: string
        description: The immutable ID of the message.
      sizeEstimate?:
        type: integer
        format: int32
        description: Estimated size in bytes of the message.
      internalDate?:
        type: integer
        format: int64
        description: The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the Date header. However, for API-migrated mail, it can be configured by client to be based on the Date header.
    description: An email message.
  MessagePart:
    type: object
    properties:
      headers?:
        type: array
        description: List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject.
        items: MessagePartHeader
      filename?:
        type: string
        description: The filename of the attachment. Only present if this message part represents an attachment.
      partId?:
        type: string
        description: The immutable ID of the message part.
      parts?:
        type: array
        description: The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521.
        items: MessagePart
      mimeType?:
        type: string
        description: The MIME type of the message part.
      body?: MessagePartBody
    description: A single MIME message part.
  MessagePartBody:
    type: object
    properties:
      data?:
        type: string
        description: The body data of a MIME message part. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.
      size?:
        type: integer
        format: int32
        description: Total number of bytes in the body of the message part.
      attachmentId?:
        type: string
        description: When present, contains the ID of an external attachment that can be retrieved in a separate messages.attachments.get request. When not present, the entire content of the message part body is contained in the data field.
    description: The body of a single MIME message part.
  MessagePartHeader:
    type: object
    properties:
      name?:
        type: string
        description: 'The name of the header before the : separator. For example,
          To.'
      value?:
        type: string
        description: 'The value of the header after the : separator. For example,
          someuser@example.com.'
  ModifyMessageRequest:
    type: object
    properties:
      addLabelIds?:
        type: array
        description: A list of IDs of labels to add to this message.
        items:
          type: string
      removeLabelIds?:
        type: array
        description: A list IDs of labels to remove from this message.
        items:
          type: string
  ModifyThreadRequest:
    type: object
    properties:
      addLabelIds?:
        type: array
        description: A list of IDs of labels to add to this thread.
        items:
          type: string
      removeLabelIds?:
        type: array
        description: A list of IDs of labels to remove from this thread.
        items:
          type: string
  PopSettings:
    type: object
    properties:
      disposition?:
        type: string
        description: The action that will be executed on a message after it has been fetched via POP.
        enum:
        - archive
        - dispositionUnspecified
        - leaveInInbox
        - markRead
        - trash
      accessWindow?:
        type: string
        description: The range of messages which are accessible via POP.
        enum:
        - accessWindowUnspecified
        - allMail
        - disabled
        - fromNowOn
    description: POP settings for an account.
  Profile:
    type: object
    properties:
      emailAddress?:
        type: string
        description: The user's email address.
      threadsTotal?:
        type: integer
        format: int32
        description: The total number of threads in the mailbox.
      historyId?:
        type: integer
        format: int64
        description: The ID of the mailbox's current history record.
      messagesTotal?:
        type: integer
        format: int32
        description: The total number of messages in the mailbox.
    description: Profile for a Gmail user.
  SendAs:
    type: object
    properties:
      isDefault?:
        type: boolean
        description: Whether this address is selected as the default "From:" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is true. Changing this from false to true for an address will result in this field becoming false for the other previous default address.
      signature?:
        type: string
        description: An optional HTML signature that is included in messages composed with this alias in the Gmail web UI.
      verificationStatus?:
        type: string
        description: Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom "from" aliases.
        enum:
        - accepted
        - pending
        - verificationStatusUnspecified
      displayName?:
        type: string
        description: A name that appears in the "From:" header for mail sent using this alias. For custom "from" addresses, when this is empty, Gmail will populate the "From:" header with the name that is used for the primary address associated with the account.
      isPrimary?:
        type: boolean
        description: Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.
      sendAsEmail?:
        type: string
        description: The email address that appears in the "From:" header for mail sent using this alias. This is read-only for all operations except create.
      smtpMsa?: SmtpMsa
      replyToAddress?:
        type: string
        description: An optional email address that is included in a "Reply-To:" header for mail sent using this alias. If this is empty, Gmail will not generate a "Reply-To:" header.
      treatAsAlias?:
        type: boolean
        description: Whether Gmail should treat this address as an alias for the user's primary email address. See  for more details. This setting only applies to custom "from" aliases.
    description: Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom "from" address. Send-as aliases correspond to the "Send Mail As" feature in the web interface. See  for more details.
  SmtpMsa:
    type: object
    properties:
      password?:
        type: string
        description: The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
      port?:
        type: integer
        format: int32
        description: The port of the SMTP service. Required.
      host?:
        type: string
        description: The hostname of the SMTP service. Required.
      securityMode?:
        type: string
        description: The protocol that will be used to secure communication with the SMTP service. Required.
        enum:
        - none
        - securityModeUnspecified
        - ssl
        - starttls
      username?:
        type: string
        description: The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
    description: Configuration for communication with an SMTP service.
  Thread:
    type: object
    properties:
      snippet?:
        type: string
        description: A short part of the message text.
      historyId?:
        type: integer
        format: int64
        description: The ID of the last history record that modified this thread.
      messages?:
        type: array
        description: The list of messages in the thread.
        items: Message
      id?:
        type: string
        description: The unique ID of the thread.
    description: A collection of messages representing a conversation.
  VacationSettings:
    type: object
    properties:
      responseBodyPlainText?:
        type: string
        description: Response body in plain text format.
      responseSubject?:
        type: string
        description: Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.
      enableAutoReply?:
        type: boolean
        description: Flag that controls whether Gmail automatically replies to messages.
      responseBodyHtml?:
        type: string
        description: Response body in HTML format. Gmail will sanitize the HTML before storing it.
      restrictToContacts?:
        type: boolean
        description: Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.
      startTime?:
        type: integer
        format: int64
        description: An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both startTime and endTime are specified, startTime must precede endTime.
      endTime?:
        type: integer
        format: int64
        description: An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both startTime and endTime are specified, startTime must precede endTime.
      restrictToDomain?:
        type: boolean
        description: Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for Google Apps users.
    description: Vacation auto-reply settings for an account. These settings correspond to the "Vacation responder" feature in the web interface. See  for more details.
  WatchRequest:
    type: object
    properties:
      labelIds?:
        type: array
        description: List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.
        items:
          type: string
      labelFilterAction?:
        type: string
        description: Filtering behavior of labelIds list specified.
        enum:
        - exclude
        - include
      topicName?:
        type: string
        description: |-
          A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format).

          Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
    description: Set up or update a new push notification watch on this user's mailbox.
  WatchResponse:
    type: object
    properties:
      historyId?:
        type: integer
        format: int64
        description: The ID of the mailbox's current history record.
      expiration?:
        type: integer
        format: int64
        description: When Gmail will stop sending notifications for mailbox updates (epoch millis). Call watch again before this time to renew the watch.
    description: Push notification watch response.
/{userId}:
  uriParameters:
    userId:
      type: string
      default: me
      description: The user's email address. The special value me can be used to indicate the authenticated user.
  /stop:
    post:
      securedBy:
        oath2:
          scopes:
          - https://mail.google.com/
          - https://www.googleapis.com/auth/gmail.modify
          - https://www.googleapis.com/auth/gmail.readonly
      description: Stop receiving push notifications for the given user mailbox.
      is:
      - hasParameters
  /watch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://mail.google.com/
          - https://www.googleapis.com/auth/gmail.modify
          - https://www.googleapis.com/auth/gmail.readonly
      description: Set up or update a push notification watch on the given user mailbox.
      is:
      - hasParameters
      body:
        application/json: WatchRequest
      responses:
        200:
          body:
            application/json: WatchResponse
  /profile:
    get:
      securedBy:
        oath2:
          scopes:
          - https://mail.google.com/
          - https://www.googleapis.com/auth/gmail.compose
          - https://www.googleapis.com/auth/gmail.modify
          - https://www.googleapis.com/auth/gmail.readonly
      description: Gets the current user's Gmail profile.
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Profile
