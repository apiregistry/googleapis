#%RAML 1.0
title: Google Cloud Resource Manager API
version: v1beta1
baseUri: https://cloudresourcemanager.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/resource-manager
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): cloudresourcemanager:v1beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform.read-only
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Ancestor:
    type: object
    properties:
      resourceId?: ResourceId
    description: Identifying information for a single ancestor of a project.
  Binding:
    type: object
    properties:
      role?:
        type: string
        description: Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required
      members?:
        type: array
        description: 'Specifies the identities requesting access for a Cloud Platform
          resource. `members` can have the following values: * `allUsers`: A special
          identifier that represents anyone who is on the internet; with or without
          a Google account. * `allAuthenticatedUsers`: A special identifier that represents
          anyone who is authenticated with a Google account or a service account.
          * `user:{emailid}`: An email address that represents a specific Google account.
          For example, `alice@gmail.com` or `joe@example.com`. * `serviceAccount:{emailid}`:
          An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`.
          * `group:{emailid}`: An email address that represents a Google group. For
          example, `admins@example.com`. * `domain:{domain}`: A Google Apps domain
          name that represents all the users of that domain. For example, `google.com`
          or `example.com`.'
        items:
          type: string
    description: Associates `members` with a `role`.
  Empty:
    type: object
    description: 'A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request or
      the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty)
      returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
      JSON object `{}`.'
  FolderOperation:
    type: object
    properties:
      destinationParent?:
        type: string
        description: The resource name of the folder or organization we are either creating the folder under or moving the folder to.
      displayName?:
        type: string
        description: The display name of the folder.
      operationType?:
        type: string
        description: The type of this operation.
        enum:
        - OPERATION_TYPE_UNSPECIFIED
        - CREATE
        - MOVE
      sourceParent?:
        type: string
        description: The resource name of the folder's parent. Only applicable when the operation_type is MOVE.
    description: Metadata describing a long running folder operation
  FolderOperationError:
    type: object
    properties:
      errorMessageId?:
        type: string
        description: The type of operation error experienced.
        enum:
        - ERROR_TYPE_UNSPECIFIED
        - FOLDER_HEIGHT_VIOLATION
        - MAX_CHILD_FOLDERS_VIOLATION
        - FOLDER_NAME_UNIQUENESS_VIOLATION
        - RESOURCE_DELETED
        - PARENT_DELETED
        - CYCLE_INTRODUCED_ERROR
        - FOLDER_ALREADY_BEING_MOVED
        - FOLDER_TO_DELETE_NON_EMPTY
    description: A classification of the Folder Operation error.
  GetAncestryRequest:
    type: object
    description: The request sent to the GetAncestry method.
  GetAncestryResponse:
    type: object
    properties:
      ancestor?:
        type: array
        description: Ancestors are ordered from bottom to top of the resource hierarchy. The first ancestor is the project itself, followed by the project's parent, etc.
        items: Ancestor
    description: Response from the GetAncestry method.
  GetIamPolicyRequest:
    type: object
    description: Request message for `GetIamPolicy` method.
  ListOrganizationsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: A pagination token to be used to retrieve the next page of results. If the result is too large to fit within the page size specified in the request, this field will be set with a token that can be used to fetch the next page of results. If this field is empty, it indicates that this response contains the last page of results.
      organizations?:
        type: array
        description: The list of Organizations that matched the list query, possibly paginated.
        items: Organization
    description: The response returned from the `ListOrganizations` method.
  ListProjectsResponse:
    type: object
    properties:
      projects?:
        type: array
        description: The list of Projects that matched the list filter. This list can be paginated.
        items: Project
      nextPageToken?:
        type: string
        description: Pagination token. If the result set is too large to fit in a single response, this token is returned. It encodes the position of the current result cursor. Feeding this value into a new list request with the `page_token` parameter gives the next page of the results. When `next_page_token` is not filled in, there is no next page and the list returned is the last page in the result set. Pagination tokens have a limited lifetime.
    description: A page of the response received from the ListProjects method. A paginated response where more pages are available has `next_page_token` set. This token can be used in a subsequent request to retrieve the next request page.
  Organization:
    type: object
    properties:
      organizationId?:
        type: string
        description: An immutable id for the Organization that is assigned on creation. This should be omitted when creating a new Organization. This field is read-only. This field is deprecated and will be removed in v1. Use name instead.
      owner?: OrganizationOwner
      lifecycleState?:
        type: string
        description: The organization's current lifecycle state. Assigned by the server. @OutputOnly
        enum:
        - LIFECYCLE_STATE_UNSPECIFIED
        - ACTIVE
        - DELETE_REQUESTED
      creationTime?:
        type: string
        description: Timestamp when the Organization was created. Assigned by the server. @OutputOnly
      displayName?:
        type: string
        description: A friendly string to be used to refer to the Organization in the UI. Assigned by the server, set to the firm name of the Google For Work customer that owns this organization. @OutputOnly
      name?:
        type: string
        description: Output Only. The resource name of the organization. This is the organization's relative path in the API. Its format is "organizations/[organization_id]". For example, "organizations/1234".
    description: The root node in the resource hierarchy to which a particular entity's (e.g., company) resources belong.
  OrganizationOwner:
    type: object
    properties:
      directoryCustomerId?:
        type: string
        description: The Google for Work customer id used in the Directory API.
    description: The entity that owns an Organization. The lifetime of the Organization and all of its descendants are bound to the `OrganizationOwner`. If the `OrganizationOwner` is deleted, the Organization and all its descendants will be deleted.
  Policy:
    type: object
    properties:
      bindings?:
        type: array
        description: Associates a list of `members` to a `role`. Multiple `bindings` must not be specified for the same `role`. `bindings` with no members will result in an error.
        items: Binding
      etag?:
        type: string
        description: '`etag` is used for optimistic concurrency control as a way to
          help prevent simultaneous updates of a policy from overwriting each other.
          It is strongly suggested that systems make use of the `etag` in the read-modify-write
          cycle to perform policy updates in order to avoid race conditions: An `etag`
          is returned in the response to `getIamPolicy`, and systems are expected
          to put that etag in the request to `setIamPolicy` to ensure that their change
          will be applied to the same version of the policy. If no `etag` is provided
          in the call to `setIamPolicy`, then the existing policy is overwritten blindly.'
      version?:
        type: integer
        format: int32
        description: Version of the `Policy`. The default version is 0.
    description: 'Defines an Identity and Access Management (IAM) policy. It is used
      to specify access control policies for Cloud Platform resources. A `Policy`
      consists of a list of `bindings`. A `Binding` binds a list of `members` to a
      `role`, where the members can be user accounts, Google groups, Google domains,
      and service accounts. A `role` is a named list of permissions defined by IAM.
      **Example** { "bindings": [ { "role": "roles/owner", "members": [ "user:mike@example.com",
      "group:admins@example.com", "domain:google.com", "serviceAccount:my-other-app@appspot.gserviceaccount.com",
      ] }, { "role": "roles/viewer", "members": ["user:sean@example.com"] } ] } For
      a description of IAM and its features, see the [IAM developer''s guide](https://cloud.google.com/iam).'
  Project:
    type: object
    properties:
      lifecycleState?:
        type: string
        description: The Project lifecycle state. Read-only.
        enum:
        - LIFECYCLE_STATE_UNSPECIFIED
        - ACTIVE
        - DELETE_REQUESTED
        - DELETE_IN_PROGRESS
      parent?: ResourceId
      createTime?:
        type: string
        description: Creation time. Read-only.
      projectNumber?:
        type: integer
        format: int64
        description: 'The number uniquely identifying the project. Example: 415104041262
          Read-only.'
      name?:
        type: string
        description: 'The user-assigned display name of the Project. It must be 4
          to 30 characters. Allowed characters are: lowercase and uppercase letters,
          numbers, hyphen, single-quote, double-quote, space, and exclamation point.
          Example: My Project Read-write.'
      projectId?:
        type: string
        description: 'The unique, user-assigned ID of the Project. It must be 6 to
          30 lowercase letters, digits, or hyphens. It must start with a letter. Trailing
          hyphens are prohibited. Example: tokyo-rain-123 Read-only after creation.'
      labels?:
        type: object
        description: 'The labels associated with this Project. Label keys must be
          between 1 and 63 characters long and must conform to the following regular
          expression: \[a-z\](\[-a-z0-9\]*\[a-z0-9\])?. Label values must be between
          0 and 63 characters long and must conform to the regular expression (\[a-z\](\[-a-z0-9\]*\[a-z0-9\])?)?.
          No more than 256 labels can be associated with a given resource. Clients
          should store labels in a representation such as JSON that does not depend
          on specific characters being disallowed. Example: "environment" : "dev"
          Read-write.'
    description: A Project is a high-level Google Cloud Platform entity. It is a container for ACLs, APIs, AppEngine Apps, VMs, and other Google Cloud Platform resources.
  ProjectCreationStatus:
    type: object
    properties:
      createTime?:
        type: string
        description: Creation time of the project creation workflow.
      ready?:
        type: boolean
        description: True if the project creation process is complete.
      gettable?:
        type: boolean
        description: True if the project can be retrieved using GetProject. No other operations on the project are guaranteed to work until the project creation is complete.
    description: A status object which is used as the `metadata` field for the Operation returned by CreateProject. It provides insight for when significant phases of Project creation have completed.
  ResourceId:
    type: object
    properties:
      id?:
        type: string
        description: Required field for the type-specific id. This should correspond to the id used in the type-specific API's.
      type?:
        type: string
        description: Required field representing the resource type this id is for. At present, the valid types are "project" and "organization".
    description: A container to reference an id for any resource type. A `resource` in Google Cloud Platform is a generic term for something you (a developer) may want to interact with through one of our API's. Some examples are an AppEngine app, a Compute Engine instance, a Cloud SQL database, and so on.
  SetIamPolicyRequest:
    type: object
    properties:
      policy?: Policy
    description: Request message for `SetIamPolicy` method.
  TestIamPermissionsRequest:
    type: object
    properties:
      permissions?:
        type: array
        description: The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        items:
          type: string
    description: Request message for `TestIamPermissions` method.
  TestIamPermissionsResponse:
    type: object
    properties:
      permissions?:
        type: array
        description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
        items:
          type: string
    description: Response message for `TestIamPermissions` method.
  UndeleteProjectRequest:
    type: object
    description: The request sent to the UndeleteProject method.
/v1beta1:
  /projects:
    /{projectId}:getAncestry:
      uriParameters:
        projectId:
          type: string
          description: The Project ID (for example, `my-project-123`). Required.
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
        description: Gets a list of ancestors in the resource hierarchy for the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have read permissions for this Project.
        displayName: Get Ancestry
        is:
        - hasParameters
        body:
          application/json: GetAncestryRequest
        responses:
          200:
            body:
              application/json: GetAncestryResponse
        (commons.Id): cloudresourcemanager.projects.getAncestry
        (commons.LogicalStructure):
        - Projects
    /{resource}:testIamPermissions:
      uriParameters:
        resource:
          type: string
          description: 'REQUIRED: The resource for which the policy detail is being
            requested. `resource` is usually specified as a path. For example, a Project
            resource is specified as `projects/{project}`.'
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
        description: Returns permissions that a caller has on the specified Project.
        displayName: Test Iam Permissions
        is:
        - hasParameters
        body:
          application/json: TestIamPermissionsRequest
        responses:
          200:
            body:
              application/json: TestIamPermissionsResponse
        (commons.Id): cloudresourcemanager.projects.testIamPermissions
        (commons.LogicalStructure):
        - Projects
    /{projectId}:
      uriParameters:
        projectId:
          type: string
          description: The Project ID (for example, `my-project-123`). Required.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
        description: Retrieves the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have read permissions for this Project.
        displayName: Get
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Project
        (commons.Id): cloudresourcemanager.projects.get
        (commons.LogicalStructure):
        - Projects
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Updates the attributes of the Project identified by the specified `project_id` (for example, `my-project-123`). The caller must have modify permissions for this Project.
        displayName: Update
        is:
        - hasParameters
        body:
          application/json: Project
        responses:
          200:
            body:
              application/json: Project
        (commons.Id): cloudresourcemanager.projects.update
        (commons.LogicalStructure):
        - Projects
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: 'Marks the Project identified by the specified `project_id` (for
          example, `my-project-123`) for deletion. This method will only affect the
          Project if the following criteria are met: + The Project does not have a
          billing account associated with it. + The Project has a lifecycle state
          of ACTIVE. This method changes the Project''s lifecycle state from ACTIVE
          to DELETE_REQUESTED. The deletion starts at an unspecified time, at which
          point the project is no longer accessible. Until the deletion completes,
          you can check the lifecycle state checked by retrieving the Project with
          GetProject, and the Project remains visible to ListProjects. However, you
          cannot update the project. After the deletion completes, the Project is
          not retrievable by the GetProject and ListProjects methods. The caller must
          have modify permissions for this Project.'
        displayName: Delete
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): cloudresourcemanager.projects.delete
        (commons.LogicalStructure):
        - Projects
    /{projectId}:undelete:
      uriParameters:
        projectId:
          type: string
          description: The project ID (for example, `foo-bar-123`). Required.
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Restores the Project identified by the specified `project_id` (for example, `my-project-123`). You can only use this method for a Project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the Project cannot be restored. The caller must have modify permissions for this Project.
        displayName: Undelete
        is:
        - hasParameters
        body:
          application/json: UndeleteProjectRequest
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): cloudresourcemanager.projects.undelete
        (commons.LogicalStructure):
        - Projects
    /{resource}:getIamPolicy:
      uriParameters:
        resource:
          type: string
          description: 'REQUIRED: The resource for which the policy is being requested.
            `resource` is usually specified as a path. For example, a Project resource
            is specified as `projects/{project}`.'
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/cloud-platform.read-only
        description: Returns the IAM access control policy for the specified Project. Permission is denied if the policy or the resource does not exist.
        displayName: Get Iam Policy
        is:
        - hasParameters
        body:
          application/json: GetIamPolicyRequest
        responses:
          200:
            body:
              application/json: Policy
        (commons.Id): cloudresourcemanager.projects.getIamPolicy
        (commons.LogicalStructure):
        - Projects
    /{resource}:setIamPolicy:
      uriParameters:
        resource:
          type: string
          description: 'REQUIRED: The resource for which the policy is being specified.
            `resource` is usually specified as a path. For example, a Project resource
            is specified as `projects/{project}`.'
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: 'Sets the IAM access control policy for the specified Project.
          Replaces any existing policy. The following constraints apply when using
          `setIamPolicy()`: + Project does not support `allUsers` and `allAuthenticatedUsers`
          as `members` in a `Binding` of a `Policy`. + The owner role can be granted
          only to `user` and `serviceAccount`. + Service accounts can be made owners
          of a project directly without any restrictions. However, to be added as
          an owner, a user must be invited via Cloud Platform console and must accept
          the invitation. + A user cannot be granted the owner role using `setIamPolicy()`.
          The user must be granted the owner role using the Cloud Platform Console
          and must explicitly accept the invitation. + Invitations to grant the owner
          role cannot be sent using `setIamPolicy()`; they must be sent only using
          the Cloud Platform Console. + Membership changes that leave the project
          without any owners that have accepted the Terms of Service (ToS) will be
          rejected. + There must be at least one owner who has accepted the Terms
          of Service (ToS) agreement in the policy. Calling `setIamPolicy()` to to
          remove the last ToS-accepted owner from the policy will fail. This restriction
          also applies to legacy projects that no longer have owners who have accepted
          the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting
          owner is rectified. + Calling this method requires enabling the App Engine
          Admin API. Note: Removing service accounts from policies or changing their
          roles can render services completely inoperable. It is important to understand
          how the service account is being used before removing or updating its roles.'
        displayName: Set Iam Policy
        is:
        - hasParameters
        body:
          application/json: SetIamPolicyRequest
        responses:
          200:
            body:
              application/json: Policy
        (commons.Id): cloudresourcemanager.projects.setIamPolicy
        (commons.LogicalStructure):
        - Projects
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Creates a Project resource. Initially, the Project resource is owned by its creator exclusively. The creator can later grant permission to others to read or update the Project. Several APIs are activated automatically for the Project, including Google Cloud Storage.
      displayName: Create
      is:
      - hasParameters
      queryParameters:
        useLegacyStack?:
          type: boolean
          description: A safety hatch to opt out of the new reliable project creation process.
      body:
        application/json: Project
      responses:
        200:
          body:
            application/json: Project
      (commons.Id): cloudresourcemanager.projects.create
      (commons.LogicalStructure):
      - Projects
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
      description: Lists Projects that are visible to the user and satisfy the specified filter. This method returns Projects in an unspecified order. New Projects do not necessarily appear at the end of the list.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        filter?:
          type: string
          description: 'An expression for filtering the results of the request. Filter
            rules are case insensitive. The fields eligible for filtering are: + `name`
            + `id` + labels.key where *key* is the name of a label Some examples of
            using labels as filters: |Filter|Description| |------|-----------| |name:*|The
            project has a name.| |name:Howl|The project''s name is `Howl` or `howl`.|
            |name:HOWL|Equivalent to above.| |NAME:howl|Equivalent to above.| |labels.color:*|The
            project has the label `color`.| |labels.color:red|The project''s label
            `color` has the value `red`.| |labels.color:red label.size:big|The project''s
            label `color` has the value `red` and its label `size` has the value `big`.
            Optional.'
        pageSize?:
          type: integer
          format: int32
          description: The maximum number of Projects to return in the response. The server can return fewer Projects than requested. If unspecified, server picks an appropriate default. Optional.
        pageToken?:
          type: string
          description: A pagination token returned from a previous call to ListProjects that indicates from where listing should continue. Optional.
      responses:
        200:
          body:
            application/json: ListProjectsResponse
      (commons.Id): cloudresourcemanager.projects.list
      (commons.LogicalStructure):
      - Projects
  /{resource}:testIamPermissions:
    uriParameters:
      resource:
        type: string
        pattern: ^organizations/[^/]*$
        description: 'REQUIRED: The resource for which the policy detail is being
          requested. `resource` is usually specified as a path. For example, a Project
          resource is specified as `projects/{project}`.'
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
      description: Returns permissions that a caller has on the specified Organization. The `resource` field should be the organization's resource name, e.g. "organizations/123".
      displayName: Test Iam Permissions
      is:
      - hasParameters
      body:
        application/json: TestIamPermissionsRequest
      responses:
        200:
          body:
            application/json: TestIamPermissionsResponse
      (commons.Id): cloudresourcemanager.organizations.testIamPermissions
      (commons.LogicalStructure):
      - Organizations
  /{name}:
    uriParameters:
      name:
        type: string
        pattern: ^organizations/[^/]*$
        description: The resource name of the Organization to fetch, e.g. "organizations/1234".
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
      description: Fetches an Organization resource identified by the specified resource name.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        organizationId?:
          type: string
          description: The id of the Organization resource to fetch. This field is deprecated and will be removed in v1. Use name instead.
      responses:
        200:
          body:
            application/json: Organization
      (commons.Id): cloudresourcemanager.organizations.get
      (commons.LogicalStructure):
      - Organizations
    put:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Updates an Organization resource identified by the specified resource name.
      displayName: Update
      is:
      - hasParameters
      body:
        application/json: Organization
      responses:
        200:
          body:
            application/json: Organization
      (commons.Id): cloudresourcemanager.organizations.update
      (commons.LogicalStructure):
      - Organizations
  /{resource}:setIamPolicy:
    uriParameters:
      resource:
        type: string
        pattern: ^organizations/[^/]*$
        description: 'REQUIRED: The resource for which the policy is being specified.
          `resource` is usually specified as a path. For example, a Project resource
          is specified as `projects/{project}`.'
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Sets the access control policy on an Organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, e.g. "organizations/123".
      displayName: Set Iam Policy
      is:
      - hasParameters
      body:
        application/json: SetIamPolicyRequest
      responses:
        200:
          body:
            application/json: Policy
      (commons.Id): cloudresourcemanager.organizations.setIamPolicy
      (commons.LogicalStructure):
      - Organizations
  /{resource}:getIamPolicy:
    uriParameters:
      resource:
        type: string
        pattern: ^organizations/[^/]*$
        description: 'REQUIRED: The resource for which the policy is being requested.
          `resource` is usually specified as a path. For example, a Project resource
          is specified as `projects/{project}`.'
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
      description: Gets the access control policy for an Organization resource. May be empty if no such policy or resource exists. The `resource` field should be the organization's resource name, e.g. "organizations/123".
      displayName: Get Iam Policy
      is:
      - hasParameters
      body:
        application/json: GetIamPolicyRequest
      responses:
        200:
          body:
            application/json: Policy
      (commons.Id): cloudresourcemanager.organizations.getIamPolicy
      (commons.LogicalStructure):
      - Organizations
  /organizations:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/cloud-platform.read-only
      description: Lists Organization resources that are visible to the user and satisfy the specified filter. This method returns Organizations in an unspecified order. New Organizations do not necessarily appear at the end of the list.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        filter?:
          type: string
          description: 'An optional query string used to filter the Organizations
            to return in the response. Filter rules are case-insensitive. Organizations
            may be filtered by `owner.directoryCustomerId` or by `domain`, where the
            domain is a Google for Work domain, for example: |Filter|Description|
            |------|-----------| |owner.directorycustomerid:123456789|Organizations
            with `owner.directory_customer_id` equal to `123456789`.| |domain:google.com|Organizations
            corresponding to the domain `google.com`.| This field is optional.'
        pageSize?:
          type: integer
          format: int32
          description: The maximum number of Organizations to return in the response. This field is optional.
        pageToken?:
          type: string
          description: A pagination token returned from a previous call to `ListOrganizations` that indicates from where listing should continue. This field is optional.
      responses:
        200:
          body:
            application/json: ListOrganizationsResponse
      (commons.Id): cloudresourcemanager.organizations.list
      (commons.LogicalStructure):
      - Organizations
