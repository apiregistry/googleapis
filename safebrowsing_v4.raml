#%RAML 1.0
title: Safe Browsing APIs
version: v4
baseUri: https://safebrowsing.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/safe-browsing/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): safebrowsing:v4
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
types:
  Checksum:
    type: object
    properties:
      sha256?:
        type: string
        description: The SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database.
    description: The expected state of a client's local database.
  ClientInfo:
    type: object
    properties:
      clientId?:
        type: string
        description: A client ID that (hopefully) uniquely identifies the client implementation of the Safe Browsing API.
      clientVersion?:
        type: string
        description: The version of the client implementation.
    description: The client metadata associated with Safe Browsing API requests.
  Constraints:
    type: object
    properties:
      supportedCompressions?:
        type: array
        description: The compression types supported by the client.
        items:
          type: string
          enum:
          - COMPRESSION_TYPE_UNSPECIFIED
          - RAW
          - RICE
      maxDatabaseEntries?:
        type: integer
        format: int32
        description: Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
      region?:
        type: string
        description: Requests the list for a specific geographic location. If not set the server may pick that value based on the user's IP address. Expects ISO 3166-1 alpha-2 format.
      maxUpdateEntries?:
        type: integer
        format: int32
        description: The maximum size in number of entries. The update will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no update size limit is set.
    description: The constraints for this update.
  FetchThreatListUpdatesRequest:
    type: object
    properties:
      listUpdateRequests?:
        type: array
        description: The requested threat list updates.
        items: ListUpdateRequest
      client?: ClientInfo
    description: 'Describes a Safe Browsing API update request. Clients can request
      updates for multiple lists in a single request. NOTE: Field index 2 is unused.
      NEXT: 4'
  FetchThreatListUpdatesResponse:
    type: object
    properties:
      minimumWaitDuration?:
        type: string
        description: The minimum duration the client must wait before issuing any update request. If this field is not set clients may update as soon as they want.
      listUpdateResponses?:
        type: array
        description: The list updates requested by the clients.
        items: ListUpdateResponse
  FindFullHashesRequest:
    type: object
    properties:
      threatInfo?: ThreatInfo
      client?: ClientInfo
      clientStates?:
        type: array
        description: The current client states for each of the client's local threat lists.
        items:
          type: string
    description: Request to return full hashes matched by the provided hash prefixes.
  FindFullHashesResponse:
    type: object
    properties:
      negativeCacheDuration?:
        type: string
        description: For requested entities that did not match the threat list, how long to cache the response.
      minimumWaitDuration?:
        type: string
        description: The minimum duration the client must wait before issuing any find hashes request. If this field is not set, clients can issue a request as soon as they want.
      matches?:
        type: array
        description: The full hashes that matched the requested prefixes.
        items: ThreatMatch
  FindThreatMatchesRequest:
    type: object
    properties:
      threatInfo?: ThreatInfo
      client?: ClientInfo
    description: Request to check entries against lists.
  FindThreatMatchesResponse:
    type: object
    properties:
      matches?:
        type: array
        description: The threat list matches.
        items: ThreatMatch
  ListThreatListsResponse:
    type: object
    properties:
      threatLists?:
        type: array
        description: The lists available for download by the client.
        items: ThreatListDescriptor
  ListUpdateRequest:
    type: object
    properties:
      threatEntryType?:
        type: string
        description: The types of entries present in the list.
        enum:
        - THREAT_ENTRY_TYPE_UNSPECIFIED
        - URL
        - EXECUTABLE
        - IP_RANGE
      threatType?:
        type: string
        description: The type of threat posed by entries present in the list.
        enum:
        - THREAT_TYPE_UNSPECIFIED
        - MALWARE
        - SOCIAL_ENGINEERING
        - UNWANTED_SOFTWARE
        - POTENTIALLY_HARMFUL_APPLICATION
      platformType?:
        type: string
        description: The type of platform at risk by entries present in the list.
        enum:
        - PLATFORM_TYPE_UNSPECIFIED
        - WINDOWS
        - LINUX
        - ANDROID
        - OSX
        - IOS
        - ANY_PLATFORM
        - ALL_PLATFORMS
        - CHROME
      state?:
        type: string
        description: The current state of the client for the requested list (the encrypted client state that was received from the last successful list update).
      constraints?: Constraints
    description: A single list update request.
  ListUpdateResponse:
    type: object
    properties:
      threatEntryType?:
        type: string
        description: The format of the threats.
        enum:
        - THREAT_ENTRY_TYPE_UNSPECIFIED
        - URL
        - EXECUTABLE
        - IP_RANGE
      responseType?:
        type: string
        description: The type of response. This may indicate that an action is required by the client when the response is received.
        enum:
        - RESPONSE_TYPE_UNSPECIFIED
        - PARTIAL_UPDATE
        - FULL_UPDATE
      threatType?:
        type: string
        description: The threat type for which data is returned.
        enum:
        - THREAT_TYPE_UNSPECIFIED
        - MALWARE
        - SOCIAL_ENGINEERING
        - UNWANTED_SOFTWARE
        - POTENTIALLY_HARMFUL_APPLICATION
      additions?:
        type: array
        description: A set of entries to add to a local threat type's list. Repeated to allow for a combination of compressed and raw data to be sent in a single response.
        items: ThreatEntrySet
      platformType?:
        type: string
        description: The platform type for which data is returned.
        enum:
        - PLATFORM_TYPE_UNSPECIFIED
        - WINDOWS
        - LINUX
        - ANDROID
        - OSX
        - IOS
        - ANY_PLATFORM
        - ALL_PLATFORMS
        - CHROME
      checksum?: Checksum
      removals?:
        type: array
        description: A set of entries to remove from a local threat type's list. Repeated for the same reason as above.
        items: ThreatEntrySet
      newClientState?:
        type: string
        description: The new client state, in encrypted format. Opaque to clients.
    description: An update to an individual list.
  MetadataEntry:
    type: object
    properties:
      value?:
        type: string
        description: The metadata entry value.
      key?:
        type: string
        description: The metadata entry key.
    description: A single metadata entry.
  RawHashes:
    type: object
    properties:
      rawHashes?:
        type: string
        description: The hashes, all concatenated into one long string. Each hash has a prefix size of |prefix_size| above. Hashes are sorted in lexicographic order.
      prefixSize?:
        type: integer
        format: int32
        description: The number of bytes for each prefix encoded below. This field can be anywhere from 4 (shortest prefix) to 32 (full SHA256 hash).
    description: The uncompressed threat entries in hash format of a particular prefix length. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URL. Used for sending ThreatEntrySet to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.
  RawIndices:
    type: object
    properties:
      indices?:
        type: array
        description: The indices to remove from a lexicographically-sorted local list.
        items:
          type: integer
          format: int32
    description: A set of raw indices to remove from a local list.
  RiceDeltaEncoding:
    type: object
    properties:
      riceParameter?:
        type: integer
        format: int32
        description: The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.
      firstValue?:
        type: integer
        format: int64
        description: The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value.
      encodedData?:
        type: string
        description: The encoded deltas that are encoded using the Golomb-Rice coder.
      numEntries?:
        type: integer
        format: int32
        description: The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`.
    description: The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.
  ThreatEntry:
    type: object
    properties:
      digest?:
        type: string
        description: The digest of an executable in SHA256 format. The API supports both binary and hex digests.
      hash?:
        type: string
        description: A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. This field is in binary format.
      url?:
        type: string
        description: A URL.
    description: An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set.
  ThreatEntryMetadata:
    type: object
    properties:
      entries?:
        type: array
        description: The metadata entries.
        items: MetadataEntry
    description: The metadata associated with a specific threat entry. The client is expected to know the metadata key/value pairs associated with each threat type.
  ThreatEntrySet:
    type: object
    properties:
      rawIndices?: RawIndices
      compressionType?:
        type: string
        description: The compression type for the entries in this set.
        enum:
        - COMPRESSION_TYPE_UNSPECIFIED
        - RAW
        - RICE
      riceHashes?: RiceDeltaEncoding
      riceIndices?: RiceDeltaEncoding
      rawHashes?: RawHashes
    description: A set of threats that should be added or removed from a client's local database.
  ThreatInfo:
    type: object
    properties:
      threatTypes?:
        type: array
        description: The threat types to be checked.
        items:
          type: string
          enum:
          - THREAT_TYPE_UNSPECIFIED
          - MALWARE
          - SOCIAL_ENGINEERING
          - UNWANTED_SOFTWARE
          - POTENTIALLY_HARMFUL_APPLICATION
      threatEntryTypes?:
        type: array
        description: The entry types to be checked.
        items:
          type: string
          enum:
          - THREAT_ENTRY_TYPE_UNSPECIFIED
          - URL
          - EXECUTABLE
          - IP_RANGE
      threatEntries?:
        type: array
        description: The threat entries to be checked.
        items: ThreatEntry
      platformTypes?:
        type: array
        description: The platform types to be checked.
        items:
          type: string
          enum:
          - PLATFORM_TYPE_UNSPECIFIED
          - WINDOWS
          - LINUX
          - ANDROID
          - OSX
          - IOS
          - ANY_PLATFORM
          - ALL_PLATFORMS
          - CHROME
    description: The information regarding one or more threats that a client submits when checking for matches in threat lists.
  ThreatListDescriptor:
    type: object
    properties:
      threatEntryType?:
        type: string
        description: The entry types contained in the list.
        enum:
        - THREAT_ENTRY_TYPE_UNSPECIFIED
        - URL
        - EXECUTABLE
        - IP_RANGE
      threatType?:
        type: string
        description: The threat type posed by the list's entries.
        enum:
        - THREAT_TYPE_UNSPECIFIED
        - MALWARE
        - SOCIAL_ENGINEERING
        - UNWANTED_SOFTWARE
        - POTENTIALLY_HARMFUL_APPLICATION
      platformType?:
        type: string
        description: The platform type targeted by the list's entries.
        enum:
        - PLATFORM_TYPE_UNSPECIFIED
        - WINDOWS
        - LINUX
        - ANDROID
        - OSX
        - IOS
        - ANY_PLATFORM
        - ALL_PLATFORMS
        - CHROME
    description: 'Describes an individual threat list. A list is defined by three
      parameters: the type of threat posed, the type of platform targeted by the threat,
      and the type of entries in the list.'
  ThreatMatch:
    type: object
    properties:
      threatEntryMetadata?: ThreatEntryMetadata
      threatEntryType?:
        type: string
        description: The threat entry type matching this threat.
        enum:
        - THREAT_ENTRY_TYPE_UNSPECIFIED
        - URL
        - EXECUTABLE
        - IP_RANGE
      threatType?:
        type: string
        description: The threat type matching this threat.
        enum:
        - THREAT_TYPE_UNSPECIFIED
        - MALWARE
        - SOCIAL_ENGINEERING
        - UNWANTED_SOFTWARE
        - POTENTIALLY_HARMFUL_APPLICATION
      cacheDuration?:
        type: string
        description: The cache lifetime for the returned match. Clients must not cache this response for more than this duration to avoid false positives.
      platformType?:
        type: string
        description: The platform type matching this threat.
        enum:
        - PLATFORM_TYPE_UNSPECIFIED
        - WINDOWS
        - LINUX
        - ANDROID
        - OSX
        - IOS
        - ANY_PLATFORM
        - ALL_PLATFORMS
        - CHROME
      threat?: ThreatEntry
    description: A match when checking a threat entry in the Safe Browsing threat lists.
/v4:
  /threatMatches:find:
    post:
      description: Finds the threat entries that match the Safe Browsing lists.
      displayName: find
      is:
      - hasParameters
      body:
        application/json: FindThreatMatchesRequest
      responses:
        200:
          body:
            application/json: FindThreatMatchesResponse
      (commons.Id): safebrowsing.threatMatches.find
      (commons.LogicalStucture):
      - Threat Matches
  /fullHashes:find:
    post:
      description: Finds the full hashes that match the requested hash prefixes.
      displayName: find
      is:
      - hasParameters
      body:
        application/json: FindFullHashesRequest
      responses:
        200:
          body:
            application/json: FindFullHashesResponse
      (commons.Id): safebrowsing.fullHashes.find
      (commons.LogicalStucture):
      - Full Hashes
  /threatListUpdates:fetch:
    post:
      description: Fetches the most recent threat list updates. A client can request updates for multiple lists at once.
      displayName: fetch
      is:
      - hasParameters
      body:
        application/json: FetchThreatListUpdatesRequest
      responses:
        200:
          body:
            application/json: FetchThreatListUpdatesResponse
      (commons.Id): safebrowsing.threatListUpdates.fetch
      (commons.LogicalStucture):
      - Threat List Updates
  /threatLists:
    get:
      description: Lists the Safe Browsing threat lists available for download.
      displayName: list
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: ListThreatListsResponse
      (commons.Id): safebrowsing.threatLists.list
      (commons.LogicalStucture):
      - Threat Lists
