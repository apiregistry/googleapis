#%RAML 1.0
title: Google Storage Transfer API
version: v1
baseUri: https://storagetransfer.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/storage/transfer
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): storagetransfer:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AwsAccessKey:
    type: object
    properties:
      accessKeyId?:
        type: string
        description: AWS access key ID. Required.
      secretAccessKey?:
        type: string
        description: AWS secret access key. This field is not returned in RPC responses. Required.
    description: AWS access key (see [AWS Security Credentials](http://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html)).
  AwsS3Data:
    type: object
    properties:
      bucketName?:
        type: string
        description: S3 Bucket name (see [Creating a bucket](http://docs.aws.amazon.com/AmazonS3/latest/dev/create-bucket-get-location-example.html)). Required.
      awsAccessKey?: AwsAccessKey
    description: An AwsS3Data can be a data source, but not a data sink. In an AwsS3Data, an object's name is the S3 object's key name.
  Date:
    type: object
    properties:
      month?:
        type: integer
        format: int32
        description: Month of year of date. Must be from 1 to 12.
      year?:
        type: integer
        format: int32
        description: Year of date. Must be from 1 to 9,999, or 0 if specifying a date without a year.
      day?:
        type: integer
        format: int32
        description: Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year/month where the day is not sigificant.
    description: Represents a whole calendar date, e.g. date of birth. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. The day may be 0 to represent a year and month where the day is not significant, e.g. credit card expiration date. The year may be 0 to represent a month and day independent of year, e.g. anniversary date. Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and `google.protobuf.Timestamp`.
  Empty:
    type: object
    description: 'A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request or
      the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty)
      returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty
      JSON object `{}`.'
  ErrorLogEntry:
    type: object
    properties:
      url?:
        type: string
        description: A URL that refers to the target (a data source, a data sink, or an object) with which the error is associated. Required.
      errorDetails?:
        type: array
        description: A list of messages that carry the error details.
        items:
          type: string
    description: An entry describing an error that has occurred.
  ErrorSummary:
    type: object
    properties:
      errorCode?:
        type: string
        description: Required.
        enum:
        - OK
        - CANCELLED
        - UNKNOWN
        - INVALID_ARGUMENT
        - DEADLINE_EXCEEDED
        - NOT_FOUND
        - ALREADY_EXISTS
        - PERMISSION_DENIED
        - UNAUTHENTICATED
        - RESOURCE_EXHAUSTED
        - FAILED_PRECONDITION
        - ABORTED
        - OUT_OF_RANGE
        - UNIMPLEMENTED
        - INTERNAL
        - UNAVAILABLE
        - DATA_LOSS
      errorLogEntries?:
        type: array
        description: Error samples.
        items: ErrorLogEntry
      errorCount?:
        type: integer
        format: int64
        description: Count of this type of error. Required.
    description: A summary of errors by error code, plus a count and sample error log entries.
  GcsData:
    type: object
    properties:
      bucketName?:
        type: string
        description: Google Cloud Storage bucket name (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Required.
    description: In a GcsData, an object's name is the Google Cloud Storage object's name and its `lastModificationTime` refers to the object's updated time, which changes when the content or the metadata of the object is updated.
  GoogleServiceAccount:
    type: object
    properties:
      accountEmail?:
        type: string
        description: Required.
    description: Google service account
  HttpData:
    type: object
    properties:
      listUrl?:
        type: string
        description: The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported. Required.
    description: 'An HttpData specifies a list of objects on the web to be transferred
      over HTTP. The information of the objects to be transferred is contained in
      a file referenced by a URL. The first line in the file must be "TsvHttpData-1.0",
      which specifies the format of the file. Subsequent lines specify the information
      of the list of objects, one object per list entry. Each entry has the following
      tab-delimited fields: * HTTP URL * Length * MD5 - This field is a base64-encoded
      MD5 hash of the object An HTTP URL that points to the object to be transferred.
      It must be a valid URL with URL scheme HTTP or HTTPS. When an object with URL
      `http(s)://hostname:port/` is transferred to the data sink, the name of the
      object at the data sink is `/`. Length and MD5 provide the size and the base64-encoded
      MD5 hash of the object. If Length does not match the actual length of the object
      fetched, the object will not be transferred. If MD5 does not match the MD5 computed
      from the transferred bytes, the object transfer will fail. `lastModificationTime`
      is not available in HttpData objects. The objects that the URL list points to
      must allow public access. Storage Transfer Service obeys `robots.txt` rules
      and requires the HTTP server to support Range requests and to return a Content-Length
      header in each response.'
  ListOperationsResponse:
    type: object
    properties:
      operations?:
        type: array
        description: A list of operations that matches the specified filter in the request.
        items: Operation
      nextPageToken?:
        type: string
        description: The standard List next-page token.
    description: The response message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].
  ListTransferJobsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: The list next page token.
      transferJobs?:
        type: array
        description: A list of transfer jobs.
        items: TransferJob
    description: Response from ListTransferJobs.
  ObjectConditions:
    type: object
    properties:
      minTimeElapsedSinceLastModification?:
        type: string
        description: If unspecified, `minTimeElapsedSinceLastModification` takes a zero value and `maxTimeElapsedSinceLastModification` takes the maximum possible value of Duration. Objects that satisfy the object conditions must either have a `lastModificationTime` greater or equal to `NOW` - `maxTimeElapsedSinceLastModification` and less than `NOW` - `minTimeElapsedSinceLastModification`, or not have a `lastModificationTime`.
      includePrefixes?:
        type: array
        description: 'If `includePrefixes` is specified, objects that satisfy the
          object conditions must have names that start with one of the `includePrefixes`
          and that do not start with any of the `excludePrefixes`. If `includePrefixes`
          is not specified, all objects except those that have names starting with
          one of the `excludePrefixes` must satisfy the object conditions. Requirements:
          * Each include-prefix and exclude-prefix can contain any sequence of Unicode
          characters, of max length 1024 bytes when UTF8-encoded, and must not contain
          Carriage Return or Line Feed characters. Wildcard matching and regular expression
          matching are not supported. * None of the include-prefix or the exclude-prefix
          values can be empty, if specified. * Each include-prefix must include a
          distinct portion of the object namespace, i.e., no include-prefix may be
          a prefix of another include-prefix. * Each exclude-prefix must exclude a
          distinct portion of the object namespace, i.e., no exclude-prefix may be
          a prefix of another exclude-prefix. * If `includePrefixes` is specified,
          then each exclude-prefix must start with the value of a path explicitly
          included by `includePrefixes`. The max size of `includePrefixes` is 20.'
        items:
          type: string
      excludePrefixes?:
        type: array
        description: '`excludePrefixes` must follow the requirements described for
          `includePrefixes`. The max size of `excludePrefixes` is 20.'
        items:
          type: string
      maxTimeElapsedSinceLastModification?:
        type: string
        description: '`maxTimeElapsedSinceLastModification` is the complement to `minTimeElapsedSinceLastModification`.'
    description: Conditions that determine which objects will be transferred.
  Operation:
    type: object
    properties:
      metadata?:
        type: object
        description: Represents the transfer operation object.
      response?:
        type: object
        description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
      name?:
        type: string
        description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping above, the `name` should have the format of `operations/some/unique/name`.
      error?: Status
      done?:
        type: boolean
        description: If the value is `false`, it means the operation is still in progress. If true, the operation is completed and the `result` is available.
    description: This resource represents a long-running operation that is the result of a network API call.
  PauseTransferOperationRequest:
    type: object
    description: Request passed to PauseTransferOperation.
  ResumeTransferOperationRequest:
    type: object
    description: Request passed to ResumeTransferOperation.
  Schedule:
    type: object
    properties:
      scheduleEndDate?: Date
      scheduleStartDate?: Date
      startTimeOfDay?: TimeOfDay
    description: Transfers can be scheduled to recur or to run just once.
  Status:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
      details?:
        type: array
        description: A list of messages that carry the error details. There will be a common set of message types for APIs to use.
        items:
          type: object
      message?:
        type: string
        description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
    description: 'The `Status` type defines a logical error model that is suitable
      for different programming environments, including REST APIs and RPC APIs. It
      is used by [gRPC](https://github.com/grpc). The error model is designed to be:
      - Simple to use and understand for most users - Flexible enough to meet unexpected
      needs # Overview The `Status` message contains three pieces of data: error code,
      error message, and error details. The error code should be an enum value of
      [google.rpc.Code][google.rpc.Code], but it may accept additional error codes
      if needed. The error message should be a developer-facing English message that
      helps developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or localize
      it in the client. The optional error details may contain arbitrary information
      about the error. There is a predefined set of error detail types in the package
      `google.rpc` which can be used for common error conditions. # Language mapping
      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is exposed
      in different client libraries and different wire protocols, it can be mapped
      differently. For example, it will likely be mapped to some exceptions in Java,
      but more likely mapped to some error codes in C. # Other uses The error model
      and the `Status` message can be used in a variety of environments, either with
      or without APIs, to provide a consistent developer experience across different
      environments. Example uses of this error model include: - Partial errors. If
      a service needs to return partial errors to the client, it may embed the `Status`
      in the normal response to indicate the partial errors. - Workflow errors. A
      typical workflow has multiple steps. Each step may have a `Status` message for
      error reporting purpose. - Batch operations. If a client uses batch request
      and batch response, the `Status` message should be used directly inside batch
      response, one for each error sub-response. - Asynchronous operations. If an
      API call embeds asynchronous operation results in its response, the status of
      those operations should be represented directly using the `Status` message.
      - Logging. If some API errors are stored in logs, the message `Status` could
      be used directly after any stripping needed for security/privacy reasons.'
  TimeOfDay:
    type: object
    properties:
      hours?:
        type: integer
        format: int32
        description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
      seconds?:
        type: integer
        format: int32
        description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
      nanos?:
        type: integer
        format: int32
        description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
      minutes?:
        type: integer
        format: int32
        description: Minutes of hour of day. Must be from 0 to 59.
    description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may chose to allow leap seconds. Related types are [google.type.Date][google.type.Date] and `google.protobuf.Timestamp`.
  TransferCounters:
    type: object
    properties:
      objectsFoundFromSource?:
        type: integer
        format: int64
        description: Objects found in the data source that are scheduled to be transferred, which will be copied, excluded based on conditions, or skipped due to failures.
      bytesCopiedToSink?:
        type: integer
        format: int64
        description: Bytes that are copied to the data sink.
      objectsDeletedFromSource?:
        type: integer
        format: int64
        description: Objects that are deleted from the data source.
      objectsFoundOnlyFromSink?:
        type: integer
        format: int64
        description: Objects found only in the data sink that are scheduled to be deleted.
      objectsCopiedToSink?:
        type: integer
        format: int64
        description: Objects that are copied to the data sink.
      bytesDeletedFromSink?:
        type: integer
        format: int64
        description: Bytes that are deleted from the data sink.
      objectsDeletedFromSink?:
        type: integer
        format: int64
        description: Objects that are deleted from the data sink.
      bytesFromSourceFailed?:
        type: integer
        format: int64
        description: Bytes in the data source that failed during the transfer.
      bytesFromSourceSkippedBySync?:
        type: integer
        format: int64
        description: Bytes in the data source that are not transferred because they already exist in the data sink.
      bytesFoundFromSource?:
        type: integer
        format: int64
        description: Bytes found in the data source that are scheduled to be transferred, which will be copied, excluded based on conditions, or skipped due to failures.
      bytesFailedToDeleteFromSink?:
        type: integer
        format: int64
        description: Bytes that failed to be deleted from the data sink.
      bytesDeletedFromSource?:
        type: integer
        format: int64
        description: Bytes that are deleted from the data source.
      objectsFromSourceFailed?:
        type: integer
        format: int64
        description: Objects in the data source that failed during the transfer.
      bytesFoundOnlyFromSink?:
        type: integer
        format: int64
        description: Bytes found only in the data sink that are scheduled to be deleted.
      objectsFromSourceSkippedBySync?:
        type: integer
        format: int64
        description: Objects in the data source that are not transferred because they already exist in the data sink.
      objectsFailedToDeleteFromSink?:
        type: integer
        format: int64
        description: Objects that failed to be deleted from the data sink.
    description: A collection of counters that report the progress of a transfer operation.
  TransferJob:
    type: object
    properties:
      schedule?: Schedule
      creationTime?:
        type: string
        description: This field cannot be changed by user requests.
      lastModificationTime?:
        type: string
        description: This field cannot be changed by user requests.
      name?:
        type: string
        description: A globally unique name assigned by Storage Transfer Service when the job is created. This field should be left empty in requests to create a new transfer job; otherwise, the requests result in an `INVALID_ARGUMENT` error.
      description?:
        type: string
        description: A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.
      transferSpec?: TransferSpec
      deletionTime?:
        type: string
        description: This field cannot be changed by user requests.
      projectId?:
        type: string
        description: The ID of the Google Developers Console project that owns the job. Required.
      status?:
        type: string
        description: 'Status of the job. This value MUST be specified for `CreateTransferJobRequests`.
          NOTE: The effect of the new job status takes place during a subsequent job
          run. For example, if you change the job status from `ENABLED` to `DISABLED`,
          and an operation spawned by the transfer is running, the status change would
          not affect the current operation.'
        enum:
        - STATUS_UNSPECIFIED
        - ENABLED
        - DISABLED
        - DELETED
    description: This resource represents the configuration of a transfer job that runs periodically.
  TransferOperation:
    type: object
    properties:
      counters?: TransferCounters
      name?:
        type: string
        description: A globally unique ID assigned by the system.
      errorBreakdowns?:
        type: array
        description: Summarizes errors encountered with sample error log entries.
        items: ErrorSummary
      transferSpec?: TransferSpec
      startTime?:
        type: string
        description: Start time of this transfer execution.
      endTime?:
        type: string
        description: End time of this transfer execution.
      projectId?:
        type: string
        description: The ID of the Google Developers Console project that owns the operation. Required.
      transferJobName?:
        type: string
        description: The name of the transfer job that triggers this transfer operation.
      status?:
        type: string
        description: Status of the transfer operation.
        enum:
        - STATUS_UNSPECIFIED
        - IN_PROGRESS
        - PAUSED
        - SUCCESS
        - FAILED
        - ABORTED
    description: A description of the execution of a transfer.
  TransferOptions:
    type: object
    properties:
      deleteObjectsUniqueInSink?:
        type: boolean
        description: Whether objects that exist only in the sink should be deleted.
      overwriteObjectsAlreadyExistingInSink?:
        type: boolean
        description: Whether overwriting objects that already exist in the sink is allowed.
      deleteObjectsFromSourceAfterTransfer?:
        type: boolean
        description: Whether objects should be deleted from the source after they are transferred to the sink.
    description: TransferOptions uses three boolean parameters to define the actions to be performed on objects in a transfer.
  TransferSpec:
    type: object
    properties:
      gcsDataSink?: GcsData
      awsS3DataSource?: AwsS3Data
      objectConditions?: ObjectConditions
      gcsDataSource?: GcsData
      httpDataSource?: HttpData
      transferOptions?: TransferOptions
    description: Configuration for running a transfer.
  UpdateTransferJobRequest:
    type: object
    properties:
      transferJob?: TransferJob
      projectId?:
        type: string
        description: The ID of the Google Developers Console project that owns the job. Required.
      updateTransferJobFieldMask?:
        type: string
        description: 'The field mask of the fields in `transferJob` that are to be
          updated in this request. Fields in `transferJob` that can be updated are:
          `description`, `transferSpec`, and `status`. To update the `transferSpec`
          of the job, a complete transfer specification has to be provided. An incomplete
          specification which misses any required fields will be rejected with the
          error `INVALID_ARGUMENT`.'
    description: Request passed to UpdateTransferJob.
/v1:
  /{name}:resume:
    uriParameters:
      name:
        type: string
        pattern: ^transferOperations/.*$
        description: The name of the transfer operation. Required.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Resumes a transfer operation that is paused.
      displayName: Resume
      is:
      - hasParameters
      body:
        application/json: ResumeTransferOperationRequest
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): storagetransfer.transferOperations.resume
      (commons.LogicalStructure):
      - Transfer Operations
  /{name}:cancel:
    uriParameters:
      name:
        type: string
        pattern: ^transferOperations/.*$
        description: The name of the operation resource to be cancelled.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Cancels a transfer. Use the get method to check whether the cancellation succeeded or whether the operation completed despite cancellation.
      displayName: Cancel
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): storagetransfer.transferOperations.cancel
      (commons.LogicalStructure):
      - Transfer Operations
  /{name}:
    uriParameters:
      name:
        type: string
        pattern: ^transferOperations/.*$
        description: The name of the operation resource.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: 'Lists operations that match the specified filter in the request.
        If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE:
        the `name` binding below allows API services to override the binding to use
        different resource name schemes, such as `users/*/operations`.'
      displayName: List
      is:
      - hasParameters
      - hasParameters
      queryParameters:
        filter?:
          type: string
          description: The standard list filter.
        pageSize?:
          type: integer
          format: int32
          description: The standard list page size.
        pageToken?:
          type: string
          description: The standard list page token.
      responses:
        200:
          body:
            application/json: ListOperationsResponse
      (commons.Id): storagetransfer.transferOperations.list
      (commons.LogicalStructure):
      - Transfer Operations
    delete:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: This method is not supported and the server returns `UNIMPLEMENTED`.
      displayName: Delete
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): storagetransfer.transferOperations.delete
      (commons.LogicalStructure):
      - Transfer Operations
  /{name}:pause:
    uriParameters:
      name:
        type: string
        pattern: ^transferOperations/.*$
        description: The name of the transfer operation. Required.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Pauses a transfer operation.
      displayName: Pause
      is:
      - hasParameters
      body:
        application/json: PauseTransferOperationRequest
      responses:
        200:
          body:
            application/json: Empty
      (commons.Id): storagetransfer.transferOperations.pause
      (commons.LogicalStructure):
      - Transfer Operations
  /googleServiceAccounts:
    /{projectId}:
      uriParameters:
        projectId:
          type: string
          description: The ID of the Google Developers Console project that the Google service account is associated with. Required.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Returns the Google service account that is used by Storage Transfer Service to access buckets in the project where transfers run or in other projects. Each Google service account is associated with one Google Developers Console project. Users should add this service account to the Google Cloud Storage bucket ACLs to grant access to Storage Transfer Service. This service account is created and owned by Storage Transfer Service and can only be used by Storage Transfer Service.
        displayName: Get
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: GoogleServiceAccount
        (commons.Id): storagetransfer.googleServiceAccounts.get
        (commons.LogicalStructure):
        - Google Service Accounts
  /{jobName}:
    uriParameters:
      jobName:
        type: string
        pattern: ^transferJobs/.*$
        description: The name of job to update. Required.
    patch:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Updates a transfer job. Updating a job's transfer spec does not affect transfer operations that are running already. Updating the scheduling of a job is not allowed.
      displayName: Patch
      is:
      - hasParameters
      body:
        application/json: UpdateTransferJobRequest
      responses:
        200:
          body:
            application/json: TransferJob
      (commons.Id): storagetransfer.transferJobs.patch
      (commons.LogicalStructure):
      - Transfer Jobs
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Gets a transfer job.
      displayName: Get
      is:
      - hasParameters
      queryParameters:
        projectId?:
          type: string
          description: The ID of the Google Developers Console project that owns the job. Required.
      responses:
        200:
          body:
            application/json: TransferJob
      (commons.Id): storagetransfer.transferJobs.get
      (commons.LogicalStructure):
      - Transfer Jobs
  /transferJobs:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Creates a transfer job that runs periodically.
      displayName: Create
      is:
      - hasParameters
      body:
        application/json: TransferJob
      responses:
        200:
          body:
            application/json: TransferJob
      (commons.Id): storagetransfer.transferJobs.create
      (commons.LogicalStructure):
      - Transfer Jobs
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
      description: Lists transfer jobs.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        filter?:
          type: string
          description: 'A list of query parameters specified as JSON text in the form
            of {"`project_id`":"my_project_id", "`job_names`":["jobid1","jobid2",...],
            "`job_statuses`":["status1","status2",...]}. Since `job_names` and `job_statuses`
            support multiple values, their values must be specified with array notation.
            `project_id` is required. `job_names` and `job_statuses` are optional.
            The valid values for `job_statuses` are case-insensitive: `ENABLED`, `DISABLED`,
            and `DELETED`.'
        pageSize?:
          type: integer
          format: int32
          description: The list page size. The max allowed value is 256.
        pageToken?:
          type: string
          description: The list page token.
      responses:
        200:
          body:
            application/json: ListTransferJobsResponse
      (commons.Id): storagetransfer.transferJobs.list
      (commons.LogicalStructure):
      - Transfer Jobs
/v1:getGoogleServiceAccount:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/cloud-platform
    description: Returns the Google service account that is used by Storage Transfer Service to access buckets in the project where transfers run or in other projects. Each Google service account is associated with one Google Developers Console project. Users should add this service account to the Google Cloud Storage bucket ACLs to grant access to Storage Transfer Service. This service account is created and owned by Storage Transfer Service and can only be used by Storage Transfer Service.
    displayName: Get Google Service Account
    is:
    - hasParameters
    queryParameters:
      projectId?:
        type: string
        description: The ID of the Google Developers Console project that the Google service account is associated with. Required.
    responses:
      200:
        body:
          application/json: GoogleServiceAccount
    (commons.Id): storagetransfer.getGoogleServiceAccount
    (commons.LogicalStructure):
    - Get Google Service Account
