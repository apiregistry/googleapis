#%RAML 1.0
title: Content API for Shopping
version: v2
baseUri: https://www.googleapis.com/content/v2/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/shopping-content
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): content:v2
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/content
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Account:
    type: object
    properties:
      adultContent?:
        type: boolean
        description: Indicates whether the merchant sells adult content.
      sellerId?:
        type: string
        description: Client-specific, locally-unique, internal ID for the child account.
      websiteUrl?:
        type: string
        description: The merchant's website.
      kind?:
        type: string
        default: content#account
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#account".'
      name?:
        type: string
        description: Display name for the account.
      adwordsLinks?:
        type: array
        description: List of linked AdWords accounts, active or pending approval. To create a new link request, add a new link with status active to the list. It will remain is state pending until approved or rejected in the AdWords interface. To delete an active link or to cancel a link request, remove it from the list.
        items: AccountAdwordsLink
      id?:
        type: integer
        format: int64
        description: Merchant Center account ID.
      reviewsUrl?:
        type: string
        description: URL for individual seller reviews, i.e., reviews for each child account.
      users?:
        type: array
        description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
        items: AccountUser
    description: Account data.
  AccountAdwordsLink:
    type: object
    properties:
      adwordsId?:
        type: integer
        format: int64
        description: Customer ID of the AdWords account.
      status?:
        type: string
        description: 'Status of the link between this Merchant Center account and
          the AdWords account. Upon retrieval, it represents the actual status of
          the link and can be either active if it was approved in Google AdWords or
          pending if it''s pending approval. Upon insertion, it represents the intended
          status of the link. Re-uploading a link with status active when it''s still
          pending or with status pending when it''s already active will have no effect:
          the status will remain unchanged. Re-uploading a link with deprecated status
          inactive is equivalent to not submitting the link at all and will delete
          the link if it was active or cancel the link request if it was pending.'
  AccountIdentifier:
    type: object
    properties:
      merchantId?:
        type: integer
        format: int64
        description: The merchant account ID, set for individual accounts and subaccounts.
      aggregatorId?:
        type: integer
        format: int64
        description: The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).
  AccountShipping:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account to which these account shipping settings belong.
      kind?:
        type: string
        default: content#accountShipping
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountShipping".'
      carrierRates?:
        type: array
        description: Carrier-based shipping calculations.
        items: AccountShippingCarrierRate
      rateTables?:
        type: array
        description: Rate tables definitions.
        items: AccountShippingRateTable
      services?:
        type: array
        description: Shipping services describing shipping fees calculation.
        items: AccountShippingShippingService
      locationGroups?:
        type: array
        description: Location groups for shipping.
        items: AccountShippingLocationGroup
    description: The shipping settings of a merchant account.
  AccountShippingCarrierRate:
    type: object
    properties:
      carrier?:
        type: string
        description: The carrier that is responsible for the shipping, such as "UPS", "FedEx", or "USPS".
      carrierService?:
        type: string
        description: The carrier service, such as "Ground" or "2Day".
      shippingOrigin?:
        type: string
        description: Shipping origin represented as a postal code.
      name?:
        type: string
        description: The name of the carrier rate.
      modifierFlatRate?: Price
      modifierPercent?:
        type: string
        description: Multiplicative shipping rate modifier in percent. Represented as a floating point number without the percentage character.
      saleCountry?:
        type: string
        description: The sale country for which this carrier rate is valid, represented as a CLDR territory code.
    description: A carrier-calculated shipping rate.
  AccountShippingCondition:
    type: object
    properties:
      priceMax?: Price
      deliveryLocationId?:
        type: integer
        format: int64
        description: Delivery location in terms of a location ID. Can be used to represent administrative areas, smaller country subdivisions, or cities.
      deliveryPostalCode?:
        type: string
        description: Delivery location in terms of a postal code.
      deliveryPostalCodeRange?: AccountShippingPostalCodeRange
      shippingLabel?:
        type: string
        description: Shipping label of the product. The products with the label are matched.
      weightMax?: Weight
      deliveryLocationGroup?:
        type: string
        description: Delivery location in terms of a location group name. A location group with this name must be specified among location groups.
  AccountShippingLocationGroup:
    type: object
    properties:
      country?:
        type: string
        description: The CLDR territory code of the country in which this location group is.
      postalCodes?:
        type: array
        description: "A postal code representing a city or a set of cities.  \n- A\
          \ single postal code (e.g., 12345)\n- A postal code prefix followed by a\
          \ star (e.g., 1234*)"
        items:
          type: string
      locationIds?:
        type: array
        description: A location ID (also called criteria ID) representing administrative areas, smaller country subdivisions (counties), or cities.
        items:
          type: integer
          format: int64
      name?:
        type: string
        description: The name of the location group.
      postalCodeRanges?:
        type: array
        description: A postal code range representing a city or a set of cities.
        items: AccountShippingPostalCodeRange
    description: A user-defined locations group in a given country. All the locations of the group must be of the same type.
  AccountShippingPostalCodeRange:
    type: object
    properties:
      start?:
        type: string
        description: The first (inclusive) postal code or prefix of the range.
      end?:
        type: string
        description: The last (inclusive) postal code or prefix of the range.
    description: "A postal code range, that can be either:  \n- A range of postal\
      \ codes (e.g., start=12340, end=12359)\n- A range of postal codes prefixes (e.g.,\
      \ start=1234* end=1235*). Prefixes must be of the same length (e.g., start=12*\
      \ end=2* is invalid)."
  AccountShippingRateTable:
    type: object
    properties:
      name?:
        type: string
        description: The name of the rate table.
      saleCountry?:
        type: string
        description: The sale country for which this table is valid, represented as a CLDR territory code.
      content?:
        type: array
        description: One-dimensional table cells define one condition along the same dimension. Bi-dimensional table cells use two dimensions with respectively M and N distinct values and must contain exactly M * N cells with distinct conditions (for each possible value pairs).
        items: AccountShippingRateTableCell
    description: A single or bi-dimensional table of shipping rates. Each dimension is defined in terms of consecutive price/weight ranges, delivery locations, or shipping labels.
  AccountShippingRateTableCell:
    type: object
    properties:
      condition?: AccountShippingCondition
      rate?: Price
  AccountShippingShippingService:
    type: object
    properties:
      calculationMethod?: AccountShippingShippingServiceCalculationMethod
      minDaysInTransit?:
        type: integer
        format: int64
        description: The minimum number of days in transit. Must be a value between 0 and maxDaysIntransit included. A value of 0 means same day delivery.
      name?:
        type: string
        description: The name of this shipping service.
      active?:
        type: boolean
        description: Whether the shipping service is available.
      saleCountry?:
        type: string
        description: The CLDR territory code of the sale country for which this service can be used.
      costRuleTree?: AccountShippingShippingServiceCostRule
      maxDaysInTransit?:
        type: integer
        format: int64
        description: The maximum number of days in transit. Must be a value between 0 and 250 included. A value of 0 means same day delivery.
    description: Shipping services provided in a country.
  AccountShippingShippingServiceCalculationMethod:
    type: object
    properties:
      excluded?:
        type: boolean
        description: Delivery is excluded. Valid only within cost rules tree.
      carrierRate?:
        type: string
        description: Name of the carrier rate to use for the calculation.
      flatRate?: Price
      rateTable?:
        type: string
        description: Name of the rate table to use for the calculation.
      percentageRate?:
        type: string
        description: Percentage of the price, represented as a floating point number without the percentage character.
    description: Shipping cost calculation method. Exactly one of the field is set.
  AccountShippingShippingServiceCostRule:
    type: object
    properties:
      calculationMethod?: AccountShippingShippingServiceCalculationMethod
      condition?: AccountShippingCondition
      children?:
        type: array
        description: Subsequent rules to be applied, only for inner nodes. The last child must not specify a condition and acts as a catch-all.
        items: AccountShippingShippingServiceCostRule
    description: "Building block of the cost calculation decision tree.  \n- The tree\
      \ root should have no condition and no calculation method.\n- All the children\
      \ must have a condition on the same dimension. The first child matching a condition\
      \ is entered, therefore, price and weight conditions form contiguous intervals.\n\
      - The last child of an element must have no condition and matches all elements\
      \ not previously matched.\n- Children and calculation method are mutually exclusive,\
      \ and exactly one of them must be defined; the root must only have children."
  AccountStatus:
    type: object
    properties:
      accountId?:
        type: string
        description: The ID of the account for which the status is reported.
      kind?:
        type: string
        default: content#accountStatus
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountStatus".'
      dataQualityIssues?:
        type: array
        description: A list of data quality issues.
        items: AccountStatusDataQualityIssue
    description: The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.
  AccountStatusDataQualityIssue:
    type: object
    properties:
      severity?:
        type: string
        description: Severity of the problem.
      country?:
        type: string
        description: Country for which this issue is reported.
      submittedValue?:
        type: string
        description: Submitted value that causes the issue.
      displayedValue?:
        type: string
        description: Actual value displayed on the landing page.
      id?:
        type: string
        description: Issue identifier.
      exampleItems?:
        type: array
        description: Example items featuring the issue.
        items: AccountStatusExampleItem
      lastChecked?:
        type: string
        description: Last time the account was checked for this issue.
      numItems?:
        type: integer
        format: int32
        description: Number of items in the account found to have the said issue.
  AccountStatusExampleItem:
    type: object
    properties:
      itemId?:
        type: string
        description: Unique item ID as specified in the uploaded product data.
      submittedValue?:
        type: string
        description: The item value that was submitted.
      link?:
        type: string
        description: Landing page of the item.
      title?:
        type: string
        description: Title of the item.
      valueOnLandingPage?:
        type: string
        description: The actual value on the landing page.
    description: An example of an item that has poor data quality. An item value on the landing page differs from what is submitted, or conflicts with a policy.
  AccountTax:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account to which these account tax settings belong.
      kind?:
        type: string
        default: content#accountTax
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountTax".'
      rules?:
        type: array
        description: Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
        items: AccountTaxTaxRule
    description: The tax settings of a merchant account.
  AccountTaxTaxRule:
    type: object
    properties:
      ratePercent?:
        type: string
        description: Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.
      useGlobalRate?:
        type: boolean
        description: Whether the tax rate is taken from a global tax table or specified explicitly.
      country?:
        type: string
        description: Country code in which tax is applicable.
      locationId?:
        type: integer
        format: int64
        description: State (or province) is which the tax is applicable, described by its location id (also called criteria id).
      shippingTaxed?:
        type: boolean
        description: If true, shipping charges are also taxed.
    description: Tax calculation rule to apply in a state or province (USA only).
  AccountUser:
    type: object
    properties:
      emailAddress?:
        type: string
        description: User's email address.
      admin?:
        type: boolean
        description: Whether user is an admin.
  AccountsAuthInfoResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountsAuthInfoResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountsAuthInfoResponse".'
      accountIdentifiers?:
        type: array
        description: |-
          The account identifiers corresponding to the authenticated user.
          - For an individual account: only the merchant ID is defined
          - For an aggregator: only the aggregator ID is defined
          - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
        items: AccountIdentifier
  AccountsCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: AccountsCustomBatchRequestEntry
  AccountsCustomBatchRequestEntry:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account to get or delete. Only defined if the method is get or delete.
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
      account?: Account
    description: A batch entry encoding a single non-batch accounts request.
  AccountsCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: AccountsCustomBatchResponseEntry
      kind?:
        type: string
        default: content#accountsCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountsCustomBatchResponse".'
  AccountsCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountsCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountsCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      account?: Account
      errors?: Errors
    description: A batch entry encoding a single non-batch accounts response.
  AccountsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountsListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of accounts.
      resources?: Account[]
  AccountshippingCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: AccountshippingCustomBatchRequestEntry
  AccountshippingCustomBatchRequestEntry:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account for which to get/update account shipping settings.
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
      accountShipping?: AccountShipping
    description: A batch entry encoding a single non-batch accountshipping request.
  AccountshippingCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: AccountshippingCustomBatchResponseEntry
      kind?:
        type: string
        default: content#accountshippingCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountshippingCustomBatchResponse".'
  AccountshippingCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountshippingCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountshippingCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      accountShipping?: AccountShipping
      errors?: Errors
    description: A batch entry encoding a single non-batch accountshipping response.
  AccountshippingListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountshippingListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountshippingListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of account shipping settings.
      resources?: AccountShipping[]
  AccountstatusesCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: AccountstatusesCustomBatchRequestEntry
  AccountstatusesCustomBatchRequestEntry:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the (sub-)account whose status to get.
      method?:
        type: string
        description: The method (get).
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch accountstatuses request.
  AccountstatusesCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: AccountstatusesCustomBatchResponseEntry
      kind?:
        type: string
        default: content#accountstatusesCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountstatusesCustomBatchResponse".'
  AccountstatusesCustomBatchResponseEntry:
    type: object
    properties:
      accountStatus?: AccountStatus
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch accountstatuses response.
  AccountstatusesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#accountstatusesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accountstatusesListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of account statuses.
      resources?: AccountStatus[]
  AccounttaxCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: AccounttaxCustomBatchRequestEntry
  AccounttaxCustomBatchRequestEntry:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account for which to get/update account tax settings.
      accountTax?: AccountTax
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch accounttax request.
  AccounttaxCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: AccounttaxCustomBatchResponseEntry
      kind?:
        type: string
        default: content#accounttaxCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accounttaxCustomBatchResponse".'
  AccounttaxCustomBatchResponseEntry:
    type: object
    properties:
      accountTax?: AccountTax
      kind?:
        type: string
        default: content#accounttaxCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accounttaxCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch accounttax response.
  AccounttaxListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#accounttaxListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#accounttaxListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of account tax settings.
      resources?: AccountTax[]
  CarrierRate:
    type: object
    properties:
      carrierService?:
        type: string
        description: Carrier service, such as "ground" or "2 days". The list of supported services for a carrier can be retrieved via the getSupportedCarriers method. Required.
      percentageAdjustment?:
        type: string
        description: Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example "5.4" increases the rate by 5.4%, "-3" decreases the rate by 3%. Optional.
      carrierName?:
        type: string
        description: Carrier service, such as "UPS" or "Fedex". The list of supported carriers can be retrieved via the getSupportedCarriers method. Required.
      name?:
        type: string
        description: Name of the carrier rate. Must be unique per rate group. Required.
      flatAdjustment?: Price
      originPostalCode?:
        type: string
        description: Shipping origin for this carrier rate. Required.
  CarriersCarrier:
    type: object
    properties:
      country?:
        type: string
        description: The CLDR country code of the carrier (e.g., "US"). Always present.
      name?:
        type: string
        description: The name of the carrier (e.g., "UPS"). Always present.
      services?:
        type: array
        description: A list of supported services (e.g., "ground") for that carrier. Contains at least one service.
        items:
          type: string
  Datafeed:
    type: object
    properties:
      fetchSchedule?: DatafeedFetchSchedule
      fileName?:
        type: string
        description: The filename of the feed. All feeds must have a unique file name.
      intendedDestinations?:
        type: array
        description: The list of intended destinations (corresponds to checked check boxes in Merchant Center).
        items:
          type: string
      kind?:
        type: string
        default: content#datafeed
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeed".'
      format?: DatafeedFormat
      name?:
        type: string
        description: A descriptive name of the data feed.
      contentLanguage?:
        type: string
        description: The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targetCountry.
      attributeLanguage?:
        type: string
        description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
      id?:
        type: integer
        format: int64
        description: The ID of the data feed.
      contentType?:
        type: string
        description: The type of data feed.
      targetCountry?:
        type: string
        description: The country where the items in the feed will be included in the search index, represented as a CLDR territory code.
    description: Datafeed data.
  DatafeedFetchSchedule:
    type: object
    properties:
      password?:
        type: string
        description: An optional password for fetch_url.
      hour?:
        type: integer
        format: int32
        description: The hour of the day the feed file should be fetched (0-23).
      dayOfMonth?:
        type: integer
        format: int32
        description: The day of the month the feed file should be fetched (1-31).
      fetchUrl?:
        type: string
        description: The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.
      weekday?:
        type: string
        description: The day of the week the feed file should be fetched.
      timeZone?:
        type: string
        description: Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles".
      minuteOfHour?:
        type: integer
        format: int32
        description: The minute of the hour the feed file should be fetched (0-59). Read-only.
      username?:
        type: string
        description: An optional user name for fetch_url.
    description: The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
  DatafeedFormat:
    type: object
    properties:
      fileEncoding?:
        type: string
        description: Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected.
      quotingMode?:
        type: string
        description: Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds.
      columnDelimiter?:
        type: string
        description: Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds.
  DatafeedStatus:
    type: object
    properties:
      processingStatus?:
        type: string
        description: The processing status of the feed.
      datafeedId?:
        type: integer
        format: int64
        description: The ID of the feed for which the status is reported.
      itemsTotal?:
        type: integer
        format: int64
        description: The number of items in the feed that were processed.
      kind?:
        type: string
        default: content#datafeedStatus
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeedStatus".'
      lastUploadDate?:
        type: string
        description: The last date at which the feed was uploaded.
      warnings?:
        type: array
        description: The list of errors occurring in the feed.
        items: DatafeedStatusError
      itemsValid?:
        type: integer
        format: int64
        description: The number of items in the feed that were valid.
      errors?:
        type: array
        description: The list of errors occurring in the feed.
        items: DatafeedStatusError
    description: The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
  DatafeedStatusError:
    type: object
    properties:
      code?:
        type: string
        description: The code of the error, e.g., "validation/invalid_value".
      examples?:
        type: array
        description: A list of example occurrences of the error, grouped by product.
        items: DatafeedStatusExample
      count?:
        type: integer
        format: int64
        description: The number of occurrences of the error in the feed.
      message?:
        type: string
        description: The error message, e.g., "Invalid price".
    description: An error occurring in the feed, like "invalid price".
  DatafeedStatusExample:
    type: object
    properties:
      itemId?:
        type: string
        description: The ID of the example item.
      lineNumber?:
        type: integer
        format: int64
        description: Line number in the data feed where the example is found.
      value?:
        type: string
        description: The problematic value.
    description: An example occurrence for a particular error.
  DatafeedsCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: DatafeedsCustomBatchRequestEntry
  DatafeedsCustomBatchRequestEntry:
    type: object
    properties:
      datafeed?: Datafeed
      datafeedId?:
        type: integer
        format: int64
        description: The ID of the data feed to get or delete.
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch datafeeds request.
  DatafeedsCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: DatafeedsCustomBatchResponseEntry
      kind?:
        type: string
        default: content#datafeedsCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeedsCustomBatchResponse".'
  DatafeedsCustomBatchResponseEntry:
    type: object
    properties:
      datafeed?: Datafeed
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch datafeeds response.
  DatafeedsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#datafeedsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeedsListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of datafeeds.
      resources?: Datafeed[]
  DatafeedstatusesCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: DatafeedstatusesCustomBatchRequestEntry
  DatafeedstatusesCustomBatchRequestEntry:
    type: object
    properties:
      datafeedId?:
        type: integer
        format: int64
        description: The ID of the data feed to get or delete.
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch datafeedstatuses request.
  DatafeedstatusesCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: DatafeedstatusesCustomBatchResponseEntry
      kind?:
        type: string
        default: content#datafeedstatusesCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeedstatusesCustomBatchResponse".'
  DatafeedstatusesCustomBatchResponseEntry:
    type: object
    properties:
      datafeedStatus?: DatafeedStatus
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch datafeedstatuses response.
  DatafeedstatusesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#datafeedstatusesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#datafeedstatusesListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of datafeed statuses.
      resources?: DatafeedStatus[]
  DeliveryTime:
    type: object
    properties:
      maxTransitTimeInDays?:
        type: integer
        format: int32
        description: Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to minTransitTimeInDays. Required.
      minTransitTimeInDays?:
        type: integer
        format: int32
        description: Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Required.
  Error:
    type: object
    properties:
      reason?:
        type: string
        description: The error code.
      domain?:
        type: string
        description: The domain of the error.
      message?:
        type: string
        description: A description of the error.
    description: An error returned by the API.
  Errors:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The HTTP status of the first error in errors.
      message?:
        type: string
        description: The message of the first error in errors.
      errors?:
        type: array
        description: A list of errors.
        items: Error
    description: A list of errors returned by a failed batch entry.
  Headers:
    type: object
    properties:
      numberOfItems?:
        type: array
        description: A list of inclusive number of items upper bounds. The last value can be "infinity". For example ["10", "50", "infinity"] represents the headers "<= 10 items", " 50 items". Must be non-empty. Can only be set if all other fields are not set.
        items:
          type: string
      locations?:
        type: array
        description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
        items: LocationIdSet
      postalCodeGroupNames?:
        type: array
        description: 'A list of postal group names. The last value can be "all other
          locations". Example: ["zone 1", "zone 2", "all other locations"]. The referred
          postal code groups must match the delivery country of the service. Must
          be non-empty. Can only be set if all other fields are not set.'
        items:
          type: string
      prices?:
        type: array
        description: 'be "infinity". For example [{"value": "10", "currency": "USD"},
          {"value": "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}]
          represents the headers "<= $10", " $500". All prices within a service must
          have the same currency. Must be non-empty. Can only be set if all other
          fields are not set.'
        items: Price
      weights?:
        type: array
        description: 'be "infinity". For example [{"value": "10", "unit": "kg"}, {"value":
          "50", "unit": "kg"}, {"value": "infinity", "unit": "kg"}] represents the
          headers "<= 10kg", " 50kg". All weights within a service must have the same
          unit. Must be non-empty. Can only be set if all other fields are not set.'
        items: Weight
    description: A non-empty list of row or column headers for a table. Exactly one of prices, weights, numItems, postalCodeGroupNames, or locations must be set.
  Installment:
    type: object
    properties:
      amount?: Price
      months?:
        type: integer
        format: int64
        description: The number of installments the buyer has to pay.
  Inventory:
    type: object
    properties:
      sellOnGoogleQuantity?:
        type: integer
        format: int32
        description: The quantity of the product that is reserved for sell-on-google ads. Supported only for online products.
      quantity?:
        type: integer
        format: int32
        description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
      salePrice?: Price
      kind?:
        type: string
        default: content#inventory
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#inventory".'
      price?: Price
      installment?: Installment
      salePriceEffectiveDate?:
        type: string
        description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
      availability?:
        type: string
        description: The availability of the product.
      loyaltyPoints?: LoyaltyPoints
  InventoryCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: InventoryCustomBatchRequestEntry
  InventoryCustomBatchRequestEntry:
    type: object
    properties:
      productId?:
        type: string
        description: The ID of the product for which to update price and availability.
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
      inventory?: Inventory
      storeCode?:
        type: string
        description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
    description: A batch entry encoding a single non-batch inventory request.
  InventoryCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: InventoryCustomBatchResponseEntry
      kind?:
        type: string
        default: content#inventoryCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#inventoryCustomBatchResponse".'
  InventoryCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#inventoryCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#inventoryCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch inventory response.
  InventorySetRequest:
    type: object
    properties:
      sellOnGoogleQuantity?:
        type: integer
        format: int32
        description: The quantity of the product that is reserved for sell-on-google ads. Supported only for online products.
      quantity?:
        type: integer
        format: int32
        description: The quantity of the product. Must be equal to or greater than zero. Supported only for local products.
      salePrice?: Price
      price?: Price
      installment?: Installment
      salePriceEffectiveDate?:
        type: string
        description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
      availability?:
        type: string
        description: The availability of the product.
      loyaltyPoints?: LoyaltyPoints
  InventorySetResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#inventorySetResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#inventorySetResponse".'
  LocationIdSet:
    type: object
    properties:
      locationIds?:
        type: array
        description: A non-empty list of location IDs. They must all be of the same location type (e.g., state).
        items:
          type: string
  LoyaltyPoints:
    type: object
    properties:
      name?:
        type: string
        description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
      pointsValue?:
        type: integer
        format: int64
        description: The retailer's loyalty points in absolute value.
      ratio?:
        type: number
        format: double
        description: The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
  Order:
    type: object
    properties:
      shippingCost?: Price
      acknowledged?:
        type: boolean
        description: Whether the order was acknowledged.
      netAmount?: Price
      kind?:
        type: string
        default: content#order
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#order".'
      channelType?:
        type: string
        description: 'The channel type of the order: "purchaseOnGoogle" or "googleExpress".'
      merchantOrderId?:
        type: string
        description: Merchant-provided id of the order.
      shipments?:
        type: array
        description: Shipments of the order.
        items: OrderShipment
      refunds?:
        type: array
        description: Refunds for the order.
        items: OrderRefund
      shippingOption?:
        type: string
        description: The requested shipping option.
      lineItems?:
        type: array
        description: Line items that are ordered.
        items: OrderLineItem
      promotions?:
        type: array
        description: The details of the merchant provided promotions applied to the order. More details about the program are  here.
        items: OrderPromotion
      merchantId?:
        type: integer
        format: int64
      shippingCostTax?: Price
      deliveryDetails?: OrderDeliveryDetails
      paymentMethod?: OrderPaymentMethod
      id?:
        type: string
        description: The REST id of the order. Globally unique.
      placedDate?:
        type: string
        description: The date when the order was placed, in ISO 8601 format.
      paymentStatus?:
        type: string
        description: The status of the payment.
      customer?: OrderCustomer
      status?:
        type: string
        description: The status of the order.
  OrderAddress:
    type: object
    properties:
      country?:
        type: string
        description: CLDR country code (e.g. "US").
      streetAddress?:
        type: array
        description: Street-level part of the address.
        items:
          type: string
      postalCode?:
        type: string
        description: Postal Code or ZIP (e.g. "94043").
      fullAddress?:
        type: array
        description: |-
          Strings representing the lines of the printed label for mailing the order, for example:
          John Smith
          1600 Amphitheatre Parkway
          Mountain View, CA, 94043
          United States
        items:
          type: string
      isPostOfficeBox?:
        type: boolean
        description: Whether the address is a post office box.
      locality?:
        type: string
        description: City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).
      recipientName?:
        type: string
        description: Name of the recipient.
      region?:
        type: string
        description: Top-level administrative subdivision of the country (e.g. "CA").
  OrderCancellation:
    type: object
    properties:
      actor?:
        type: string
        description: The actor that created the cancellation.
      reason?:
        type: string
        description: The reason for the cancellation. Orders that are cancelled with a noInventory reason will lead to the removal of the product from POG until you make an update to that product. This will not affect your Shopping ads.
      quantity?:
        type: integer
        format: int32
        description: The quantity that was canceled.
      reasonText?:
        type: string
        description: The explanation of the reason.
      creationDate?:
        type: string
        description: Date on which the cancellation has been created, in ISO 8601 format.
  OrderCustomer:
    type: object
    properties:
      explicitMarketingPreference?:
        type: boolean
        description: If set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the Purchases on Google checkout flow.
      fullName?:
        type: string
        description: Full name of the customer.
      email?:
        type: string
        description: Email address of the customer.
  OrderDeliveryDetails:
    type: object
    properties:
      address?: OrderAddress
      phoneNumber?:
        type: string
        description: The phone number of the person receiving the delivery.
  OrderLineItem:
    type: object
    properties:
      quantityReturned?:
        type: integer
        format: int32
        description: Number of items returned.
      product?: OrderLineItemProduct
      quantityPending?:
        type: integer
        format: int32
        description: Number of items pending.
      quantityOrdered?:
        type: integer
        format: int32
        description: Number of items ordered.
      tax?: Price
      quantityCanceled?:
        type: integer
        format: int32
        description: Number of items canceled.
      cancellations?:
        type: array
        description: Cancellations of the line item.
        items: OrderCancellation
      quantityDelivered?:
        type: integer
        format: int32
        description: Number of items delivered.
      returnInfo?: OrderLineItemReturnInfo
      quantityShipped?:
        type: integer
        format: int32
        description: Number of items shipped.
      shippingDetails?: OrderLineItemShippingDetails
      price?: Price
      returns?:
        type: array
        description: Returns of the line item.
        items: OrderReturn
      id?:
        type: string
        description: The id of the line item.
  OrderLineItemProduct:
    type: object
    properties:
      gtin?:
        type: string
        description: Global Trade Item Number (GTIN) of the item.
      variantAttributes?:
        type: array
        description: Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.
        items: OrderLineItemProductVariantAttribute
      channel?:
        type: string
        description: The item's channel (online or local).
      mpn?:
        type: string
        description: Manufacturer Part Number (MPN) of the item.
      title?:
        type: string
        description: The title of the product.
      itemGroupId?:
        type: string
        description: Shared identifier for all variants of the same product.
      targetCountry?:
        type: string
        description: The CLDR territory code of the target country of the product.
      imageLink?:
        type: string
        description: URL of an image of the item.
      condition?:
        type: string
        description: Condition or state of the item.
      shownImage?:
        type: string
        description: URL to the cached image shown to the user when order was placed.
      price?: Price
      contentLanguage?:
        type: string
        description: The two-letter ISO 639-1 language code for the item.
      offerId?:
        type: string
        description: An identifier of the item.
      id?:
        type: string
        description: The REST id of the product.
      brand?:
        type: string
        description: Brand of the item.
  OrderLineItemProductVariantAttribute:
    type: object
    properties:
      dimension?:
        type: string
        description: The dimension of the variant.
      value?:
        type: string
        description: The value for the dimension.
  OrderLineItemReturnInfo:
    type: object
    properties:
      isReturnable?:
        type: boolean
        description: Whether the item is returnable.
      policyUrl?:
        type: string
        description: URL of the item return policy.
      daysToReturn?:
        type: integer
        format: int32
        description: How many days later the item can be returned.
  OrderLineItemShippingDetails:
    type: object
    properties:
      method?: OrderLineItemShippingDetailsMethod
      shipByDate?:
        type: string
        description: The ship by date, in ISO 8601 format.
      deliverByDate?:
        type: string
        description: The delivery by date, in ISO 8601 format.
  OrderLineItemShippingDetailsMethod:
    type: object
    properties:
      carrier?:
        type: string
        description: The carrier for the shipping. Optional.
      minDaysInTransit?:
        type: integer
        format: int32
        description: Minimum transit time.
      methodName?:
        type: string
        description: The name of the shipping method.
      maxDaysInTransit?:
        type: integer
        format: int32
        description: Maximum transit time.
  OrderPaymentMethod:
    type: object
    properties:
      expirationYear?:
        type: integer
        format: int32
        description: The card expiration year (4-digit, e.g. 2015).
      phoneNumber?:
        type: string
        description: The billing phone number.
      lastFourDigits?:
        type: string
        description: The last four digits of the card number.
      billingAddress?: OrderAddress
      expirationMonth?:
        type: integer
        format: int32
        description: The card expiration month (January = 1, February = 2 etc.).
      type?:
        type: string
        description: The type of instrument (VISA, Mastercard, etc).
  OrderPromotion:
    type: object
    properties:
      benefits?: OrderPromotionBenefit[]
      redemptionChannel?:
        type: string
        description: Indicates that the promotion is valid online.
      genericRedemptionCode?:
        type: string
        description: Optional. The text code that corresponds to the promotion when applied on the retailer?s website.
      id?:
        type: string
        description: The unique ID of the promotion.
      productApplicability?:
        type: string
        description: Whether the promotion is applicable to all products or only specific products.
      effectiveDates?:
        type: string
        description: |-
          The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review.
          Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
      longTitle?:
        type: string
        description: The full title of the promotion.
  OrderPromotionBenefit:
    type: object
    properties:
      taxImpact?: Price
      discount?: Price
      subType?:
        type: string
        description: Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types.
      offerIds?:
        type: array
        description: The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion.
        items:
          type: string
      type?:
        type: string
        description: Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping).
  OrderRefund:
    type: object
    properties:
      actor?:
        type: string
        description: The actor that created the refund.
      reason?:
        type: string
        description: The reason for the refund.
      amount?: Price
      reasonText?:
        type: string
        description: The explanation of the reason.
      creationDate?:
        type: string
        description: Date on which the item has been created, in ISO 8601 format.
  OrderReturn:
    type: object
    properties:
      actor?:
        type: string
        description: The actor that created the refund.
      reason?:
        type: string
        description: The reason for the return.
      quantity?:
        type: integer
        format: int32
        description: Quantity that is returned.
      reasonText?:
        type: string
        description: The explanation of the reason.
      creationDate?:
        type: string
        description: Date on which the item has been created, in ISO 8601 format.
  OrderShipment:
    type: object
    properties:
      lineItems?:
        type: array
        description: The line items that are shipped.
        items: OrderShipmentLineItemShipment
      carrier?:
        type: string
        description: The carrier handling the shipment.
      id?:
        type: string
        description: The id of the shipment.
      creationDate?:
        type: string
        description: Date on which the shipment has been created, in ISO 8601 format.
      deliveryDate?:
        type: string
        description: Date on which the shipment has been delivered, in ISO 8601 format. Present only if status is delievered
      status?:
        type: string
        description: The status of the shipment.
      trackingId?:
        type: string
        description: The tracking id for the shipment.
  OrderShipmentLineItemShipment:
    type: object
    properties:
      quantity?:
        type: integer
        format: int32
        description: The quantity that is shipped.
      lineItemId?:
        type: string
        description: The id of the line item that is shipped.
  OrdersAcknowledgeRequest:
    type: object
    properties:
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
  OrdersAcknowledgeResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersAcknowledgeResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersAcknowledgeResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersAdvanceTestOrderResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersAdvanceTestOrderResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersAdvanceTestOrderResponse".'
  OrdersCancelLineItemRequest:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the cancellation.
      amount?: Price
      quantity?:
        type: integer
        format: int32
        description: The quantity to cancel.
      reasonText?:
        type: string
        description: The explanation of the reason.
      lineItemId?:
        type: string
        description: The ID of the line item to cancel.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
  OrdersCancelLineItemResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersCancelLineItemResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersCancelLineItemResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersCancelRequest:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the cancellation.
      reasonText?:
        type: string
        description: The explanation of the reason.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
  OrdersCancelResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersCancelResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersCancelResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersCreateTestOrderRequest:
    type: object
    properties:
      templateName?:
        type: string
        description: The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.
      testOrder?: TestOrder
  OrdersCreateTestOrderResponse:
    type: object
    properties:
      orderId?:
        type: string
        description: The ID of the newly created test order.
      kind?:
        type: string
        default: content#ordersCreateTestOrderResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersCreateTestOrderResponse".'
  OrdersCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: OrdersCustomBatchRequestEntry
  OrdersCustomBatchRequestEntry:
    type: object
    properties:
      cancel?: OrdersCustomBatchRequestEntryCancel
      returnLineItem?: OrdersCustomBatchRequestEntryReturnLineItem
      method?:
        type: string
        description: The method to apply.
      shipLineItems?: OrdersCustomBatchRequestEntryShipLineItems
      updateShipment?: OrdersCustomBatchRequestEntryUpdateShipment
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      orderId?:
        type: string
        description: The ID of the order. Required for all methods beside getByMerchantOrderId.
      cancelLineItem?: OrdersCustomBatchRequestEntryCancelLineItem
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order. Required for all methods beside get and getByMerchantOrderId.
      merchantOrderId?:
        type: string
        description: The merchant order id. Required for updateMerchantOrderId and getByMerchantOrderId methods.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
      refund?: OrdersCustomBatchRequestEntryRefund
  OrdersCustomBatchRequestEntryCancel:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the cancellation.
      reasonText?:
        type: string
        description: The explanation of the reason.
  OrdersCustomBatchRequestEntryCancelLineItem:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the cancellation.
      amount?: Price
      quantity?:
        type: integer
        format: int32
        description: The quantity to cancel.
      reasonText?:
        type: string
        description: The explanation of the reason.
      lineItemId?:
        type: string
        description: The ID of the line item to cancel.
  OrdersCustomBatchRequestEntryRefund:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the refund.
      amount?: Price
      reasonText?:
        type: string
        description: The explanation of the reason.
  OrdersCustomBatchRequestEntryReturnLineItem:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the return.
      quantity?:
        type: integer
        format: int32
        description: The quantity to return.
      reasonText?:
        type: string
        description: The explanation of the reason.
      lineItemId?:
        type: string
        description: The ID of the line item to return.
  OrdersCustomBatchRequestEntryShipLineItems:
    type: object
    properties:
      lineItems?:
        type: array
        description: Line items to ship.
        items: OrderShipmentLineItemShipment
      carrier?:
        type: string
        description: The carrier handling the shipment.
      shipmentId?:
        type: string
        description: The ID of the shipment.
      trackingId?:
        type: string
        description: The tracking id for the shipment.
  OrdersCustomBatchRequestEntryUpdateShipment:
    type: object
    properties:
      carrier?:
        type: string
        description: The carrier handling the shipment. Not updated if missing.
      shipmentId?:
        type: string
        description: The ID of the shipment.
      status?:
        type: string
        description: New status for the shipment. Not updated if missing.
      trackingId?:
        type: string
        description: The tracking id for the shipment. Not updated if missing.
  OrdersCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: OrdersCustomBatchResponseEntry
      kind?:
        type: string
        default: content#ordersCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersCustomBatchResponse".'
  OrdersCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersCustomBatchResponseEntry".'
      executionStatus?:
        type: string
        description: The status of the execution. Only defined if the method is not get or getByMerchantOrderId and if the request was successful.
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
      order?: Order
  OrdersGetByMerchantOrderIdResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersGetByMerchantOrderIdResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersGetByMerchantOrderIdResponse".'
      order?: Order
  OrdersGetTestOrderTemplateResponse:
    type: object
    properties:
      template?: TestOrder
      kind?:
        type: string
        default: content#ordersGetTestOrderTemplateResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersGetTestOrderTemplateResponse".'
  OrdersListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of orders.
      resources?: Order[]
  OrdersRefundRequest:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the refund.
      amount?: Price
      reasonText?:
        type: string
        description: The explanation of the reason.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
  OrdersRefundResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersRefundResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersRefundResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersReturnLineItemRequest:
    type: object
    properties:
      reason?:
        type: string
        description: The reason for the return.
      quantity?:
        type: integer
        format: int32
        description: The quantity to return.
      reasonText?:
        type: string
        description: The explanation of the reason.
      lineItemId?:
        type: string
        description: The ID of the line item to return.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
  OrdersReturnLineItemResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersReturnLineItemResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersReturnLineItemResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersShipLineItemsRequest:
    type: object
    properties:
      lineItems?:
        type: array
        description: Line items to ship.
        items: OrderShipmentLineItemShipment
      carrier?:
        type: string
        description: The carrier handling the shipment.
      shipmentId?:
        type: string
        description: The ID of the shipment.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
      trackingId?:
        type: string
        description: The tracking id for the shipment.
  OrdersShipLineItemsResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersShipLineItemsResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersShipLineItemsResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersUpdateMerchantOrderIdRequest:
    type: object
    properties:
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
      merchantOrderId?:
        type: string
        description: The merchant order id to be assigned to the order. Must be unique per merchant.
  OrdersUpdateMerchantOrderIdResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersUpdateMerchantOrderIdResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersUpdateMerchantOrderIdResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  OrdersUpdateShipmentRequest:
    type: object
    properties:
      carrier?:
        type: string
        description: The carrier handling the shipment. Not updated if missing.
      shipmentId?:
        type: string
        description: The ID of the shipment.
      operationId?:
        type: string
        description: The ID of the operation. Unique across all operations for a given order.
      status?:
        type: string
        description: New status for the shipment. Not updated if missing.
      trackingId?:
        type: string
        description: The tracking id for the shipment. Not updated if missing.
  OrdersUpdateShipmentResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#ordersUpdateShipmentResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#ordersUpdateShipmentResponse".'
      executionStatus?:
        type: string
        description: The status of the execution.
  PostalCodeGroup:
    type: object
    properties:
      country?:
        type: string
        description: The CLDR territory code of the country the postal code group applies to. Required.
      name?:
        type: string
        description: The name of the postal code group, referred to in headers. Required.
      postalCodeRanges?:
        type: array
        description: A range of postal codes. Required.
        items: PostalCodeRange
  PostalCodeRange:
    type: object
    properties:
      postalCodeRangeBegin?:
        type: string
        description: 'A postal code or a pattern of the form prefix* denoting the
          inclusive lower bound of the range defining the area. Examples values: "94108",
          "9410*", "9*". Required.'
      postalCodeRangeEnd?:
        type: string
        description: 'A postal code or a pattern of the form prefix* denoting the
          inclusive upper bound of the range defining the area. It must have the same
          length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code
          then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin
          is a pattern then postalCodeRangeEnd must be a pattern with the same prefix
          length. Optional: if not set, then the area is defined as being all the
          postal codes matching postalCodeRangeBegin.'
  Price:
    type: object
    properties:
      currency?:
        type: string
        description: The currency of the price.
      value?:
        type: string
        description: The price represented as a number.
  Product:
    type: object
    properties:
      additionalImageLinks?:
        type: array
        description: Additional URLs of images of the item.
        items:
          type: string
      customLabel4?:
        type: string
        description: Custom label 4 for custom grouping of items in a Shopping campaign.
      customLabel3?:
        type: string
        description: Custom label 3 for custom grouping of items in a Shopping campaign.
      channel?:
        type: string
        description: The item's channel (online or local).
      availabilityDate?:
        type: string
        description: The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
      onlineOnly?:
        type: boolean
        description: Whether an item is available for purchase only online.
      taxes?:
        type: array
        description: Tax information.
        items: ProductTax
      adwordsGrouping?:
        type: string
        description: Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
      loyaltyPoints?: LoyaltyPoints
      displayAdsLink?:
        type: string
        description: URL directly to your item's landing page for dynamic remarketing campaigns.
      shippingHeight?: ProductShippingDimension
      sellOnGoogleQuantity?:
        type: integer
        format: int64
        description: The quantity of the product that is reserved for sell-on-google ads.
      shipping?:
        type: array
        description: Shipping rules.
        items: ProductShipping
      sizes?:
        type: array
        description: Size of the item.
        items:
          type: string
      price?: Price
      customLabel2?:
        type: string
        description: Custom label 2 for custom grouping of items in a Shopping campaign.
      customLabel1?:
        type: string
        description: Custom label 1 for custom grouping of items in a Shopping campaign.
      customLabel0?:
        type: string
        description: Custom label 0 for custom grouping of items in a Shopping campaign.
      displayAdsSimilarIds?:
        type: array
        description: Advertiser-specified recommendations.
        items:
          type: string
      id?:
        type: string
        description: The REST id of the product.
      brand?:
        type: string
        description: Brand of the item.
      customGroups?:
        type: array
        description: A list of custom (merchant-provided) custom attribute groups.
        items: ProductCustomGroup
      sizeType?:
        type: string
        description: The cut of the item. Recommended for apparel items.
      sizeSystem?:
        type: string
        description: System in which the size is specified. Recommended for apparel items.
      kind?:
        type: string
        default: content#product
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#product".'
      destinations?:
        type: array
        description: Specifies the intended destinations for the product.
        items: ProductDestination
      displayAdsValue?:
        type: number
        format: double
        description: Offer margin for dynamic remarketing campaigns.
      shippingLabel?:
        type: string
        description: The shipping label of the product, used to group product in account-level shipping rules.
      mpn?:
        type: string
        description: Manufacturer Part Number (MPN) of the item.
      ageGroup?:
        type: string
        description: Target age group of the item.
      mobileLink?:
        type: string
        description: Link to a mobile-optimized version of the landing page.
      targetCountry?:
        type: string
        description: The CLDR territory code for the item.
      condition?:
        type: string
        description: Condition or state of the item.
      installment?: Installment
      contentLanguage?:
        type: string
        description: The two-letter ISO 639-1 language code for the item.
      offerId?:
        type: string
        description: An identifier of the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details.
      identifierExists?:
        type: boolean
        description: False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
      adult?:
        type: boolean
        description: Set to true if the item is targeted towards adults.
      customAttributes?:
        type: array
        description: 'A list of custom (merchant-provided) attributes. It can also
          be used for submitting any attribute of the feed specification in its generic
          form (e.g., { "name": "size type", "type": "text", "value": "regular" }).
          This is useful for submitting attributes not explicitly exposed by the API.'
        items: ProductCustomAttribute
      energyEfficiencyClass?:
        type: string
        description: The energy efficiency class as defined in EU directive 2010/30/EU.
      googleProductCategory?:
        type: string
        description: Google's category of the item (see Google product taxonomy).
      isBundle?:
        type: boolean
        description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
      validatedDestinations?:
        type: array
        description: The read-only list of intended destinations which passed validation.
        items:
          type: string
      color?:
        type: string
        description: Color of the item.
      gender?:
        type: string
        description: Target gender of the item.
      adwordsLabels?:
        type: array
        description: Similar to adwords_grouping, but only works on CPC.
        items:
          type: string
      aspects?:
        type: array
        description: Specifies the intended aspects for the product.
        items: ProductAspect
      link?:
        type: string
        description: URL directly linking to your item's page on your website.
      pattern?:
        type: string
        description: The item's pattern (e.g. polka dots).
      salePriceEffectiveDate?:
        type: string
        description: Date range during which the item is on sale (see products feed specification).
      description?:
        type: string
        description: Description of the item.
      multipack?:
        type: integer
        format: int64
        description: The number of identical products in a merchant-defined multipack.
      availability?:
        type: string
        description: Availability status of the item.
      title?:
        type: string
        description: Title of the item.
      itemGroupId?:
        type: string
        description: Shared identifier for all variants of the same product.
      displayAdsId?:
        type: string
        description: An identifier for an item for dynamic remarketing campaigns.
      imageLink?:
        type: string
        description: URL of an image of the item.
      unitPricingBaseMeasure?: ProductUnitPricingBaseMeasure
      shippingWeight?: ProductShippingWeight
      shippingWidth?: ProductShippingDimension
      productType?:
        type: string
        description: Your category of the item (formatted as in products feed specification).
      additionalProductTypes?:
        type: array
        description: Additional categories of the item (formatted as in products feed specification).
        items:
          type: string
      expirationDate?:
        type: string
        description: Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future.
      gtin?:
        type: string
        description: Global Trade Item Number (GTIN) of the item.
      shippingLength?: ProductShippingDimension
      salePrice?: Price
      warnings?:
        type: array
        description: Read-only warnings.
        items: Error
      promotionIds?:
        type: array
        description: The unique ID of a promotion.
        items:
          type: string
      adwordsRedirect?:
        type: string
        description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
      material?:
        type: string
        description: The material of which the item is made.
      displayAdsTitle?:
        type: string
        description: Title of an item for dynamic remarketing campaigns.
      unitPricingMeasure?: ProductUnitPricingMeasure
    description: Product data.
  ProductAspect:
    type: object
    properties:
      aspectName?:
        type: string
        description: The name of the aspect.
      destinationName?:
        type: string
        description: The name of the destination. Leave out to apply to all destinations.
      intention?:
        type: string
        description: Whether the aspect is required, excluded or should be validated.
  ProductCustomAttribute:
    type: object
    properties:
      unit?:
        type: string
        description: Free-form unit of the attribute. Unit can only be used for values of type INT or FLOAT.
      name?:
        type: string
        description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
      type?:
        type: string
        description: The type of the attribute.
      value?:
        type: string
        description: The value of the attribute.
  ProductCustomGroup:
    type: object
    properties:
      name?:
        type: string
        description: The name of the group. Underscores will be replaced by spaces upon insertion.
      attributes?:
        type: array
        description: The sub-attributes.
        items: ProductCustomAttribute
  ProductDestination:
    type: object
    properties:
      destinationName?:
        type: string
        description: The name of the destination.
      intention?:
        type: string
        description: Whether the destination is required, excluded or should be validated.
  ProductShipping:
    type: object
    properties:
      country?:
        type: string
        description: The CLDR territory code of the country to which an item will ship.
      locationId?:
        type: integer
        format: int64
        description: The numeric id of a location that the shipping rate applies to as defined in the AdWords API.
      price?: Price
      service?:
        type: string
        description: A free-form description of the service class or delivery speed.
      postalCode?:
        type: string
        description: The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.
      region?:
        type: string
        description: The geographic region to which a shipping rate applies (e.g. zip code).
      locationGroupName?:
        type: string
        description: The location where the shipping is applicable, represented by a location group name.
  ProductShippingDimension:
    type: object
    properties:
      unit?:
        type: string
        description: "The unit of value.\n\nAcceptable values are:  \n- \"cm\" \n\
          - \"in\""
      value?:
        type: number
        format: double
        description: The dimension of the product used to calculate the shipping cost of the item.
  ProductShippingWeight:
    type: object
    properties:
      unit?:
        type: string
        description: The unit of value.
      value?:
        type: number
        format: double
        description: The weight of the product used to calculate the shipping cost of the item.
  ProductStatus:
    type: object
    properties:
      productId?:
        type: string
        description: The id of the product for which status is reported.
      kind?:
        type: string
        default: content#productStatus
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productStatus".'
      lastUpdateDate?:
        type: string
        description: Date on which the item has been last updated, in ISO 8601 format.
      link?:
        type: string
        description: The link to the product.
      dataQualityIssues?:
        type: array
        description: A list of data quality issues associated with the product.
        items: ProductStatusDataQualityIssue
      destinationStatuses?:
        type: array
        description: The intended destinations for the product.
        items: ProductStatusDestinationStatus
      creationDate?:
        type: string
        description: Date on which the item has been created, in ISO 8601 format.
      title?:
        type: string
        description: The title of the product.
      googleExpirationDate?:
        type: string
        description: Date on which the item expires in Google Shopping, in ISO 8601 format.
    description: The status of a product, i.e., information about a product computed asynchronously by the data quality analysis.
  ProductStatusDataQualityIssue:
    type: object
    properties:
      severity?:
        type: string
        description: The severity of the data quality issue.
      fetchStatus?:
        type: string
        description: The fetch status for landing_page_errors.
      location?:
        type: string
        description: The attribute name that is relevant for the issue.
      valueProvided?:
        type: string
        description: The value the attribute had at time of evaluation.
      detail?:
        type: string
        description: A more detailed error string.
      id?:
        type: string
        description: The id of the data quality issue.
      valueOnLandingPage?:
        type: string
        description: The value of that attribute that was found on the landing page
      timestamp?:
        type: string
        description: The time stamp of the data quality issue.
  ProductStatusDestinationStatus:
    type: object
    properties:
      approvalStatus?:
        type: string
        description: The destination's approval status.
      destination?:
        type: string
        description: The name of the destination
      intention?:
        type: string
        description: Whether the destination is required, excluded, selected by default or should be validated.
  ProductTax:
    type: object
    properties:
      country?:
        type: string
        description: The country within which the item is taxed, specified as a CLDR territory code.
      rate?:
        type: number
        format: double
        description: The percentage of tax rate that applies to the item price.
      locationId?:
        type: integer
        format: int64
        description: The numeric id of a location that the tax rate applies to as defined in the AdWords API.
      postalCode?:
        type: string
        description: 'The postal code range that the tax rate applies to, represented
          by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP
          codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460,
          94*-95*.'
      region?:
        type: string
        description: The geographic region to which the tax rate applies.
      taxShip?:
        type: boolean
        description: Set to true if tax is charged on shipping.
  ProductUnitPricingBaseMeasure:
    type: object
    properties:
      unit?:
        type: string
        description: The unit of the denominator.
      value?:
        type: integer
        format: int64
        description: The denominator of the unit price.
  ProductUnitPricingMeasure:
    type: object
    properties:
      unit?:
        type: string
        description: The unit of the measure.
      value?:
        type: number
        format: double
        description: The measure of an item.
  ProductsCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: ProductsCustomBatchRequestEntry
  ProductsCustomBatchRequestEntry:
    type: object
    properties:
      product?: Product
      method?:
        type: string
      productId?:
        type: string
        description: The ID of the product to get or delete. Only defined if the method is get or delete.
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch products request.
  ProductsCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: ProductsCustomBatchResponseEntry
      kind?:
        type: string
        default: content#productsCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productsCustomBatchResponse".'
  ProductsCustomBatchResponseEntry:
    type: object
    properties:
      product?: Product
      kind?:
        type: string
        default: content#productsCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productsCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch products response.
  ProductsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#productsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productsListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of products.
      resources?: Product[]
  ProductstatusesCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: ProductstatusesCustomBatchRequestEntry
  ProductstatusesCustomBatchRequestEntry:
    type: object
    properties:
      method?:
        type: string
      productId?:
        type: string
        description: The ID of the product whose status to get.
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
    description: A batch entry encoding a single non-batch productstatuses request.
  ProductstatusesCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: ProductstatusesCustomBatchResponseEntry
      kind?:
        type: string
        default: content#productstatusesCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productstatusesCustomBatchResponse".'
  ProductstatusesCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#productstatusesCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productstatusesCustomBatchResponseEntry".'
      productStatus?: ProductStatus
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry this entry responds to.
      errors?: Errors
    description: A batch entry encoding a single non-batch productstatuses response.
  ProductstatusesListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#productstatusesListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#productstatusesListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of products statuses.
      resources?: ProductStatus[]
  RateGroup:
    type: object
    properties:
      mainTable?: Table
      subtables?:
        type: array
        description: A list of subtables referred to by mainTable. Can only be set if mainTable is set.
        items: Table
      applicableShippingLabels?:
        type: array
        description: 'A list of shipping labels defining the products to which this
          rate group applies to. This is a disjunction: only one of the labels has
          to match for the rate group to apply. May only be empty for the last rate
          group of a service. Required.'
        items:
          type: string
      carrierRates?:
        type: array
        description: A list of carrier rates that can be referred to by mainTable or singleValue.
        items: CarrierRate
      singleValue?: Value
  Row:
    type: object
    properties:
      cells?:
        type: array
        description: The list of cells that constitute the row. Must have the same length as columnHeaders for two-dimensional tables, a length of 1 for one-dimensional tables. Required.
        items: Value
  Service:
    type: object
    properties:
      deliveryTime?: DeliveryTime
      rateGroups?:
        type: array
        description: Shipping rate group definitions. Only the last one is allowed to have an empty applicableShippingLabels, which means "everything else". The other applicableShippingLabels must not overlap.
        items: RateGroup
      deliveryCountry?:
        type: string
        description: The CLDR territory code of the country to which the service applies. Required.
      name?:
        type: string
        description: Free-form name of the service. Must be unique within target account. Required.
      active?:
        type: boolean
        description: A boolean exposing the active status of the shipping service. Required.
      currency?:
        type: string
        description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
  ShippingSettings:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.
      services?:
        type: array
        description: The target account's list of services. Optional.
        items: Service
      postalCodeGroups?:
        type: array
        description: A list of postal code groups that can be referred to in services. Optional.
        items: PostalCodeGroup
    description: The merchant account's shipping settings.
  ShippingsettingsCustomBatchRequest:
    type: object
    properties:
      entries?:
        type: array
        description: The request entries to be processed in the batch.
        items: ShippingsettingsCustomBatchRequestEntry
  ShippingsettingsCustomBatchRequestEntry:
    type: object
    properties:
      accountId?:
        type: integer
        format: int64
        description: The ID of the account for which to get/update account shipping settings.
      method?:
        type: string
      merchantId?:
        type: integer
        format: int64
        description: The ID of the managing account.
      batchId?:
        type: integer
        format: int32
        description: An entry ID, unique within the batch request.
      shippingSettings?: ShippingSettings
    description: A batch entry encoding a single non-batch accountshipping request.
  ShippingsettingsCustomBatchResponse:
    type: object
    properties:
      entries?:
        type: array
        description: The result of the execution of the batch requests.
        items: ShippingsettingsCustomBatchResponseEntry
      kind?:
        type: string
        default: content#shippingsettingsCustomBatchResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#shippingsettingsCustomBatchResponse".'
  ShippingsettingsCustomBatchResponseEntry:
    type: object
    properties:
      kind?:
        type: string
        default: content#shippingsettingsCustomBatchResponseEntry
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#shippingsettingsCustomBatchResponseEntry".'
      batchId?:
        type: integer
        format: int32
        description: The ID of the request entry to which this entry responds.
      errors?: Errors
      shippingSettings?: ShippingSettings
    description: A batch entry encoding a single non-batch shipping settings response.
  ShippingsettingsGetSupportedCarriersResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#shippingsettingsGetSupportedCarriersResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#shippingsettingsGetSupportedCarriersResponse".'
      carriers?:
        type: array
        description: A list of supported carriers. May be empty.
        items: CarriersCarrier
  ShippingsettingsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: content#shippingsettingsListResponse
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#shippingsettingsListResponse".'
      nextPageToken?:
        type: string
        description: The token for the retrieval of the next page of shipping settings.
      resources?: ShippingSettings[]
  Table:
    type: object
    properties:
      rowHeaders?: Headers
      columnHeaders?: Headers
      name?:
        type: string
        description: Name of the table. Required for subtables, ignored for the main table.
      rows?:
        type: array
        description: The list of rows that constitute the table. Must have the same length as rowHeaders. Required.
        items: Row
  TestOrder:
    type: object
    properties:
      lineItems?:
        type: array
        description: Line items that are ordered. At least one line item must be provided.
        items: TestOrderLineItem
      promotions?:
        type: array
        description: The details of the merchant provided promotions applied to the order. More details about the program are  here.
        items: OrderPromotion
      shippingCost?: Price
      predefinedDeliveryAddress?:
        type: string
        description: Identifier of one of the predefined delivery addresses for the delivery.
      shippingCostTax?: Price
      kind?:
        type: string
        default: content#testOrder
        description: 'Identifies what kind of resource this is. Value: the fixed string
          "content#testOrder".'
      paymentMethod?: TestOrderPaymentMethod
      customer?: TestOrderCustomer
      shippingOption?:
        type: string
        description: The requested shipping option.
  TestOrderCustomer:
    type: object
    properties:
      explicitMarketingPreference?:
        type: boolean
        description: If set, this indicates the user explicitly chose to opt in or out of providing marketing rights to the merchant. If unset, this indicates the user has already made this choice in a previous purchase, and was thus not shown the marketing right opt in/out checkbox during the Purchases on Google checkout flow. Optional.
      fullName?:
        type: string
        description: Full name of the customer.
      email?:
        type: string
        description: Email address of the customer.
  TestOrderLineItem:
    type: object
    properties:
      returnInfo?: OrderLineItemReturnInfo
      product?: TestOrderLineItemProduct
      shippingDetails?: OrderLineItemShippingDetails
      quantityOrdered?:
        type: integer
        format: int32
        description: Number of items ordered.
      unitTax?: Price
  TestOrderLineItemProduct:
    type: object
    properties:
      gtin?:
        type: string
        description: Global Trade Item Number (GTIN) of the item. Optional.
      variantAttributes?:
        type: array
        description: Variant attributes for the item. Optional.
        items: OrderLineItemProductVariantAttribute
      channel?:
        type: string
        description: The item's channel.
      mpn?:
        type: string
        description: Manufacturer Part Number (MPN) of the item. Optional.
      title?:
        type: string
        description: The title of the product.
      itemGroupId?:
        type: string
        description: Shared identifier for all variants of the same product. Optional.
      targetCountry?:
        type: string
        description: The CLDR territory code of the target country of the product.
      imageLink?:
        type: string
        description: URL of an image of the item.
      condition?:
        type: string
        description: Condition or state of the item.
      price?: Price
      contentLanguage?:
        type: string
        description: The two-letter ISO 639-1 language code for the item.
      offerId?:
        type: string
        description: An identifier of the item.
      brand?:
        type: string
        description: Brand of the item.
  TestOrderPaymentMethod:
    type: object
    properties:
      expirationYear?:
        type: integer
        format: int32
        description: The card expiration year (4-digit, e.g. 2015).
      lastFourDigits?:
        type: string
        description: The last four digits of the card number.
      expirationMonth?:
        type: integer
        format: int32
        description: The card expiration month (January = 1, February = 2 etc.).
      type?:
        type: string
        description: The type of instrument. Note that real orders might have different values than the four values accepted by createTestOrder.
      predefinedBillingAddress?:
        type: string
        description: The billing address.
  Value:
    type: object
    properties:
      noShipping?:
        type: boolean
        description: If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.
      flatRate?: Price
      carrierRateName?:
        type: string
        description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
      pricePercentage?:
        type: string
        description: A percentage of the price represented as a number in decimal notation (e.g., "5.4"). Can only be set if all other fields are not set.
      subtableName?:
        type: string
        description: The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.
    description: The single value of a rate group or the value of a rate group table's cell. Exactly one of noShipping, flatRate, pricePercentage, carrierRateName, subtableName must be set.
  Weight:
    type: object
    properties:
      unit?:
        type: string
        description: The weight unit.
      value?:
        type: string
        description: The weight represented as a number.
/{merchantId}:
  uriParameters:
    merchantId:
      type: integer
      format: int64
      description: The ID of the managing account.
  /accountshipping:
    /{accountId}:
      uriParameters:
        accountId:
          type: integer
          format: int64
          description: The ID of the account for which to get/update account shipping settings.
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the shipping settings of the account. This method supports patch semantics.
        displayName: Patch Accountshipping
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: AccountShipping
        responses:
          200:
            body:
              application/json: AccountShipping
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves the shipping settings of the account.
        displayName: Get Accountshipping
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: AccountShipping
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the shipping settings of the account.
        displayName: Update Accountshipping
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: AccountShipping
        responses:
          200:
            body:
              application/json: AccountShipping
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      displayName: List Accountshipping
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of shipping settings to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: AccountshippingListResponse
  /accounttax:
    /{accountId}:
      uriParameters:
        accountId:
          type: integer
          format: int64
          description: The ID of the account for which to get/update account tax settings.
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the tax settings of the account. This method supports patch semantics.
        displayName: Patch Accounttax
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: AccountTax
        responses:
          200:
            body:
              application/json: AccountTax
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves the tax settings of the account.
        displayName: Get Accounttax
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: AccountTax
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the tax settings of the account.
        displayName: Update Accounttax
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: AccountTax
        responses:
          200:
            body:
              application/json: AccountTax
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the tax settings of the sub-accounts in your Merchant Center account.
      displayName: List Accounttax
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of tax settings to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: AccounttaxListResponse
  /productstatuses:
    /{productId}:
      uriParameters:
        productId:
          type: string
          description: The ID of the product.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Gets the status of a product from your Merchant Center account.
        displayName: Get Productstatuses
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: ProductStatus
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the statuses of the products in your Merchant Center account.
      displayName: List Productstatuses
      is:
      - hasParameters
      queryParameters:
        includeInvalidInsertedItems?:
          type: boolean
          description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of product statuses to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: ProductstatusesListResponse
  /shippingsettings:
    /{accountId}:
      uriParameters:
        accountId:
          type: integer
          format: int64
          description: The ID of the account for which to get/update shipping settings.
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the shipping settings of the account. This method supports patch semantics.
        displayName: Patch Shippingsettings
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: ShippingSettings
        responses:
          200:
            body:
              application/json: ShippingSettings
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves the shipping settings of the account.
        displayName: Get Shippingsettings
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: ShippingSettings
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates the shipping settings of the account.
        displayName: Update Shippingsettings
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: ShippingSettings
        responses:
          200:
            body:
              application/json: ShippingSettings
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      displayName: List Shippingsettings
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of shipping settings to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: ShippingsettingsListResponse
  /supportedCarriers:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves supported carriers and carrier services for an account.
      displayName: Getsupportedcarriers Shippingsettings
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: ShippingsettingsGetSupportedCarriersResponse
  /accountstatuses:
    /{accountId}:
      uriParameters:
        accountId:
          type: integer
          format: int64
          description: The ID of the account.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves the status of a Merchant Center account.
        displayName: Get Accountstatuses
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: AccountStatus
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      displayName: List Accountstatuses
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of account statuses to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: AccountstatusesListResponse
  /datafeeds:
    /{datafeedId}:
      uriParameters:
        datafeedId:
          type: integer
          format: int64
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates a datafeed of your Merchant Center account. This method supports patch semantics.
        displayName: Patch Datafeeds
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: Datafeed
        responses:
          200:
            body:
              application/json: Datafeed
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves a datafeed from your Merchant Center account.
        displayName: Get Datafeeds
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Datafeed
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates a datafeed of your Merchant Center account.
        displayName: Update Datafeeds
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: Datafeed
        responses:
          200:
            body:
              application/json: Datafeed
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Deletes a datafeed from your Merchant Center account.
        displayName: Delete Datafeeds
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Registers a datafeed with your Merchant Center account.
      displayName: Insert Datafeeds
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: Datafeed
      responses:
        200:
          body:
            application/json: Datafeed
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the datafeeds in your Merchant Center account.
      displayName: List Datafeeds
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of products to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: DatafeedsListResponse
  /orders:
    /{orderId}:
      uriParameters:
        orderId:
          type: string
          description: The ID of the order to cancel.
      /cancel:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Cancels all line items in an order.
          displayName: Cancel Orders
          is:
          - hasParameters
          body:
            application/json: OrdersCancelRequest
          responses:
            200:
              body:
                application/json: OrdersCancelResponse
      /shipLineItems:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Marks line item(s) as shipped.
          displayName: Shiplineitems Orders
          is:
          - hasParameters
          body:
            application/json: OrdersShipLineItemsRequest
          responses:
            200:
              body:
                application/json: OrdersShipLineItemsResponse
      /cancelLineItem:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Cancels a line item.
          displayName: Cancellineitem Orders
          is:
          - hasParameters
          body:
            application/json: OrdersCancelLineItemRequest
          responses:
            200:
              body:
                application/json: OrdersCancelLineItemResponse
      /returnLineItem:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Returns a line item.
          displayName: Returnlineitem Orders
          is:
          - hasParameters
          body:
            application/json: OrdersReturnLineItemRequest
          responses:
            200:
              body:
                application/json: OrdersReturnLineItemResponse
      /acknowledge:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Marks an order as acknowledged.
          displayName: Acknowledge Orders
          is:
          - hasParameters
          body:
            application/json: OrdersAcknowledgeRequest
          responses:
            200:
              body:
                application/json: OrdersAcknowledgeResponse
      /updateMerchantOrderId:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Updates the merchant order ID for a given order.
          displayName: Updatemerchantorderid Orders
          is:
          - hasParameters
          body:
            application/json: OrdersUpdateMerchantOrderIdRequest
          responses:
            200:
              body:
                application/json: OrdersUpdateMerchantOrderIdResponse
      /refund:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Refund a portion of the order, up to the full amount paid.
          displayName: Refund Orders
          is:
          - hasParameters
          body:
            application/json: OrdersRefundRequest
          responses:
            200:
              body:
                application/json: OrdersRefundResponse
      /updateShipment:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Updates a shipment's status, carrier, and/or tracking ID.
          displayName: Updateshipment Orders
          is:
          - hasParameters
          body:
            application/json: OrdersUpdateShipmentRequest
          responses:
            200:
              body:
                application/json: OrdersUpdateShipmentResponse
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves an order from your Merchant Center account.
        displayName: Get Orders
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Order
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the orders in your Merchant Center account.
      displayName: List Orders
      is:
      - hasParameters
      queryParameters:
        placedDateStart?:
          type: string
          description: Obtains orders placed after this date (inclusively), in ISO 8601 format.
        acknowledged?:
          type: boolean
          description: |-
            Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.
            We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
        maxResults?:
          type: integer
          format: int32
          description: |-
            The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.
            Known issue: All List calls will return all Orders without limit regardless of the value of this field.
        placedDateEnd?:
          type: string
          description: Obtains orders placed before this date (exclusively), in ISO 8601 format.
        orderBy?:
          type: string
          description: The ordering of the returned list. The only supported value are placedDate desc and placedDate asc for now, which returns orders sorted by placement date. "placedDate desc" stands for listing orders by placement date, from oldest to most recent. "placedDate asc" stands for listing orders by placement date, from most recent to oldest. In future releases we'll support other sorting criteria.
          enum:
          - placedDate asc
          - placedDate desc
        statuses?:
          type: string
          description: Obtains orders that match any of the specified statuses. Multiple values can be specified with comma separation. Additionally, please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped , partiallyDelivered, delivered, partiallyReturned, returned, and canceled.
          enum:
          - active
          - canceled
          - completed
          - delivered
          - inProgress
          - partiallyDelivered
          - partiallyReturned
          - partiallyShipped
          - pendingShipment
          - returned
          - shipped
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: OrdersListResponse
  /testorders:
    /{orderId}:
      uriParameters:
        orderId:
          type: string
          description: The ID of the test order to modify.
      /advance:
        post:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/content
          description: Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment".
          displayName: Advancetestorder Orders
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: OrdersAdvanceTestOrderResponse
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Sandbox only. Creates a test order.
      displayName: Createtestorder Orders
      is:
      - hasParameters
      body:
        application/json: OrdersCreateTestOrderRequest
      responses:
        200:
          body:
            application/json: OrdersCreateTestOrderResponse
  /ordersbymerchantid:
    /{merchantOrderId}:
      uriParameters:
        merchantOrderId:
          type: string
          description: The merchant order id to be looked for.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves an order using merchant order id.
        displayName: Getbymerchantorderid Orders
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: OrdersGetByMerchantOrderIdResponse
  /testordertemplates:
    /{templateName}:
      uriParameters:
        templateName:
          type: string
          description: The name of the template to retrieve.
          enum:
          - template1
          - template1a
          - template1b
          - template2
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.
        displayName: Gettestordertemplate Orders
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: OrdersGetTestOrderTemplateResponse
  /accounts:
    /{accountId}:
      uriParameters:
        accountId:
          type: integer
          format: int64
          description: The ID of the account.
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates a Merchant Center account. This method supports patch semantics.
        displayName: Patch Accounts
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: Account
        responses:
          200:
            body:
              application/json: Account
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves a Merchant Center account.
        displayName: Get Accounts
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Account
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Updates a Merchant Center account.
        displayName: Update Accounts
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
        body:
          application/json: Account
        responses:
          200:
            body:
              application/json: Account
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Deletes a Merchant Center sub-account.
        displayName: Delete Accounts
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Creates a Merchant Center sub-account.
      displayName: Insert Accounts
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: Account
      responses:
        200:
          body:
            application/json: Account
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the sub-accounts in your Merchant Center account.
      displayName: List Accounts
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of accounts to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: AccountsListResponse
  /datafeedstatuses:
    /{datafeedId}:
      uriParameters:
        datafeedId:
          type: integer
          format: int64
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves the status of a datafeed from your Merchant Center account.
        displayName: Get Datafeedstatuses
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: DatafeedStatus
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      displayName: List Datafeedstatuses
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of products to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: DatafeedstatusesListResponse
  /inventory:
    /{storeCode}:
      uriParameters:
        storeCode:
          type: string
          description: The code of the store for which to update price and availability. Use online to update price and availability of an online product.
      /products:
        /{productId}:
          uriParameters:
            productId:
              type: string
              description: The ID of the product for which to update price and availability.
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/content
            description: Updates price and availability of a product in your Merchant Center account. This operation does not update the expiration date of the product.
            displayName: Set Inventory
            is:
            - hasParameters
            queryParameters:
              dryRun?:
                type: boolean
                description: Flag to run the request in dry-run mode.
            body:
              application/json: InventorySetRequest
            responses:
              200:
                body:
                  application/json: InventorySetResponse
  /products:
    /{productId}:
      uriParameters:
        productId:
          type: string
          description: The ID of the product.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Retrieves a product from your Merchant Center account.
        displayName: Get Products
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Product
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/content
        description: Deletes a product from your Merchant Center account.
        displayName: Delete Products
        is:
        - hasParameters
        queryParameters:
          dryRun?:
            type: boolean
            description: Flag to run the request in dry-run mode.
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Uploads a product to your Merchant Center account.
      displayName: Insert Products
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: Product
      responses:
        200:
          body:
            application/json: Product
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Lists the products in your Merchant Center account.
      displayName: List Products
      is:
      - hasParameters
      queryParameters:
        includeInvalidInsertedItems?:
          type: boolean
          description: Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of products to return in the response, used for paging.
        pageToken?:
          type: string
          description: The token returned by the previous request.
      responses:
        200:
          body:
            application/json: ProductsListResponse
/accountshipping:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      displayName: Custombatch Accountshipping
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: AccountshippingCustomBatchRequest
      responses:
        200:
          body:
            application/json: AccountshippingCustomBatchResponse
/accounttax:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      displayName: Custombatch Accounttax
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: AccounttaxCustomBatchRequest
      responses:
        200:
          body:
            application/json: AccounttaxCustomBatchResponse
/productstatuses:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Gets the statuses of multiple products in a single request.
      displayName: Custombatch Productstatuses
      is:
      - hasParameters
      body:
        application/json: ProductstatusesCustomBatchRequest
      responses:
        200:
          body:
            application/json: ProductstatusesCustomBatchResponse
/shippingsettings:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      displayName: Custombatch Shippingsettings
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: ShippingsettingsCustomBatchRequest
      responses:
        200:
          body:
            application/json: ShippingsettingsCustomBatchResponse
/accountstatuses:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      displayName: Custombatch Accountstatuses
      is:
      - hasParameters
      body:
        application/json: AccountstatusesCustomBatchRequest
      responses:
        200:
          body:
            application/json: AccountstatusesCustomBatchResponse
/datafeeds:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      displayName: Custombatch Datafeeds
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: DatafeedsCustomBatchRequest
      responses:
        200:
          body:
            application/json: DatafeedsCustomBatchResponse
/orders:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves or modifies multiple orders in a single request.
      displayName: Custombatch Orders
      is:
      - hasParameters
      body:
        application/json: OrdersCustomBatchRequest
      responses:
        200:
          body:
            application/json: OrdersCustomBatchResponse
/accounts:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.
      displayName: Custombatch Accounts
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: AccountsCustomBatchRequest
      responses:
        200:
          body:
            application/json: AccountsCustomBatchResponse
  /authinfo:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Returns information about the authenticated user.
      displayName: Authinfo Accounts
      is:
      - hasParameters
      responses:
        200:
          body:
            application/json: AccountsAuthInfoResponse
/datafeedstatuses:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      displayName: Custombatch Datafeedstatuses
      is:
      - hasParameters
      body:
        application/json: DatafeedstatusesCustomBatchRequest
      responses:
        200:
          body:
            application/json: DatafeedstatusesCustomBatchResponse
/inventory:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.
      displayName: Custombatch Inventory
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: InventoryCustomBatchRequest
      responses:
        200:
          body:
            application/json: InventoryCustomBatchResponse
/products:
  /batch:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/content
      description: Retrieves, inserts, and deletes multiple products in a single request.
      displayName: Custombatch Products
      is:
      - hasParameters
      queryParameters:
        dryRun?:
          type: boolean
          description: Flag to run the request in dry-run mode.
      body:
        application/json: ProductsCustomBatchRequest
      responses:
        200:
          body:
            application/json: ProductsCustomBatchResponse
