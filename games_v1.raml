#%RAML 1.0
title: Google Play Game Services API
version: v1
baseUri: https://www.googleapis.com/games/v1/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/games/services/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): games:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/drive.appdata
      - https://www.googleapis.com/auth/games
      - https://www.googleapis.com/auth/plus.login
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AchievementDefinition:
    type: object
    properties:
      achievementType?:
        type: string
        description: "The type of the achievement.\nPossible values are:  \n- \"STANDARD\"\
          \ - Achievement is either locked or unlocked. \n- \"INCREMENTAL\" - Achievement\
          \ is incremental."
      initialState?:
        type: string
        description: "The initial state of the achievement.\nPossible values are:\
          \  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement\
          \ is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."
      isUnlockedIconUrlDefault?:
        type: boolean
        description: Indicates whether the unlocked icon image being returned is a default image, or is game-provided.
      kind?:
        type: string
        default: games#achievementDefinition
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinition.
      experiencePoints?:
        type: integer
        format: int64
        description: Experience points which will be earned when unlocking this achievement.
      totalSteps?:
        type: integer
        format: int32
        description: The total steps for an incremental achievement.
      description?:
        type: string
        description: The description of the achievement.
      formattedTotalSteps?:
        type: string
        description: The total steps for an incremental achievement as a string.
      unlockedIconUrl?:
        type: string
        description: The image URL for the unlocked achievement icon.
      name?:
        type: string
        description: The name of the achievement.
      revealedIconUrl?:
        type: string
        description: The image URL for the revealed achievement icon.
      id?:
        type: string
        description: The ID of the achievement.
      isRevealedIconUrlDefault?:
        type: boolean
        description: Indicates whether the revealed icon image being returned is a default image, or is provided by the game.
    description: This is a JSON template for an achievement definition object.
  AchievementDefinitionsListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementDefinitionsListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementDefinitionsListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The achievement definitions.
        items: AchievementDefinition
    description: This is a JSON template for a list of achievement definition objects.
  AchievementIncrementResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementIncrementResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementIncrementResponse.
      currentSteps?:
        type: integer
        format: int32
        description: The current steps recorded for this incremental achievement.
      newlyUnlocked?:
        type: boolean
        description: Whether the current steps for the achievement has reached the number of steps required to unlock.
    description: This is a JSON template for an achievement increment response
  AchievementRevealResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementRevealResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementRevealResponse.
      currentState?:
        type: string
        description: "The current state of the achievement for which a reveal was\
          \ attempted. This might be UNLOCKED if the achievement was already unlocked.\n\
          Possible values are:  \n- \"REVEALED\" - Achievement is revealed. \n- \"\
          UNLOCKED\" - Achievement is unlocked."
    description: This is a JSON template for an achievement reveal response
  AchievementSetStepsAtLeastResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementSetStepsAtLeastResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementSetStepsAtLeastResponse.
      currentSteps?:
        type: integer
        format: int32
        description: The current steps recorded for this incremental achievement.
      newlyUnlocked?:
        type: boolean
        description: Whether the the current steps for the achievement has reached the number of steps required to unlock.
    description: This is a JSON template for an achievement set steps at least response.
  AchievementUnlockResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementUnlockResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUnlockResponse.
      newlyUnlocked?:
        type: boolean
        description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
    description: This is a JSON template for an achievement unlock response
  AchievementUpdateMultipleRequest:
    type: object
    properties:
      kind?:
        type: string
        default: games#achievementUpdateMultipleRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateMultipleRequest.
      updates?:
        type: array
        description: The individual achievement update requests.
        items: AchievementUpdateRequest
    description: This is a JSON template for a list of achievement update requests.
  AchievementUpdateMultipleResponse:
    type: object
    properties:
      updatedAchievements?:
        type: array
        description: The updated state of the achievements.
        items: AchievementUpdateResponse
      kind?:
        type: string
        default: games#achievementUpdateMultipleResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateListResponse.
    description: This is a JSON template for an achievement unlock response.
  AchievementUpdateRequest:
    type: object
    properties:
      incrementPayload?: GamesAchievementIncrement
      kind?:
        type: string
        default: games#achievementUpdateRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateRequest.
      achievementId?:
        type: string
        description: The achievement this update is being applied to.
      setStepsAtLeastPayload?: GamesAchievementSetStepsAtLeast
      updateType?:
        type: string
        description: "The type of update being applied.\nPossible values are:  \n\
          - \"REVEAL\" - Achievement is revealed. \n- \"UNLOCK\" - Achievement is\
          \ unlocked. \n- \"INCREMENT\" - Achievement is incremented. \n- \"SET_STEPS_AT_LEAST\"\
          \ - Achievement progress is set to at least the passed value."
    description: This is a JSON template for a request to update an achievement.
  AchievementUpdateResponse:
    type: object
    properties:
      updateOccurred?:
        type: boolean
        description: Whether the requested updates actually affected the achievement.
      kind?:
        type: string
        default: games#achievementUpdateResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#achievementUpdateResponse.
      achievementId?:
        type: string
        description: The achievement this update is was applied to.
      currentSteps?:
        type: integer
        format: int32
        description: The current steps recorded for this achievement if it is incremental.
      currentState?:
        type: string
        description: "The current state of the achievement.\nPossible values are:\
          \  \n- \"HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement\
          \ is revealed. \n- \"UNLOCKED\" - Achievement is unlocked."
      newlyUnlocked?:
        type: boolean
        description: Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
    description: This is a JSON template for an achievement update response.
  AggregateStats:
    type: object
    properties:
      min?:
        type: integer
        format: int64
        description: The minimum amount.
      max?:
        type: integer
        format: int64
        description: The maximum amount.
      kind?:
        type: string
        default: games#aggregateStats
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#aggregateStats.
      count?:
        type: integer
        format: int64
        description: The number of messages sent between a pair of peers.
      sum?:
        type: integer
        format: int64
        description: The total number of bytes sent for messages between a pair of peers.
    description: This is a JSON template for aggregate stats.
  AnonymousPlayer:
    type: object
    properties:
      displayName?:
        type: string
        description: The name to display for the anonymous player.
      kind?:
        type: string
        default: games#anonymousPlayer
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#anonymousPlayer.
      avatarImageUrl?:
        type: string
        description: The base URL for the image to display for the anonymous player.
    description: This is a JSON template for an anonymous player
  Application:
    type: object
    properties:
      lastUpdatedTimestamp?:
        type: integer
        format: int64
        description: The last updated timestamp of the application.
      enabledFeatures?:
        type: array
        description: "A list of features that have been enabled for the application.\n\
          Possible values are:  \n- \"SNAPSHOTS\" - Snapshots has been enabled"
        items:
          type: string
      instances?:
        type: array
        description: The instances of the application.
        items: Instance
      author?:
        type: string
        description: The author of the application.
      kind?:
        type: string
        default: games#application
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#application.
      description?:
        type: string
        description: The description of the application.
      assets?:
        type: array
        description: The assets of the application.
        items: ImageAsset
      achievement_count?:
        type: integer
        format: int32
        description: The number of achievements visible to the currently authenticated player.
      themeColor?:
        type: string
        description: A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. "E0E0E0").
      name?:
        type: string
        description: The name of the application.
      leaderboard_count?:
        type: integer
        format: int32
        description: The number of leaderboards visible to the currently authenticated player.
      id?:
        type: string
        description: The ID of the application.
      category?: ApplicationCategory
    description: This is a JSON template for the Application resource.
  ApplicationCategory:
    type: object
    properties:
      secondary?:
        type: string
        description: The secondary category.
      kind?:
        type: string
        default: games#applicationCategory
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#applicationCategory.
      primary?:
        type: string
        description: The primary category.
    description: This is a JSON template for an application category object.
  ApplicationVerifyResponse:
    type: object
    properties:
      player_id?:
        type: string
        description: The ID of the player that was issued the auth token used in this request.
      kind?:
        type: string
        default: games#applicationVerifyResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#applicationVerifyResponse.
      alternate_player_id?:
        type: string
        description: An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)
    description: This is a JSON template for a third party application verification response resource.
  Category:
    type: object
    properties:
      kind?:
        type: string
        default: games#category
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#category.
      experiencePoints?:
        type: integer
        format: int64
        description: Experience points earned in this category.
      category?:
        type: string
        description: The category name.
    description: This is a JSON template for data related to individual game categories.
  CategoryListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#categoryListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#categoryListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The list of categories with usage data.
        items: Category
    description: This is a JSON template for a list of category data objects.
  EventBatchRecordFailure:
    type: object
    properties:
      kind?:
        type: string
        default: games#eventBatchRecordFailure
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventBatchRecordFailure.
      range?: EventPeriodRange
      failureCause?:
        type: string
        description: "The cause for the update failure.\nPossible values are:  \n\
          - \"TOO_LARGE\": A batch request was issued with more events than are allowed\
          \ in a single batch. \n- \"TIME_PERIOD_EXPIRED\": A batch was sent with\
          \ data too far in the past to record. \n- \"TIME_PERIOD_SHORT\": A batch\
          \ was sent with a time range that was too short. \n- \"TIME_PERIOD_LONG\"\
          : A batch was sent with a time range that was too long. \n- \"ALREADY_UPDATED\"\
          : An attempt was made to record a batch of data which was already seen.\
          \ \n- \"RECORD_RATE_HIGH\": An attempt was made to record data faster than\
          \ the server will apply updates."
    description: This is a JSON template for a batch update failure resource.
  EventChild:
    type: object
    properties:
      kind?:
        type: string
        default: games#eventChild
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventChild.
      childId?:
        type: string
        description: The ID of the child event.
    description: This is a JSON template for an event child relationship resource.
  EventDefinition:
    type: object
    properties:
      visibility?:
        type: string
        description: "The visibility of event being tracked in this definition.\n\
          Possible values are:  \n- \"REVEALED\": This event should be visible to\
          \ all users. \n- \"HIDDEN\": This event should only be shown to users that\
          \ have recorded this event at least once."
      childEvents?:
        type: array
        description: A list of events that are a child of this event.
        items: EventChild
      displayName?:
        type: string
        description: The name to display for the event.
      kind?:
        type: string
        default: games#eventDefinition
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventDefinition.
      imageUrl?:
        type: string
        description: The base URL for the image that represents the event.
      description?:
        type: string
        description: Description of what this event represents.
      isDefaultImageUrl?:
        type: boolean
        description: Indicates whether the icon image being returned is a default image, or is game-provided.
      id?:
        type: string
        description: The ID of the event.
    description: This is a JSON template for an event definition resource.
  EventDefinitionListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#eventDefinitionListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventDefinitionListResponse.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The event definitions.
        items: EventDefinition
    description: This is a JSON template for a ListDefinitions response.
  EventPeriodRange:
    type: object
    properties:
      periodEndMillis?:
        type: integer
        format: int64
        description: The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).
      periodStartMillis?:
        type: integer
        format: int64
        description: The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).
      kind?:
        type: string
        default: games#eventPeriodRange
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventPeriodRange.
    description: This is a JSON template for an event period time range.
  EventPeriodUpdate:
    type: object
    properties:
      kind?:
        type: string
        default: games#eventPeriodUpdate
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventPeriodUpdate.
      timePeriod?: EventPeriodRange
      updates?:
        type: array
        description: The updates being made for this time period.
        items: EventUpdateRequest
    description: This is a JSON template for an event period update resource.
  EventRecordFailure:
    type: object
    properties:
      eventId?:
        type: string
        description: The ID of the event that was not updated.
      kind?:
        type: string
        default: games#eventRecordFailure
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventRecordFailure.
      failureCause?:
        type: string
        description: "The cause for the update failure.\nPossible values are:  \n\
          - \"NOT_FOUND\" - An attempt was made to set an event that was not defined.\
          \ \n- \"INVALID_UPDATE_VALUE\" - An attempt was made to increment an event\
          \ by a non-positive value."
    description: This is a JSON template for an event update failure resource.
  EventRecordRequest:
    type: object
    properties:
      kind?:
        type: string
        default: games#eventRecordRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventRecordRequest.
      requestId?:
        type: integer
        format: int64
        description: The request ID used to identify this attempt to record events.
      currentTimeMillis?:
        type: integer
        format: int64
        description: The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).
      timePeriods?:
        type: array
        description: A list of the time period updates being made in this request.
        items: EventPeriodUpdate
    description: This is a JSON template for an event period update resource.
  EventUpdateRequest:
    type: object
    properties:
      updateCount?:
        type: integer
        format: int64
        description: The number of times this event occurred in this time period.
      kind?:
        type: string
        default: games#eventUpdateRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventUpdateRequest.
      definitionId?:
        type: string
        description: The ID of the event being modified in this update.
    description: This is a JSON template for an event period update resource.
  EventUpdateResponse:
    type: object
    properties:
      eventFailures?:
        type: array
        description: Any failures updating a particular event.
        items: EventRecordFailure
      batchFailures?:
        type: array
        description: Any batch-wide failures which occurred applying updates.
        items: EventBatchRecordFailure
      playerEvents?:
        type: array
        description: The current status of any updated events
        items: PlayerEvent
      kind?:
        type: string
        default: games#eventUpdateResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#eventUpdateResponse.
    description: This is a JSON template for an event period update resource.
  GamesAchievementIncrement:
    type: object
    properties:
      kind?:
        type: string
        default: games#GamesAchievementIncrement
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#GamesAchievementIncrement.
      requestId?:
        type: integer
        format: int64
        description: The requestId associated with an increment to an achievement.
      steps?:
        type: integer
        format: int32
        description: The number of steps to be incremented.
    description: This is a JSON template for the payload to request to increment an achievement.
  GamesAchievementSetStepsAtLeast:
    type: object
    properties:
      kind?:
        type: string
        default: games#GamesAchievementSetStepsAtLeast
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#GamesAchievementSetStepsAtLeast.
      steps?:
        type: integer
        format: int32
        description: The minimum number of steps for the achievement to be set to.
    description: This is a JSON template for the payload to request to increment an achievement.
  ImageAsset:
    type: object
    properties:
      kind?:
        type: string
        default: games#imageAsset
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#imageAsset.
      name?:
        type: string
        description: The name of the asset.
      width?:
        type: integer
        format: int32
        description: The width of the asset.
      url?:
        type: string
        description: The URL of the asset.
      height?:
        type: integer
        format: int32
        description: The height of the asset.
    description: This is a JSON template for an image asset object.
  Instance:
    type: object
    properties:
      acquisitionUri?:
        type: string
        description: URI which shows where a user can acquire this instance.
      turnBasedPlay?:
        type: boolean
        description: Flag to show if this game instance supports turn based play.
      webInstance?: InstanceWebDetails
      iosInstance?: InstanceIosDetails
      kind?:
        type: string
        default: games#instance
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#instance.
      name?:
        type: string
        description: Localized display name.
      platformType?:
        type: string
        description: "The platform type.\nPossible values are:  \n- \"ANDROID\" -\
          \ Instance is for Android. \n- \"IOS\" - Instance is for iOS \n- \"WEB_APP\"\
          \ - Instance is for Web App."
      androidInstance?: InstanceAndroidDetails
      realtimePlay?:
        type: boolean
        description: Flag to show if this game instance supports realtime play.
    description: This is a JSON template for the Instance resource.
  InstanceAndroidDetails:
    type: object
    properties:
      kind?:
        type: string
        default: games#instanceAndroidDetails
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#instanceAndroidDetails.
      enablePiracyCheck?:
        type: boolean
        description: Flag indicating whether the anti-piracy check is enabled.
      packageName?:
        type: string
        description: Android package name which maps to Google Play URL.
      preferred?:
        type: boolean
        description: Indicates that this instance is the default for new installations.
    description: This is a JSON template for the Android instance details resource.
  InstanceIosDetails:
    type: object
    properties:
      preferredForIphone?:
        type: boolean
        description: Indicates that this instance is the default for new installations on iPhone devices.
      kind?:
        type: string
        default: games#instanceIosDetails
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#instanceIosDetails.
      preferredForIpad?:
        type: boolean
        description: Indicates that this instance is the default for new installations on iPad devices.
      supportIphone?:
        type: boolean
        description: Flag to indicate if this instance supports iPhone.
      bundleIdentifier?:
        type: string
        description: Bundle identifier.
      supportIpad?:
        type: boolean
        description: Flag to indicate if this instance supports iPad.
      itunesAppId?:
        type: string
        description: iTunes App ID.
    description: This is a JSON template for the iOS details resource.
  InstanceWebDetails:
    type: object
    properties:
      kind?:
        type: string
        default: games#instanceWebDetails
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#instanceWebDetails.
      launchUrl?:
        type: string
        description: Launch URL for the game.
      preferred?:
        type: boolean
        description: Indicates that this instance is the default for new installations.
    description: This is a JSON template for the Web details resource.
  Leaderboard:
    type: object
    properties:
      isIconUrlDefault?:
        type: boolean
        description: Indicates whether the icon image being returned is a default image, or is game-provided.
      kind?:
        type: string
        default: games#leaderboard
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboard.
      name?:
        type: string
        description: The name of the leaderboard.
      iconUrl?:
        type: string
        description: The icon for the leaderboard.
      id?:
        type: string
        description: The leaderboard ID.
      order?:
        type: string
        description: "How scores are ordered.\nPossible values are:  \n- \"LARGER_IS_BETTER\"\
          \ - Larger values are better; scores are sorted in descending order. \n\
          - \"SMALLER_IS_BETTER\" - Smaller values are better; scores are sorted in\
          \ ascending order."
    description: This is a JSON template for the Leaderboard resource.
  LeaderboardEntry:
    type: object
    properties:
      formattedScoreRank?:
        type: string
        description: The localized string for the rank of this score for this leaderboard.
      formattedScore?:
        type: string
        description: The localized string for the numerical value of this score.
      kind?:
        type: string
        default: games#leaderboardEntry
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardEntry.
      scoreTag?:
        type: string
        description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
      scoreRank?:
        type: integer
        format: int64
        description: The rank of this score for this leaderboard.
      timeSpan?:
        type: string
        description: "The time span of this high score.\nPossible values are:  \n\
          - \"ALL_TIME\" - The score is an all-time high score. \n- \"WEEKLY\" - The\
          \ score is a weekly high score. \n- \"DAILY\" - The score is a daily high\
          \ score."
      writeTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
      player?: Player
      scoreValue?:
        type: integer
        format: int64
        description: The numerical value of this score.
    description: This is a JSON template for the Leaderboard Entry resource.
  LeaderboardListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#leaderboardListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The leaderboards.
        items: Leaderboard
    description: This is a JSON template for a list of leaderboard objects.
  LeaderboardScoreRank:
    type: object
    properties:
      formattedNumScores?:
        type: string
        description: The number of scores in the leaderboard as a string.
      kind?:
        type: string
        default: games#leaderboardScoreRank
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScoreRank.
      numScores?:
        type: integer
        format: int64
        description: The number of scores in the leaderboard.
      rank?:
        type: integer
        format: int64
        description: The rank in the leaderboard.
      formattedRank?:
        type: string
        description: The rank in the leaderboard as a string.
    description: This is a JSON template for a score rank in a leaderboard.
  LeaderboardScores:
    type: object
    properties:
      prevPageToken?:
        type: string
        description: The pagination token for the previous page of results.
      playerScore?: LeaderboardEntry
      kind?:
        type: string
        default: games#leaderboardScores
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#leaderboardScores.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      numScores?:
        type: integer
        format: int64
        description: The total number of scores in the leaderboard.
      items?:
        type: array
        description: The scores in the leaderboard.
        items: LeaderboardEntry
    description: This is a JSON template for a ListScores response.
  MetagameConfig:
    type: object
    properties:
      playerLevels?:
        type: array
        description: The list of player levels.
        items: PlayerLevel
      kind?:
        type: string
        default: games#metagameConfig
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#metagameConfig.
      currentVersion?:
        type: integer
        format: int32
        description: Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.
    description: This is a JSON template for the metagame config resource
  NetworkDiagnostics:
    type: object
    properties:
      networkOperatorCode?:
        type: string
        description: 'The MCC+MNC code for the client''s network connection. On Android:
          http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperator()
          On iOS, see: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html'
      registrationLatencyMillis?:
        type: integer
        format: int32
        description: The amount of time in milliseconds it took for the client to establish a connection with the XMPP server.
      androidNetworkSubtype?:
        type: integer
        format: int32
        description: The Android network subtype.
      kind?:
        type: string
        default: games#networkDiagnostics
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#networkDiagnostics.
      androidNetworkType?:
        type: integer
        format: int32
        description: The Android network type.
      iosNetworkType?:
        type: integer
        format: int32
        description: iOS network type as defined in Reachability.h.
      networkOperatorName?:
        type: string
        description: 'The name of the carrier of the client''s network connection.
          On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperatorName()
          On iOS: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/instp/CTCarrier/carrierName'
    description: This is a JSON template for network diagnostics reported for a client.
  ParticipantResult:
    type: object
    properties:
      participantId?:
        type: string
        description: The ID of the participant.
      result?:
        type: string
        description: "The result of the participant for this match.\nPossible values\
          \ are:  \n- \"MATCH_RESULT_WIN\" - The participant won the match. \n- \"\
          MATCH_RESULT_LOSS\" - The participant lost the match. \n- \"MATCH_RESULT_TIE\"\
          \ - The participant tied the match. \n- \"MATCH_RESULT_NONE\" - There was\
          \ no winner for the match (nobody wins or loses this kind of game.) \n-\
          \ \"MATCH_RESULT_DISCONNECT\" - The participant disconnected / left during\
          \ the match. \n- \"MATCH_RESULT_DISAGREED\" - Different clients reported\
          \ different results for this participant."
      kind?:
        type: string
        default: games#participantResult
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#participantResult.
      placing?:
        type: integer
        format: int32
        description: The placement or ranking of the participant in the match results; a number from one to the number of participants in the match. Multiple participants may have the same placing value in case of a type.
    description: This is a JSON template for a result for a match participant.
  PeerChannelDiagnostics:
    type: object
    properties:
      bytesReceived?: AggregateStats
      kind?:
        type: string
        default: games#peerChannelDiagnostics
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#peerChannelDiagnostics.
      numMessagesReceived?:
        type: integer
        format: int32
        description: Number of messages received.
      numMessagesSent?:
        type: integer
        format: int32
        description: Number of messages sent.
      numSendFailures?:
        type: integer
        format: int32
        description: Number of send failures.
      bytesSent?: AggregateStats
      roundtripLatencyMillis?: AggregateStats
      numMessagesLost?:
        type: integer
        format: int32
        description: Number of messages lost.
    description: This is a JSON template for peer channel diagnostics.
  PeerSessionDiagnostics:
    type: object
    properties:
      participantId?:
        type: string
        description: The participant ID of the peer.
      reliableChannel?: PeerChannelDiagnostics
      kind?:
        type: string
        default: games#peerSessionDiagnostics
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#peerSessionDiagnostics.
      connectedTimestampMillis?:
        type: integer
        format: int64
        description: Connected time in milliseconds.
      unreliableChannel?: PeerChannelDiagnostics
    description: This is a JSON template for peer session diagnostics.
  Played:
    type: object
    properties:
      autoMatched?:
        type: boolean
        description: True if the player was auto-matched with the currently authenticated user.
      kind?:
        type: string
        default: games#played
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#played.
      timeMillis?:
        type: integer
        format: int64
        description: The last time the player played the game in milliseconds since the epoch in UTC.
    description: This is a JSON template for metadata about a player playing a game with the currently authenticated user.
  Player:
    type: object
    properties:
      lastPlayedWith?: Played
      experienceInfo?: PlayerExperienceInfo
      bannerUrlLandscape?:
        type: string
        description: The url to the landscape mode player banner image.
      profileSettings?: ProfileSettings
      displayName?:
        type: string
        description: The name to display for the player.
      kind?:
        type: string
        default: games#player
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#player.
      avatarImageUrl?:
        type: string
        description: The base URL for the image that represents the player.
      name?:
        type: object
        properties:
          familyName?:
            type: string
            description: The family name of this player. In some places, this is known as the last name.
          givenName?:
            type: string
            description: The given name of this player. In some places, this is known as the first name.
        description: An object representation of the individual components of the player's name. For some players, these fields may not be present.
      originalPlayerId?:
        type: string
        description: The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.
      bannerUrlPortrait?:
        type: string
        description: The url to the portrait mode player banner image.
      title?:
        type: string
        description: The player's title rewarded for their game activities.
      playerId?:
        type: string
        description: The ID of the player.
    description: This is a JSON template for a Player resource.
  PlayerAchievement:
    type: object
    properties:
      achievementState?:
        type: string
        description: "The state of the achievement.\nPossible values are:  \n- \"\
          HIDDEN\" - Achievement is hidden. \n- \"REVEALED\" - Achievement is revealed.\
          \ \n- \"UNLOCKED\" - Achievement is unlocked."
      lastUpdatedTimestamp?:
        type: integer
        format: int64
        description: The timestamp of the last modification to this achievement's state.
      formattedCurrentStepsString?:
        type: string
        description: The current steps for an incremental achievement as a string.
      kind?:
        type: string
        default: games#playerAchievement
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievement.
      experiencePoints?:
        type: integer
        format: int64
        description: Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
      currentSteps?:
        type: integer
        format: int32
        description: The current steps for an incremental achievement.
      id?:
        type: string
        description: The ID of the achievement.
    description: This is a JSON template for an achievement object.
  PlayerAchievementListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#playerAchievementListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerAchievementListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The achievements.
        items: PlayerAchievement
    description: This is a JSON template for a list of achievement objects.
  PlayerEvent:
    type: object
    properties:
      formattedNumEvents?:
        type: string
        description: The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console.
      kind?:
        type: string
        default: games#playerEvent
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerEvent.
      numEvents?:
        type: integer
        format: int64
        description: The current number of times this event has occurred.
      definitionId?:
        type: string
        description: The ID of the event definition.
      playerId?:
        type: string
        description: The ID of the player.
    description: This is a JSON template for an event status resource.
  PlayerEventListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#playerEventListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerEventListResponse.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The player events.
        items: PlayerEvent
    description: This is a JSON template for a ListByPlayer response.
  PlayerExperienceInfo:
    type: object
    properties:
      currentLevel?: PlayerLevel
      currentExperiencePoints?:
        type: integer
        format: int64
        description: The current number of experience points for the player.
      kind?:
        type: string
        default: games#playerExperienceInfo
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerExperienceInfo.
      lastLevelUpTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp when the player was leveled up, in millis since Unix epoch UTC.
      nextLevel?: PlayerLevel
    description: This is a JSON template for 1P/3P metadata about the player's experience.
  PlayerLeaderboardScore:
    type: object
    properties:
      leaderboard_id?:
        type: string
        description: The ID of the leaderboard this score is in.
      socialRank?: LeaderboardScoreRank
      writeTimestamp?:
        type: integer
        format: int64
        description: The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
      kind?:
        type: string
        default: games#playerLeaderboardScore
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScore.
      publicRank?: LeaderboardScoreRank
      scoreString?:
        type: string
        description: The formatted value of this score.
      scoreTag?:
        type: string
        description: Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
      timeSpan?:
        type: string
        description: "The time span of this score.\nPossible values are:  \n- \"ALL_TIME\"\
          \ - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly\
          \ score. \n- \"DAILY\" - The score is a daily score."
      scoreValue?:
        type: integer
        format: int64
        description: The numerical value of this score.
    description: This is a JSON template for a player leaderboard score object.
  PlayerLeaderboardScoreListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#playerLeaderboardScoreListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerLeaderboardScoreListResponse.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The leaderboard scores.
        items: PlayerLeaderboardScore
      player?: Player
    description: This is a JSON template for a list of player leaderboard scores.
  PlayerLevel:
    type: object
    properties:
      level?:
        type: integer
        format: int32
        description: The level for the user.
      kind?:
        type: string
        default: games#playerLevel
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerLevel.
      minExperiencePoints?:
        type: integer
        format: int64
        description: The minimum experience points for this level.
      maxExperiencePoints?:
        type: integer
        format: int64
        description: The maximum experience points for this level.
    description: This is a JSON template for 1P/3P metadata about a user's level.
  PlayerListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#playerListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The players.
        items: Player
    description: This is a JSON template for a third party player list response.
  PlayerScore:
    type: object
    properties:
      score?:
        type: integer
        format: int64
        description: The numerical value for this player score.
      formattedScore?:
        type: string
        description: The formatted score for this player score.
      kind?:
        type: string
        default: games#playerScore
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerScore.
      scoreTag?:
        type: string
        description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
      timeSpan?:
        type: string
        description: "The time span for this player score.\nPossible values are: \
          \ \n- \"ALL_TIME\" - The score is an all-time score. \n- \"WEEKLY\" - The\
          \ score is a weekly score. \n- \"DAILY\" - The score is a daily score."
    description: This is a JSON template for a player score.
  PlayerScoreListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#playerScoreListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreListResponse.
      submittedScores?:
        type: array
        description: The score submissions statuses.
        items: PlayerScoreResponse
    description: This is a JSON template for a list of score submission statuses.
  PlayerScoreResponse:
    type: object
    properties:
      unbeatenScores?:
        type: array
        description: The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's DAILY score, but not better than the player's scores for the WEEKLY or ALL_TIME time spans.
        items: PlayerScore
      formattedScore?:
        type: string
        description: The formatted value of the submitted score.
      kind?:
        type: string
        default: games#playerScoreResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreResponse.
      scoreTag?:
        type: string
        description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
      beatenScoreTimeSpans?:
        type: array
        description: "The time spans where the submitted score is better than the\
          \ existing score for that time span.\nPossible values are:  \n- \"ALL_TIME\"\
          \ - The score is an all-time score. \n- \"WEEKLY\" - The score is a weekly\
          \ score. \n- \"DAILY\" - The score is a daily score."
        items:
          type: string
      leaderboardId?:
        type: string
        description: The leaderboard ID that this score was submitted to.
    description: This is a JSON template for a list of leaderboard entry resources.
  PlayerScoreSubmissionList:
    type: object
    properties:
      scores?:
        type: array
        description: The score submissions.
        items: ScoreSubmission
      kind?:
        type: string
        default: games#playerScoreSubmissionList
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#playerScoreSubmissionList.
    description: This is a JSON template for a list of score submission requests
  ProfileSettings:
    type: object
    properties:
      kind?:
        type: string
        default: games#profileSettings
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#profileSettings.
      profileVisible?:
        type: boolean
        description: The player's current profile visibility. This field is visible to both 1P and 3P APIs.
    description: This is a JSON template for profile settings
  PushToken:
    type: object
    properties:
      clientRevision?:
        type: string
        description: "The revision of the client SDK used by your application, in\
          \ the same format that's used by revisions.check. Used to send backward\
          \ compatible messages. Format: [PLATFORM_TYPE]:[VERSION_NUMBER]. Possible\
          \ values of PLATFORM_TYPE are:  \n- IOS - Push token is for iOS"
      kind?:
        type: string
        default: games#pushToken
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#pushToken.
      language?:
        type: string
        description: The preferred language for notifications that are sent using this token.
      id?: PushTokenId
    description: This is a JSON template for a push token resource.
  PushTokenId:
    type: object
    properties:
      kind?:
        type: string
        default: games#pushTokenId
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#pushTokenId.
      ios?:
        type: object
        properties:
          apns_environment?:
            type: string
            description: Indicates whether this token should be used for the production or sandbox APNS server.
          apns_device_token?:
            type: string
            description: Device token supplied by an iOS system call to register for remote notifications. Encode this field as web-safe base64.
        description: A push token ID for iOS devices.
    description: This is a JSON template for a push token ID resource.
  Quest:
    type: object
    properties:
      notifyTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which the user should be notified that the quest will end soon in milliseconds since the epoch in UTC.
      isDefaultBannerUrl?:
        type: boolean
        description: Indicates whether the banner image being returned is a default image, or is game-provided.
      kind?:
        type: string
        default: games#quest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#quest.
      bannerUrl?:
        type: string
        description: The banner image URL for the quest.
      description?:
        type: string
        description: The description of the quest.
      endTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which the quest ceases to be active in milliseconds since the epoch in UTC.
      lastUpdatedTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which the quest was last updated by the user in milliseconds since the epoch in UTC. Only present if the player has accepted the quest.
      isDefaultIconUrl?:
        type: boolean
        description: Indicates whether the icon image being returned is a default image, or is game-provided.
      startTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which the quest becomes active in milliseconds since the epoch in UTC.
      name?:
        type: string
        description: The name of the quest.
      iconUrl?:
        type: string
        description: The icon image URL for the quest.
      id?:
        type: string
        description: The ID of the quest.
      state?:
        type: string
        description: "The state of the quest.\nPossible values are:  \n- \"UPCOMING\"\
          : The quest is upcoming. The user can see the quest, but cannot accept it\
          \ until it is open. \n- \"OPEN\": The quest is currently open and may be\
          \ accepted at this time. \n- \"ACCEPTED\": The user is currently participating\
          \ in this quest. \n- \"COMPLETED\": The user has completed the quest. \n\
          - \"FAILED\": The quest was attempted but was not completed before the deadline\
          \ expired. \n- \"EXPIRED\": The quest has expired and was not accepted.\
          \ \n- \"DELETED\": The quest should be deleted from the local database."
      applicationId?:
        type: string
        description: The ID of the application this quest is part of.
      milestones?:
        type: array
        description: The quest milestones.
        items: QuestMilestone
      acceptedTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which the user accepted the quest in milliseconds since the epoch in UTC. Only present if the player has accepted the quest.
    description: This is a JSON template for a Quest resource.
  QuestContribution:
    type: object
    properties:
      kind?:
        type: string
        default: games#questContribution
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#questContribution.
      formattedValue?:
        type: string
        description: The formatted value of the contribution as a string. Format depends on the configuration for the associated event definition in the Play Games Developer Console.
      value?:
        type: integer
        format: int64
        description: The value of the contribution.
    description: This is a JSON template for a Quest Criterion Contribution resource.
  QuestCriterion:
    type: object
    properties:
      eventId?:
        type: string
        description: The ID of the event the criterion corresponds to.
      completionContribution?: QuestContribution
      kind?:
        type: string
        default: games#questCriterion
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#questCriterion.
      initialPlayerProgress?: QuestContribution
      currentContribution?: QuestContribution
    description: This is a JSON template for a Quest Criterion resource.
  QuestListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#questListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#questListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results.
      items?:
        type: array
        description: The quests.
        items: Quest
    description: This is a JSON template for a list of quest objects.
  QuestMilestone:
    type: object
    properties:
      completionRewardData?:
        type: string
        description: The completion reward data of the milestone, represented as a Base64-encoded string. This is a developer-specified binary blob with size between 0 and 2 KB before encoding.
      criteria?:
        type: array
        description: The criteria of the milestone.
        items: QuestCriterion
      kind?:
        type: string
        default: games#questMilestone
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#questMilestone.
      id?:
        type: string
        description: The milestone ID.
      state?:
        type: string
        description: "The current state of the milestone.\nPossible values are:  \n\
          - \"COMPLETED_NOT_CLAIMED\" - The milestone is complete, but has not yet\
          \ been claimed. \n- \"CLAIMED\" - The milestone is complete and has been\
          \ claimed. \n- \"NOT_COMPLETED\" - The milestone has not yet been completed.\
          \ \n- \"NOT_STARTED\" - The milestone is for a quest that has not yet been\
          \ accepted."
    description: This is a JSON template for a Quest Milestone resource.
  RevisionCheckResponse:
    type: object
    properties:
      apiVersion?:
        type: string
        description: The version of the API this client revision should use when calling API methods.
      kind?:
        type: string
        default: games#revisionCheckResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#revisionCheckResponse.
      revisionStatus?:
        type: string
        description: "The result of the revision check.\nPossible values are:  \n\
          - \"OK\" - The revision being used is current. \n- \"DEPRECATED\" - There\
          \ is currently a newer version available, but the revision being used still\
          \ works. \n- \"INVALID\" - The revision being used is not supported in any\
          \ released version."
    description: This is a JSON template for the result of checking a revision.
  Room:
    type: object
    properties:
      kind?:
        type: string
        default: games#room
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#room.
      description?:
        type: string
        description: This short description is generated by our servers and worded relative to the player requesting the room. It is intended to be displayed when the room is shown in a list (that is, an invitation to a room.)
      roomId?:
        type: string
        description: Globally unique ID for a room.
      autoMatchingCriteria?: RoomAutoMatchingCriteria
      lastUpdateDetails?: RoomModification
      roomStatusVersion?:
        type: integer
        format: int32
        description: 'The version of the room status: an increasing counter, used
          by the client to ignore out-of-order updates to room status.'
      autoMatchingStatus?: RoomAutoMatchStatus
      inviterId?:
        type: string
        description: The ID of the participant that invited the user to the room. Not set if the user was not invited to the room.
      variant?:
        type: integer
        format: int32
        description: The variant / mode of the application being played; can be any integer value, or left blank.
      applicationId?:
        type: string
        description: The ID of the application being played.
      creationDetails?: RoomModification
      participants?:
        type: array
        description: The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.
        items: RoomParticipant
      status?:
        type: string
        description: "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\"\
          \ - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\"\
          \ - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\"\
          \ - Players have joined and are connecting to each other (either before\
          \ or after auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined\
          \ and connected to each other. \n- \"ROOM_DELETED\" - The room should no\
          \ longer be shown on the client. Returned in sync calls when a player joins\
          \ a room (as a tombstone), or for rooms where all joined participants have\
          \ left."
    description: This is a JSON template for a room resource object.
  RoomAutoMatchStatus:
    type: object
    properties:
      waitEstimateSeconds?:
        type: integer
        format: int32
        description: An estimate for the amount of time (in seconds) that auto-matching is expected to take to complete.
      kind?:
        type: string
        default: games#roomAutoMatchStatus
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchStatus.
    description: This is a JSON template for status of room automatching that is in progress.
  RoomAutoMatchingCriteria:
    type: object
    properties:
      exclusiveBitmask?:
        type: integer
        format: int64
        description: A bitmask indicating when auto-matches are valid. When ANDed with other exclusive bitmasks, the result must be zero. Can be used to support exclusive roles within a game.
      kind?:
        type: string
        default: games#roomAutoMatchingCriteria
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomAutoMatchingCriteria.
      minAutoMatchingPlayers?:
        type: integer
        format: int32
        description: The minimum number of players that should be added to the room by auto-matching.
      maxAutoMatchingPlayers?:
        type: integer
        format: int32
        description: The maximum number of players that should be added to the room by auto-matching.
    description: This is a JSON template for a room auto-match criteria object.
  RoomClientAddress:
    type: object
    properties:
      xmppAddress?:
        type: string
        description: The XMPP address of the client on the Google Games XMPP network.
      kind?:
        type: string
        default: games#roomClientAddress
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomClientAddress.
    description: This is a JSON template for the client address when setting up a room.
  RoomCreateRequest:
    type: object
    properties:
      capabilities?:
        type: array
        description: The capabilities that this client supports for realtime communication.
        items:
          type: string
      invitedPlayerIds?:
        type: array
        description: The player IDs to invite to the room.
        items:
          type: string
      kind?:
        type: string
        default: games#roomCreateRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomCreateRequest.
      requestId?:
        type: integer
        format: int64
        description: A randomly generated numeric ID. This number is used at the server to ensure that the request is handled correctly across retries.
      networkDiagnostics?: NetworkDiagnostics
      variant?:
        type: integer
        format: int32
        description: The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.
      clientAddress?: RoomClientAddress
      autoMatchingCriteria?: RoomAutoMatchingCriteria
    description: This is a JSON template for a room creation request.
  RoomJoinRequest:
    type: object
    properties:
      capabilities?:
        type: array
        description: The capabilities that this client supports for realtime communication.
        items:
          type: string
      kind?:
        type: string
        default: games#roomJoinRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomJoinRequest.
      networkDiagnostics?: NetworkDiagnostics
      clientAddress?: RoomClientAddress
    description: This is a JSON template for a join room request.
  RoomLeaveDiagnostics:
    type: object
    properties:
      socketsUsed?:
        type: boolean
        description: Whether or not sockets were used.
      networkOperatorCode?:
        type: string
        description: 'The MCC+MNC code for the client''s network connection. On Android:
          http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperator()
          On iOS, see: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html'
      peerSession?:
        type: array
        description: Diagnostics about all peer sessions.
        items: PeerSessionDiagnostics
      androidNetworkSubtype?:
        type: integer
        format: int32
        description: Android network subtype. http://developer.android.com/reference/android/net/NetworkInfo.html#getSubtype()
      kind?:
        type: string
        default: games#roomLeaveDiagnostics
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveDiagnostics.
      androidNetworkType?:
        type: integer
        format: int32
        description: Android network type. http://developer.android.com/reference/android/net/NetworkInfo.html#getType()
      iosNetworkType?:
        type: integer
        format: int32
        description: iOS network type as defined in Reachability.h.
      networkOperatorName?:
        type: string
        description: 'The name of the carrier of the client''s network connection.
          On Android: http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkOperatorName()
          On iOS: https://developer.apple.com/library/ios/documentation/NetworkingInternet/Reference/CTCarrier/Reference/Reference.html#//apple_ref/occ/instp/CTCarrier/carrierName'
    description: This is a JSON template for room leave diagnostics.
  RoomLeaveRequest:
    type: object
    properties:
      reason?:
        type: string
        description: "Reason for leaving the match.\nPossible values are:  \n- \"\
          PLAYER_LEFT\" - The player chose to leave the room.. \n- \"GAME_LEFT\" -\
          \ The game chose to remove the player from the room. \n- \"REALTIME_ABANDONED\"\
          \ - The player switched to another application and abandoned the room. \n\
          - \"REALTIME_PEER_CONNECTION_FAILURE\" - The client was unable to establish\
          \ a connection to other peer(s). \n- \"REALTIME_SERVER_CONNECTION_FAILURE\"\
          \ - The client was unable to communicate with the server. \n- \"REALTIME_SERVER_ERROR\"\
          \ - The client received an error response when it tried to communicate with\
          \ the server. \n- \"REALTIME_TIMEOUT\" - The client timed out while waiting\
          \ for a room. \n- \"REALTIME_CLIENT_DISCONNECTING\" - The client disconnects\
          \ without first calling Leave. \n- \"REALTIME_SIGN_OUT\" - The user signed\
          \ out of G+ while in the room. \n- \"REALTIME_GAME_CRASHED\" - The game\
          \ crashed. \n- \"REALTIME_ROOM_SERVICE_CRASHED\" - RoomAndroidService crashed.\
          \ \n- \"REALTIME_DIFFERENT_CLIENT_ROOM_OPERATION\" - Another client is trying\
          \ to enter a room. \n- \"REALTIME_SAME_CLIENT_ROOM_OPERATION\" - The same\
          \ client is trying to enter a new room."
      leaveDiagnostics?: RoomLeaveDiagnostics
      kind?:
        type: string
        default: games#roomLeaveRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomLeaveRequest.
    description: This is a JSON template for a leave room request.
  RoomList:
    type: object
    properties:
      kind?:
        type: string
        default: games#roomList
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomList.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The rooms.
        items: Room
    description: This is a JSON template for a list of rooms.
  RoomModification:
    type: object
    properties:
      participantId?:
        type: string
        description: The ID of the participant that modified the room.
      kind?:
        type: string
        default: games#roomModification
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomModification.
      modifiedTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which they modified the room, in milliseconds since the epoch in UTC.
    description: This is a JSON template for room modification metadata.
  RoomP2PStatus:
    type: object
    properties:
      participantId?:
        type: string
        description: The ID of the participant.
      error_reason?:
        type: string
        description: More detailed diagnostic message returned in event of a failure.
      kind?:
        type: string
        default: games#roomP2PStatus
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatus.
      unreliableRoundtripLatencyMillis?:
        type: integer
        format: int32
        description: The amount of time in milliseconds it took to send packets back and forth on the unreliable channel with this peer.
      error?:
        type: string
        description: "The error code in event of a failure.\nPossible values are:\
          \  \n- \"P2P_FAILED\" - The client failed to establish a P2P connection\
          \ with the peer. \n- \"PRESENCE_FAILED\" - The client failed to register\
          \ to receive P2P connections. \n- \"RELAY_SERVER_FAILED\" - The client received\
          \ an error when trying to use the relay server to establish a P2P connection\
          \ with the peer."
      connectionSetupLatencyMillis?:
        type: integer
        format: int32
        description: The amount of time in milliseconds it took to establish connections with this peer.
      status?:
        type: string
        description: "The status of the peer in the room.\nPossible values are:  \n\
          - \"CONNECTION_ESTABLISHED\" - The client established a P2P connection with\
          \ the peer. \n- \"CONNECTION_FAILED\" - The client failed to establish directed\
          \ presence with the peer."
    description: This is a JSON template for an update on the status of a peer in a room.
  RoomP2PStatuses:
    type: object
    properties:
      kind?:
        type: string
        default: games#roomP2PStatuses
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomP2PStatuses.
      updates?:
        type: array
        description: The updates for the peers.
        items: RoomP2PStatus
    description: This is a JSON template for an update on the status of peers in a room.
  RoomParticipant:
    type: object
    properties:
      connected?:
        type: boolean
        description: True if this participant is in the fully connected set of peers in the room.
      autoMatched?:
        type: boolean
        description: True if this participant was auto-matched with the requesting player.
      autoMatchedPlayer?: AnonymousPlayer
      capabilities?:
        type: array
        description: The capabilities which can be used when communicating with this participant.
        items:
          type: string
      kind?:
        type: string
        default: games#roomParticipant
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomParticipant.
      leaveReason?:
        type: string
        description: "The reason the participant left the room; populated if the participant\
          \ status is PARTICIPANT_LEFT.\nPossible values are:  \n- \"PLAYER_LEFT\"\
          \ - The player explicitly chose to leave the room. \n- \"GAME_LEFT\" - The\
          \ game chose to remove the player from the room. \n- \"ABANDONED\" - The\
          \ player switched to another application and abandoned the room.\n- \"PEER_CONNECTION_FAILURE\"\
          \ - The client was unable to establish or maintain a connection to other\
          \ peer(s) in the room.\n- \"SERVER_ERROR\" - The client received an error\
          \ response when it tried to communicate with the server. \n- \"TIMEOUT\"\
          \ - The client timed out while waiting for players to join and connect.\
          \ \n- \"PRESENCE_FAILURE\" - The client's XMPP connection ended abruptly."
      id?:
        type: string
        description: An identifier for the participant in the scope of the room. Cannot be used to identify a player across rooms or in other contexts.
      clientAddress?: RoomClientAddress
      player?: Player
      status?:
        type: string
        description: "The status of the participant with respect to the room.\nPossible\
          \ values are:  \n- \"PARTICIPANT_INVITED\" - The participant has been invited\
          \ to join the room, but has not yet responded. \n- \"PARTICIPANT_JOINED\"\
          \ - The participant has joined the room (either after creating it or accepting\
          \ an invitation.) \n- \"PARTICIPANT_DECLINED\" - The participant declined\
          \ an invitation to join the room. \n- \"PARTICIPANT_LEFT\" - The participant\
          \ joined the room and then left it."
    description: This is a JSON template for a participant in a room.
  RoomStatus:
    type: object
    properties:
      autoMatchingStatus?: RoomAutoMatchStatus
      statusVersion?:
        type: integer
        format: int32
        description: 'The version of the status for the room: an increasing counter,
          used by the client to ignore out-of-order updates to room status.'
      kind?:
        type: string
        default: games#roomStatus
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#roomStatus.
      roomId?:
        type: string
        description: Globally unique ID for a room.
      participants?:
        type: array
        description: The participants involved in the room, along with their statuses. Includes participants who have left or declined invitations.
        items: RoomParticipant
      status?:
        type: string
        description: "The status of the room.\nPossible values are:  \n- \"ROOM_INVITING\"\
          \ - One or more players have been invited and not responded. \n- \"ROOM_AUTO_MATCHING\"\
          \ - One or more slots need to be filled by auto-matching. \n- \"ROOM_CONNECTING\"\
          \ - Players have joined are connecting to each other (either before or after\
          \ auto-matching). \n- \"ROOM_ACTIVE\" - All players have joined and connected\
          \ to each other. \n- \"ROOM_DELETED\" - All joined players have left."
    description: This is a JSON template for the status of a room that the player has joined.
  ScoreSubmission:
    type: object
    properties:
      score?:
        type: integer
        format: int64
        description: The new score being submitted.
      signature?:
        type: string
        description: Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986.
      kind?:
        type: string
        default: games#scoreSubmission
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#scoreSubmission.
      scoreTag?:
        type: string
        pattern: '[a-zA-Z0-9-._~]{0,64}'
        description: Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
      leaderboardId?:
        type: string
        description: The leaderboard this score is being submitted to.
    description: This is a JSON template for a request to submit a score to leaderboards.
  Snapshot:
    type: object
    properties:
      driveId?:
        type: string
        description: The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller.
      uniqueName?:
        type: string
        description: The unique name provided when the snapshot was created.
      kind?:
        type: string
        default: games#snapshot
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#snapshot.
      coverImage?: SnapshotImage
      description?:
        type: string
        description: The description of this snapshot.
      lastModifiedMillis?:
        type: integer
        format: int64
        description: The timestamp (in millis since Unix epoch) of the last modification to this snapshot.
      durationMillis?:
        type: integer
        format: int64
        description: The duration associated with this snapshot, in millis.
      id?:
        type: string
        description: The ID of the snapshot.
      progressValue?:
        type: integer
        format: int64
        description: The progress value (64-bit integer set by developer) associated with this snapshot.
      title?:
        type: string
        description: The title of this snapshot.
      type?:
        type: string
        description: "The type of this snapshot.\nPossible values are:  \n- \"SAVE_GAME\"\
          \ - A snapshot representing a save game."
    description: This is a JSON template for an snapshot object.
  SnapshotImage:
    type: object
    properties:
      mime_type?:
        type: string
        description: The MIME type of the image.
      kind?:
        type: string
        default: games#snapshotImage
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#snapshotImage.
      width?:
        type: integer
        format: int32
        description: The width of the image.
      url?:
        type: string
        description: The URL of the image. This URL may be invalidated at any time and should not be cached.
      height?:
        type: integer
        format: int32
        description: The height of the image.
    description: This is a JSON template for an image of a snapshot.
  SnapshotListResponse:
    type: object
    properties:
      kind?:
        type: string
        default: games#snapshotListResponse
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#snapshotListResponse.
      nextPageToken?:
        type: string
        description: Token corresponding to the next page of results. If there are no more results, the token is omitted.
      items?:
        type: array
        description: The snapshots.
        items: Snapshot
    description: This is a JSON template for a list of snapshot objects.
  TurnBasedAutoMatchingCriteria:
    type: object
    properties:
      exclusiveBitmask?:
        type: integer
        format: int64
        description: A bitmask indicating when auto-matches are valid. When ANDed with other exclusive bitmasks, the result must be zero. Can be used to support exclusive roles within a game.
      kind?:
        type: string
        default: games#turnBasedAutoMatchingCriteria
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedAutoMatchingCriteria.
      minAutoMatchingPlayers?:
        type: integer
        format: int32
        description: The minimum number of players that should be added to the match by auto-matching.
      maxAutoMatchingPlayers?:
        type: integer
        format: int32
        description: The maximum number of players that should be added to the match by auto-matching.
    description: This is a JSON template for an turn-based auto-match criteria object.
  TurnBasedMatch:
    type: object
    properties:
      matchVersion?:
        type: integer
        format: int32
        description: 'The version of this match: an increasing counter, used to avoid
          out-of-date updates to the match.'
      rematchId?:
        type: string
        description: The ID of a rematch of this match. Only set for completed matches that have been rematched.
      data?: TurnBasedMatchData
      previousMatchData?: TurnBasedMatchData
      kind?:
        type: string
        default: games#turnBasedMatch
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatch.
      withParticipantId?:
        type: string
        description: The ID of another participant in the match that can be used when describing the participants the user is playing with.
      description?:
        type: string
        description: This short description is generated by our servers based on turn state and is localized and worded relative to the player requesting the match. It is intended to be displayed when the match is shown in a list.
      userMatchStatus?:
        type: string
        description: "The status of the current user in the match. Derived from the\
          \ match type, match status, the user's participant status, and the pending\
          \ participant for the match.\nPossible values are:  \n- \"USER_INVITED\"\
          \ - The user has been invited to join the match and has not responded yet.\
          \ \n- \"USER_AWAITING_TURN\" - The user is waiting for their turn. \n- \"\
          USER_TURN\" - The user has an action to take in the match. \n- \"USER_MATCH_COMPLETED\"\
          \ - The match has ended (it is completed, canceled, or expired.)"
      autoMatchingCriteria?: TurnBasedAutoMatchingCriteria
      lastUpdateDetails?: TurnBasedMatchModification
      pendingParticipantId?:
        type: string
        description: The ID of the participant that is taking a turn.
      inviterId?:
        type: string
        description: The ID of the participant that invited the user to the match. Not set if the user was not invited to the match.
      variant?:
        type: integer
        format: int32
        description: The variant / mode of the application being played; can be any integer value, or left blank.
      applicationId?:
        type: string
        description: The ID of the application being played.
      creationDetails?: TurnBasedMatchModification
      results?:
        type: array
        description: The results reported for this match.
        items: ParticipantResult
      matchId?:
        type: string
        description: Globally unique ID for a turn-based match.
      matchNumber?:
        type: integer
        format: int32
        description: The number of the match in a chain of rematches. Will be set to 1 for the first match and incremented by 1 for each rematch.
      participants?:
        type: array
        description: The participants involved in the match, along with their statuses. Includes participants who have left or declined invitations.
        items: TurnBasedMatchParticipant
      status?:
        type: string
        description: "The status of the match.\nPossible values are:  \n- \"MATCH_AUTO_MATCHING\"\
          \ - One or more slots need to be filled by auto-matching; the match cannot\
          \ be established until they are filled. \n- \"MATCH_ACTIVE\" - The match\
          \ has started. \n- \"MATCH_COMPLETE\" - The match has finished. \n- \"MATCH_CANCELED\"\
          \ - The match was canceled. \n- \"MATCH_EXPIRED\" - The match expired due\
          \ to inactivity. \n- \"MATCH_DELETED\" - The match should no longer be shown\
          \ on the client. Returned only for tombstones for matches when sync is called."
    description: This is a JSON template for a turn-based match resource object.
  TurnBasedMatchCreateRequest:
    type: object
    properties:
      invitedPlayerIds?:
        type: array
        description: The player ids to invite to the match.
        items:
          type: string
      kind?:
        type: string
        default: games#turnBasedMatchCreateRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchCreateRequest.
      requestId?:
        type: integer
        format: int64
        description: A randomly generated numeric ID. This number is used at the server to ensure that the request is handled correctly across retries.
      variant?:
        type: integer
        format: int32
        description: The variant / mode of the application to be played. This can be any integer value, or left blank. You should use a small number of variants to keep the auto-matching pool as large as possible.
      autoMatchingCriteria?: TurnBasedAutoMatchingCriteria
    description: This is a JSON template for a turn-based match creation request.
  TurnBasedMatchData:
    type: object
    properties:
      data?:
        type: string
        description: The byte representation of the data (limited to 128 kB), as a Base64-encoded string with the URL_SAFE encoding option.
      kind?:
        type: string
        default: games#turnBasedMatchData
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchData.
      dataAvailable?:
        type: boolean
        description: True if this match has data available but it wasn't returned in a list response; fetching the match individually will retrieve this data.
    description: This is a JSON template for a turn-based match data object.
  TurnBasedMatchDataRequest:
    type: object
    properties:
      data?:
        type: string
        description: The byte representation of the data (limited to 128 kB), as a Base64-encoded string with the URL_SAFE encoding option.
      kind?:
        type: string
        default: games#turnBasedMatchDataRequest
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchDataRequest.
    description: This is a JSON template for sending a turn-based match data object.
  TurnBasedMatchList:
    type: object
    properties:
      kind?:
        type: string
        default: games#turnBasedMatchList
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchList.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The matches.
        items: TurnBasedMatch
    description: This is a JSON template for a list of turn-based matches.
  TurnBasedMatchModification:
    type: object
    properties:
      participantId?:
        type: string
        description: The ID of the participant that modified the match.
      kind?:
        type: string
        default: games#turnBasedMatchModification
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchModification.
      modifiedTimestampMillis?:
        type: integer
        format: int64
        description: The timestamp at which they modified the match, in milliseconds since the epoch in UTC.
    description: This is a JSON template for turn-based match modification metadata.
  TurnBasedMatchParticipant:
    type: object
    properties:
      autoMatched?:
        type: boolean
        description: True if this participant was auto-matched with the requesting player.
      autoMatchedPlayer?: AnonymousPlayer
      kind?:
        type: string
        default: games#turnBasedMatchParticipant
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchParticipant.
      id?:
        type: string
        description: An identifier for the participant in the scope of the match. Cannot be used to identify a player across matches or in other contexts.
      player?: Player
      status?:
        type: string
        description: "The status of the participant with respect to the match.\nPossible\
          \ values are:  \n- \"PARTICIPANT_NOT_INVITED_YET\" - The participant is\
          \ slated to be invited to the match, but the invitation has not been sent;\
          \ the invite will be sent when it becomes their turn. \n- \"PARTICIPANT_INVITED\"\
          \ - The participant has been invited to join the match, but has not yet\
          \ responded. \n- \"PARTICIPANT_JOINED\" - The participant has joined the\
          \ match (either after creating it or accepting an invitation.) \n- \"PARTICIPANT_DECLINED\"\
          \ - The participant declined an invitation to join the match. \n- \"PARTICIPANT_LEFT\"\
          \ - The participant joined the match and then left it. \n- \"PARTICIPANT_FINISHED\"\
          \ - The participant finished playing in the match. \n- \"PARTICIPANT_UNRESPONSIVE\"\
          \ - The participant did not take their turn in the allotted time."
    description: This is a JSON template for a participant in a turn-based match.
  TurnBasedMatchRematch:
    type: object
    properties:
      kind?:
        type: string
        default: games#turnBasedMatchRematch
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchRematch.
      previousMatch?: TurnBasedMatch
      rematch?: TurnBasedMatch
    description: This is a JSON template for a rematch response.
  TurnBasedMatchResults:
    type: object
    properties:
      matchVersion?:
        type: integer
        format: int32
        description: The version of the match being updated.
      data?: TurnBasedMatchDataRequest
      kind?:
        type: string
        default: games#turnBasedMatchResults
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchResults.
      results?:
        type: array
        description: The match results for the participants in the match.
        items: ParticipantResult
    description: This is a JSON template for a turn-based match results object.
  TurnBasedMatchSync:
    type: object
    properties:
      moreAvailable?:
        type: boolean
        description: True if there were more matches available to fetch at the time the response was generated (which were not returned due to page size limits.)
      kind?:
        type: string
        default: games#turnBasedMatchSync
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchSync.
      nextPageToken?:
        type: string
        description: The pagination token for the next page of results.
      items?:
        type: array
        description: The matches.
        items: TurnBasedMatch
    description: This is a JSON template for a list of turn-based matches returned from a sync.
  TurnBasedMatchTurn:
    type: object
    properties:
      pendingParticipantId?:
        type: string
        description: The ID of the participant who should take their turn next. May be set to the current player's participant ID to update match state without changing the turn. If not set, the match will wait for other player(s) to join via automatching; this is only valid if automatch criteria is set on the match with remaining slots for automatched players.
      matchVersion?:
        type: integer
        format: int32
        description: 'The version of this match: an increasing counter, used to avoid
          out-of-date updates to the match.'
      data?: TurnBasedMatchDataRequest
      kind?:
        type: string
        default: games#turnBasedMatchTurn
        description: Uniquely identifies the type of this resource. Value is always the fixed string games#turnBasedMatchTurn.
      results?:
        type: array
        description: The match results for the participants in the match.
        items: ParticipantResult
    description: This is a JSON template for the object representing a turn.
/quests:
  /{questId}:
    uriParameters:
      questId:
        type: string
        description: The ID of the quest.
    /milestones:
      /{milestoneId}:
        uriParameters:
          milestoneId:
            type: string
            description: The ID of the milestone.
        /claim:
          put:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/games
                - https://www.googleapis.com/auth/plus.login
            description: Report that a reward for the milestone corresponding to milestoneId for the quest corresponding to questId has been claimed by the currently authorized user.
            displayName: claim
            is:
            - hasParameters
            queryParameters:
              requestId:
                type: integer
                format: int64
                description: A numeric ID to ensure that the request is handled correctly across retries. Your client application must generate this ID randomly.
              consistencyToken?:
                type: integer
                format: int64
                description: The last-seen mutation timestamp.
            (commons.Id): games.questMilestones.claim
            (commons.LogicalStucture):
            - Quest Milestones
    /accept:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Indicates that the currently authorized user will participate in the quest.
        displayName: accept
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: Quest
        (commons.Id): games.quests.accept
        (commons.LogicalStucture):
        - Quests
/rooms:
  /{roomId}:
    uriParameters:
      roomId:
        type: string
        description: The ID of the room.
    /leave:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Leave a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
        displayName: leave
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        body:
          application/json: RoomLeaveRequest
        responses:
          200:
            body:
              application/json: Room
        (commons.Id): games.rooms.leave
        (commons.LogicalStucture):
        - Rooms
    /decline:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Decline an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
        displayName: decline
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: Room
        (commons.Id): games.rooms.decline
        (commons.LogicalStucture):
        - Rooms
    /dismiss:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Dismiss an invitation to join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
        displayName: dismiss
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        (commons.Id): games.rooms.dismiss
        (commons.LogicalStucture):
        - Rooms
    /reportstatus:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Updates sent by a client reporting the status of peers in a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
        displayName: report Status
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        body:
          application/json: RoomP2PStatuses
        responses:
          200:
            body:
              application/json: RoomStatus
        (commons.Id): games.rooms.reportStatus
        (commons.LogicalStucture):
        - Rooms
    /join:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Join a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
        displayName: join
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        body:
          application/json: RoomJoinRequest
        responses:
          200:
            body:
              application/json: Room
        (commons.Id): games.rooms.join
        (commons.LogicalStucture):
        - Rooms
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Get the data for a room.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: Room
      (commons.Id): games.rooms.get
      (commons.LogicalStucture):
      - Rooms
  /create:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Create a room. For internal use by the Games SDK only. Calling this method directly is unsupported.
      displayName: create
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      body:
        application/json: RoomCreateRequest
      responses:
        200:
          body:
            application/json: Room
      (commons.Id): games.rooms.create
      (commons.LogicalStucture):
      - Rooms
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Returns invitations to join rooms.
    displayName: list
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of rooms to return in the response, used for paging. For any response, the actual number of rooms to return may be less than the specified maxResults.
        maximum: 500
        minimum: 1
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: RoomList
    (commons.Id): games.rooms.list
    (commons.LogicalStucture):
    - Rooms
/achievements:
  /{achievementId}:
    uriParameters:
      achievementId:
        type: string
        description: The ID of the achievement used by this method.
    /setStepsAtLeast:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Sets the steps for the currently authenticated player towards unlocking an achievement. If the steps parameter is less than the current number of steps that the player already gained for the achievement, the achievement is not modified.
        displayName: set Steps At Least
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
          steps:
            type: integer
            format: int32
            description: The minimum value to set the steps to.
            minimum: 1
        responses:
          200:
            body:
              application/json: AchievementSetStepsAtLeastResponse
        (commons.Id): games.achievements.setStepsAtLeast
        (commons.LogicalStucture):
        - Achievements
    /reveal:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Sets the state of the achievement with the given ID to REVEALED for the currently authenticated player.
        displayName: reveal
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: AchievementRevealResponse
        (commons.Id): games.achievements.reveal
        (commons.LogicalStucture):
        - Achievements
    /unlock:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Unlocks this achievement for the currently authenticated player.
        displayName: unlock
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: AchievementUnlockResponse
        (commons.Id): games.achievements.unlock
        (commons.LogicalStucture):
        - Achievements
    /increment:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Increments the steps of the achievement with the given ID for the currently authenticated player.
        displayName: increment
        is:
        - hasParameters
        queryParameters:
          stepsToIncrement:
            type: integer
            format: int32
            description: The number of steps to increment.
            minimum: 1
          requestId?:
            type: integer
            format: int64
            description: A randomly generated numeric ID for each request specified by the caller. This number is used at the server to ensure that the request is handled correctly across retries.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: AchievementIncrementResponse
        (commons.Id): games.achievements.increment
        (commons.LogicalStucture):
        - Achievements
  /updateMultiple:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Updates multiple achievements for the currently authenticated player.
      displayName: update Multiple
      is:
      - hasParameters
      queryParameters:
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      body:
        application/json: AchievementUpdateMultipleRequest
      responses:
        200:
          body:
            application/json: AchievementUpdateMultipleResponse
      (commons.Id): games.achievements.updateMultiple
      (commons.LogicalStucture):
      - Achievements
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Lists all the achievement definitions for your application.
    displayName: list
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified maxResults.
        maximum: 200
        minimum: 1
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: AchievementDefinitionsListResponse
    (commons.Id): games.achievementDefinitions.list
    (commons.LogicalStucture):
    - Achievement Definitions
/players:
  /{playerId}:
    uriParameters:
      playerId:
        type: string
        description: A player ID. A value of me may be used in place of the authenticated player's ID.
    /achievements:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Lists the progress for all your application's achievements for the currently authenticated player.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          maxResults?:
            type: integer
            format: int32
            description: The maximum number of achievement resources to return in the response, used for paging. For any response, the actual number of achievement resources returned may be less than the specified maxResults.
            maximum: 200
            minimum: 1
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          pageToken?:
            type: string
            description: The token returned by the previous request.
          state?:
            type: string
            description: Tells the server to return only achievements with the specified state. If this parameter isn't specified, all achievements are returned.
            (commons.EnumDescriptions):
            - List all achievements. This is the default.
            - List only hidden achievements.
            - List only revealed achievements.
            - List only unlocked achievements.
            enum:
            - ALL
            - HIDDEN
            - REVEALED
            - UNLOCKED
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: PlayerAchievementListResponse
        (commons.Id): games.achievements.list
        (commons.LogicalStucture):
        - Achievements
    /quests:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Get a list of quests for your application and the currently authenticated player.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          maxResults?:
            type: integer
            format: int32
            description: 'The maximum number of quest resources to return in the response,
              used for paging. For any response, the actual number of quest resources
              returned may be less than the specified maxResults. Acceptable values
              are 1 to 50, inclusive. (Default: 50).'
            maximum: 50
            minimum: 1
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          pageToken?:
            type: string
            description: The token returned by the previous request.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: QuestListResponse
        (commons.Id): games.quests.list
        (commons.LogicalStucture):
        - Quests
    /leaderboards:
      /{leaderboardId}:
        uriParameters:
          leaderboardId:
            type: string
            description: The ID of the leaderboard. Can be set to 'ALL' to retrieve data for all leaderboards for this application.
        /scores:
          /{timeSpan}:
            uriParameters:
              timeSpan:
                type: string
                description: The time span for the scores and ranks you're requesting.
                (commons.EnumDescriptions):
                - Get the high scores for all time spans. If this is used, maxResults values will be ignored.
                - Get the all time high score.
                - List the top scores for the current day.
                - List the top scores for the current week.
                enum:
                - ALL
                - ALL_TIME
                - DAILY
                - WEEKLY
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/games
                  - https://www.googleapis.com/auth/plus.login
              description: |-
                Get high scores, and optionally ranks, in leaderboards for the currently authenticated player. For a specific time span, leaderboardId can be set to ALL to retrieve data for all leaderboards in a given time span.
                NOTE: You cannot ask for 'ALL' leaderboards and 'ALL' timeSpans in the same request; only one parameter may be set to 'ALL'.
              displayName: get
              is:
              - hasParameters
              queryParameters:
                includeRankType?:
                  type: string
                  description: The types of ranks to return. If the parameter is omitted, no ranks will be returned.
                  (commons.EnumDescriptions):
                  - Retrieve public and social ranks.
                  - Retrieve public ranks, if the player is sharing their gameplay activity publicly.
                  - Retrieve the social rank.
                  enum:
                  - ALL
                  - PUBLIC
                  - SOCIAL
                maxResults?:
                  type: integer
                  format: int32
                  description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
                  maximum: 30
                  minimum: 1
                language?:
                  type: string
                  description: The preferred language to use for strings returned by this method.
                pageToken?:
                  type: string
                  description: The token returned by the previous request.
                consistencyToken?:
                  type: integer
                  format: int64
                  description: The last-seen mutation timestamp.
              responses:
                200:
                  body:
                    application/json: PlayerLeaderboardScoreListResponse
              (commons.Id): games.scores.get
              (commons.LogicalStucture):
              - Scores
    /snapshots:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/drive.appdata
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Retrieves a list of snapshots created by your application for the player corresponding to the player ID.
        displayName: list
        is:
        - hasParameters
        queryParameters:
          maxResults?:
            type: integer
            format: int32
            description: The maximum number of snapshot resources to return in the response, used for paging. For any response, the actual number of snapshot resources returned may be less than the specified maxResults.
            maximum: 25
            minimum: 1
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          pageToken?:
            type: string
            description: The token returned by the previous request.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: SnapshotListResponse
        (commons.Id): games.snapshots.list
        (commons.LogicalStucture):
        - Snapshots
    /categories:
      /{collection}:
        uriParameters:
          collection:
            type: string
            description: The collection of categories for which data will be returned.
            (commons.EnumDescriptions):
            - Retrieve data for all categories. This is the default.
            enum:
            - all
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/games
              - https://www.googleapis.com/auth/plus.login
          description: List play data aggregated per category for the player corresponding to playerId.
          displayName: list Categories By Player
          is:
          - hasParameters
          queryParameters:
            maxResults?:
              type: integer
              format: int32
              description: The maximum number of category resources to return in the response, used for paging. For any response, the actual number of category resources returned may be less than the specified maxResults.
              maximum: 100
              minimum: 1
            language?:
              type: string
              description: The preferred language to use for strings returned by this method.
            pageToken?:
              type: string
              description: The token returned by the previous request.
            consistencyToken?:
              type: integer
              format: int64
              description: The last-seen mutation timestamp.
          responses:
            200:
              body:
                application/json: CategoryListResponse
          (commons.Id): games.metagame.listCategoriesByPlayer
          (commons.LogicalStucture):
          - Metagame
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Retrieves the Player resource with the given ID. To retrieve the player for the currently authenticated user, set playerId to me.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: Player
      (commons.Id): games.players.get
      (commons.LogicalStucture):
      - Players
  /me:
    /players:
      /{collection}:
        uriParameters:
          collection:
            type: string
            description: Collection of players being retrieved
            (commons.EnumDescriptions):
            - Retrieve a list of players that are also playing this game in reverse chronological order.
            - '(DEPRECATED: please use played_with!) Retrieve a list of players you
              have played a multiplayer game (realtime or turn-based) with recently.'
            - Retrieve a list of players you have played a multiplayer game (realtime or turn-based) with recently.
            - Retrieve a list of players in the user's social graph that are visible to this game.
            enum:
            - connected
            - playedWith
            - played_with
            - visible
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/games
              - https://www.googleapis.com/auth/plus.login
          description: Get the collection of players for the currently authenticated user.
          displayName: list
          is:
          - hasParameters
          queryParameters:
            maxResults?:
              type: integer
              format: int32
              description: The maximum number of player resources to return in the response, used for paging. For any response, the actual number of player resources returned may be less than the specified maxResults.
              maximum: 50
              minimum: 1
            language?:
              type: string
              description: The preferred language to use for strings returned by this method.
            pageToken?:
              type: string
              description: The token returned by the previous request.
            consistencyToken?:
              type: integer
              format: int64
              description: The last-seen mutation timestamp.
          responses:
            200:
              body:
                application/json: PlayerListResponse
          (commons.Id): games.players.list
          (commons.LogicalStucture):
          - Players
/pushtokens:
  /remove:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Removes a push token for the current user and application. Removing a non-existent push token will report success.
      displayName: remove
      is:
      - hasParameters
      queryParameters:
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      body:
        application/json: PushTokenId
      (commons.Id): games.pushtokens.remove
      (commons.LogicalStucture):
      - Pushtokens
  put:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Registers a push token for the current user and application.
    displayName: update
    is:
    - hasParameters
    queryParameters:
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    body:
      application/json: PushToken
    (commons.Id): games.pushtokens.update
    (commons.LogicalStucture):
    - Pushtokens
/leaderboards:
  /scores:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Submits multiple scores to leaderboards.
      displayName: submit Multiple
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      body:
        application/json: PlayerScoreSubmissionList
      responses:
        200:
          body:
            application/json: PlayerScoreListResponse
      (commons.Id): games.scores.submitMultiple
      (commons.LogicalStucture):
      - Scores
  /{leaderboardId}:
    uriParameters:
      leaderboardId:
        type: string
        description: The ID of the leaderboard.
    /scores:
      /{collection}:
        uriParameters:
          collection:
            type: string
            description: The collection of scores you're requesting.
            (commons.EnumDescriptions):
            - List all scores in the public leaderboard.
            - List only social scores.
            - List only social scores, not respecting the fACL.
            enum:
            - PUBLIC
            - SOCIAL
            - SOCIAL_1P
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/games
              - https://www.googleapis.com/auth/plus.login
          description: Lists the scores in a leaderboard, starting from the top.
          displayName: list
          is:
          - hasParameters
          queryParameters:
            maxResults?:
              type: integer
              format: int32
              description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
              maximum: 30
              minimum: 1
            language?:
              type: string
              description: The preferred language to use for strings returned by this method.
            timeSpan:
              type: string
              description: The time span for the scores and ranks you're requesting.
              (commons.EnumDescriptions):
              - List the all-time top scores.
              - List the top scores for the current day.
              - List the top scores for the current week.
              enum:
              - ALL_TIME
              - DAILY
              - WEEKLY
            pageToken?:
              type: string
              description: The token returned by the previous request.
            consistencyToken?:
              type: integer
              format: int64
              description: The last-seen mutation timestamp.
          responses:
            200:
              body:
                application/json: LeaderboardScores
          (commons.Id): games.scores.list
          (commons.LogicalStucture):
          - Scores
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Submits a score to the specified leaderboard.
        displayName: submit
        is:
        - hasParameters
        queryParameters:
          score:
            type: integer
            format: int64
            description: The score you're submitting. The submitted score is ignored if it is worse than a previously submitted score, where worse depends on the leaderboard sort order. The meaning of the score value depends on the leaderboard format type. For fixed-point, the score represents the raw value. For time, the score represents elapsed time in milliseconds. For currency, the score represents a value in micro units.
          scoreTag?:
            type: string
            pattern: '[a-zA-Z0-9-._~]{0,64}'
            description: Additional information about the score you're submitting. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: PlayerScoreResponse
        (commons.Id): games.scores.submit
        (commons.LogicalStucture):
        - Scores
    /window:
      /{collection}:
        uriParameters:
          collection:
            type: string
            description: The collection of scores you're requesting.
            (commons.EnumDescriptions):
            - List all scores in the public leaderboard.
            - List only social scores.
            - List only social scores, not respecting the fACL.
            enum:
            - PUBLIC
            - SOCIAL
            - SOCIAL_1P
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/games
              - https://www.googleapis.com/auth/plus.login
          description: Lists the scores in a leaderboard around (and including) a player's score.
          displayName: list Window
          is:
          - hasParameters
          queryParameters:
            maxResults?:
              type: integer
              format: int32
              description: The maximum number of leaderboard scores to return in the response. For any response, the actual number of leaderboard scores returned may be less than the specified maxResults.
              maximum: 30
              minimum: 1
            returnTopIfAbsent?:
              type: boolean
              description: True if the top scores should be returned when the player is not in the leaderboard. Defaults to true.
            language?:
              type: string
              description: The preferred language to use for strings returned by this method.
            timeSpan:
              type: string
              description: The time span for the scores and ranks you're requesting.
              (commons.EnumDescriptions):
              - List the all-time top scores.
              - List the top scores for the current day.
              - List the top scores for the current week.
              enum:
              - ALL_TIME
              - DAILY
              - WEEKLY
            pageToken?:
              type: string
              description: The token returned by the previous request.
            resultsAbove?:
              type: integer
              format: int32
              description: The preferred number of scores to return above the player's score. More scores may be returned if the player is at the bottom of the leaderboard; fewer may be returned if the player is at the top. Must be less than or equal to maxResults.
            consistencyToken?:
              type: integer
              format: int64
              description: The last-seen mutation timestamp.
          responses:
            200:
              body:
                application/json: LeaderboardScores
          (commons.Id): games.scores.listWindow
          (commons.LogicalStucture):
          - Scores
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Retrieves the metadata of the leaderboard with the given ID.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: Leaderboard
      (commons.Id): games.leaderboards.get
      (commons.LogicalStucture):
      - Leaderboards
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Lists all the leaderboard metadata for your application.
    displayName: list
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of leaderboards to return in the response. For any response, the actual number of leaderboards returned may be less than the specified maxResults.
        maximum: 200
        minimum: 1
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: LeaderboardListResponse
    (commons.Id): games.leaderboards.list
    (commons.LogicalStucture):
    - Leaderboards
/snapshots:
  /{snapshotId}:
    uriParameters:
      snapshotId:
        type: string
        description: The ID of the snapshot.
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/drive.appdata
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Retrieves the metadata for a given snapshot ID.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: Snapshot
      (commons.Id): games.snapshots.get
      (commons.LogicalStucture):
      - Snapshots
/turnbasedmatches:
  /{matchId}:
    uriParameters:
      matchId:
        type: string
        description: The ID of the match.
    /cancel:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Cancel a turn-based match.
        displayName: cancel
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        (commons.Id): games.turnBasedMatches.cancel
        (commons.LogicalStucture):
        - Turn Based Matches
    /dismiss:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Dismiss a turn-based match from the match list. The match will no longer show up in the list and will not generate notifications.
        displayName: dismiss
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        (commons.Id): games.turnBasedMatches.dismiss
        (commons.LogicalStucture):
        - Turn Based Matches
    /leaveTurn:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Leave a turn-based match during the current player's turn, without canceling the match.
        displayName: leave Turn
        is:
        - hasParameters
        queryParameters:
          pendingParticipantId?:
            type: string
            description: The ID of another participant who should take their turn next. If not set, the match will wait for other player(s) to join via automatching; this is only valid if automatch criteria is set on the match with remaining slots for automatched players.
          matchVersion:
            type: integer
            format: int32
            description: The version of the match being updated.
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.leaveTurn
        (commons.LogicalStucture):
        - Turn Based Matches
    /leave:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Leave a turn-based match when it is not the current player's turn, without canceling the match.
        displayName: leave
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.leave
        (commons.LogicalStucture):
        - Turn Based Matches
    /turn:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Commit the results of a player turn.
        displayName: take Turn
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        body:
          application/json: TurnBasedMatchTurn
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.takeTurn
        (commons.LogicalStucture):
        - Turn Based Matches
    /decline:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Decline an invitation to play a turn-based match.
        displayName: decline
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.decline
        (commons.LogicalStucture):
        - Turn Based Matches
    /finish:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Finish a turn-based match. Each player should make this call once, after all results are in. Only the player whose turn it is may make the first call to Finish, and can pass in the final match state.
        displayName: finish
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        body:
          application/json: TurnBasedMatchResults
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.finish
        (commons.LogicalStucture):
        - Turn Based Matches
    /join:
      put:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Join a turn-based match.
        displayName: join
        is:
        - hasParameters
        queryParameters:
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: TurnBasedMatch
        (commons.Id): games.turnBasedMatches.join
        (commons.LogicalStucture):
        - Turn Based Matches
    /rematch:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Create a rematch of a match that was previously completed, with the same participants. This can be called by only one player on a match still in their list; the player must have called Finish first. Returns the newly created match; it will be the caller's turn.
        displayName: rematch
        is:
        - hasParameters
        queryParameters:
          requestId?:
            type: integer
            format: int64
            description: A randomly generated numeric ID for each request specified by the caller. This number is used at the server to ensure that the request is handled correctly across retries.
          language?:
            type: string
            description: The preferred language to use for strings returned by this method.
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: TurnBasedMatchRematch
        (commons.Id): games.turnBasedMatches.rematch
        (commons.LogicalStucture):
        - Turn Based Matches
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Get the data for a turn-based match.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        includeMatchData?:
          type: boolean
          description: Get match data along with metadata.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: TurnBasedMatch
      (commons.Id): games.turnBasedMatches.get
      (commons.LogicalStucture):
      - Turn Based Matches
  /sync:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Returns turn-based matches the player is or was involved in that changed since the last sync call, with the least recent changes coming first. Matches that should be removed from the local cache will have a status of MATCH_DELETED.
      displayName: sync
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: The maximum number of matches to return in the response, used for paging. For any response, the actual number of matches to return may be less than the specified maxResults.
          maximum: 500
          minimum: 1
        maxCompletedMatches?:
          type: integer
          format: int32
          description: The maximum number of completed or canceled matches to return in the response. If not set, all matches returned could be completed or canceled.
          maximum: 500
          minimum: 0
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        pageToken?:
          type: string
          description: The token returned by the previous request.
        includeMatchData?:
          type: boolean
          description: True if match data should be returned in the response. Note that not all data will necessarily be returned if include_match_data is true; the server may decide to only return data for some of the matches to limit download size for the client. The remainder of the data for these matches will be retrievable on request.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: TurnBasedMatchSync
      (commons.Id): games.turnBasedMatches.sync
      (commons.LogicalStucture):
      - Turn Based Matches
  /create:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Create a turn-based match.
      displayName: create
      is:
      - hasParameters
      queryParameters:
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      body:
        application/json: TurnBasedMatchCreateRequest
      responses:
        200:
          body:
            application/json: TurnBasedMatch
      (commons.Id): games.turnBasedMatches.create
      (commons.LogicalStucture):
      - Turn Based Matches
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Returns turn-based matches the player is or was involved in.
    displayName: list
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of matches to return in the response, used for paging. For any response, the actual number of matches to return may be less than the specified maxResults.
        maximum: 500
        minimum: 1
      maxCompletedMatches?:
        type: integer
        format: int32
        description: The maximum number of completed or canceled matches to return in the response. If not set, all matches returned could be completed or canceled.
        maximum: 500
        minimum: 0
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      includeMatchData?:
        type: boolean
        description: True if match data should be returned in the response. Note that not all data will necessarily be returned if include_match_data is true; the server may decide to only return data for some of the matches to limit download size for the client. The remainder of the data for these matches will be retrievable on request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: TurnBasedMatchList
    (commons.Id): games.turnBasedMatches.list
    (commons.LogicalStucture):
    - Turn Based Matches
/metagameConfig:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Return the metagame configuration data for the calling application.
    displayName: get Metagame Config
    is:
    - hasParameters
    queryParameters:
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: MetagameConfig
    (commons.Id): games.metagame.getMetagameConfig
    (commons.LogicalStucture):
    - Metagame
/revisions:
  /check:
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Checks whether the games client is out of date.
      displayName: check
      is:
      - hasParameters
      queryParameters:
        clientRevision:
          type: string
          description: "The revision of the client SDK used by your application. Format:\n\
            [PLATFORM_TYPE]:[VERSION_NUMBER]. Possible values of PLATFORM_TYPE are:\n\
            \ \n- \"ANDROID\" - Client is running the Android SDK. \n- \"IOS\" - Client\
            \ is running the iOS SDK. \n- \"WEB_APP\" - Client is running as a Web\
            \ App."
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: RevisionCheckResponse
      (commons.Id): games.revisions.check
      (commons.LogicalStucture):
      - Revisions
/events:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Returns a list showing the current progress on events in this application for the currently authenticated user.
    displayName: list ByPlayer
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of events to return in the response, used for paging. For any response, the actual number of events to return may be less than the specified maxResults.
        maximum: 100
        minimum: 1
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: PlayerEventListResponse
    (commons.Id): games.events.listByPlayer
    (commons.LogicalStucture):
    - Events
  post:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Records a batch of changes to the number of times events have occurred for the currently authenticated user of this application.
    displayName: record
    is:
    - hasParameters
    queryParameters:
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    body:
      application/json: EventRecordRequest
    responses:
      200:
        body:
          application/json: EventUpdateResponse
    (commons.Id): games.events.record
    (commons.LogicalStucture):
    - Events
/eventDefinitions:
  get:
    securedBy:
      oath2:
        scopes:
        - https://www.googleapis.com/auth/games
        - https://www.googleapis.com/auth/plus.login
    description: Returns a list of the event definitions in this application.
    displayName: list Definitions
    is:
    - hasParameters
    queryParameters:
      maxResults?:
        type: integer
        format: int32
        description: The maximum number of event definitions to return in the response, used for paging. For any response, the actual number of event definitions to return may be less than the specified maxResults.
        maximum: 100
        minimum: 1
      language?:
        type: string
        description: The preferred language to use for strings returned by this method.
      pageToken?:
        type: string
        description: The token returned by the previous request.
      consistencyToken?:
        type: integer
        format: int64
        description: The last-seen mutation timestamp.
    responses:
      200:
        body:
          application/json: EventDefinitionListResponse
    (commons.Id): games.events.listDefinitions
    (commons.LogicalStucture):
    - Events
/applications:
  /{applicationId}:
    uriParameters:
      applicationId:
        type: string
        description: The application ID from the Google Play developer console.
    /verify:
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/games
            - https://www.googleapis.com/auth/plus.login
        description: Verifies the auth token provided with this request is for the application with the specified ID, and returns the ID of the player it was granted for.
        displayName: verify
        is:
        - hasParameters
        queryParameters:
          consistencyToken?:
            type: integer
            format: int64
            description: The last-seen mutation timestamp.
        responses:
          200:
            body:
              application/json: ApplicationVerifyResponse
        (commons.Id): games.applications.verify
        (commons.LogicalStucture):
        - Applications
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Retrieves the metadata of the application with the given ID. If the requested application is not available for the specified platformType, the returned response will not include any instance data.
      displayName: get
      is:
      - hasParameters
      queryParameters:
        platformType?:
          type: string
          description: Restrict application details returned to the specific platform.
          (commons.EnumDescriptions):
          - Retrieve applications that can be played on Android.
          - Retrieve applications that can be played on iOS.
          - Retrieve applications that can be played on desktop web.
          enum:
          - ANDROID
          - IOS
          - WEB_APP
        language?:
          type: string
          description: The preferred language to use for strings returned by this method.
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      responses:
        200:
          body:
            application/json: Application
      (commons.Id): games.applications.get
      (commons.LogicalStucture):
      - Applications
  /played:
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/games
          - https://www.googleapis.com/auth/plus.login
      description: Indicate that the the currently authenticated user is playing your application.
      displayName: played
      is:
      - hasParameters
      queryParameters:
        consistencyToken?:
          type: integer
          format: int64
          description: The last-seen mutation timestamp.
      (commons.Id): games.applications.played
      (commons.LogicalStucture):
      - Applications
