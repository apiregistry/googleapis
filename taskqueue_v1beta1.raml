#%RAML 1.0
title: TaskQueue API
version: v1beta1
baseUri: https://www.googleapis.com/taskqueue/v1beta1/projects/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://developers.google.com/appengine/docs/python/taskqueue/rest
  role: documentation
(commons.Icons):
- url: https://www.google.com/images/icons/product/app_engine-32.png
  name: x32
- url: https://www.google.com/images/icons/product/app_engine-16.png
  name: x16
(commons.Id): taskqueue:v1beta1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/taskqueue
      - https://www.googleapis.com/auth/taskqueue.consumer
traits:
  hasParameters:
    queryParameters:
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      userIp?:
        type: string
        description: IP address of the site where the request originates. Use this if you want to enforce per-user limits.
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  Task:
    type: object
    properties:
      enqueueTimestamp?:
        type: integer
        format: int64
        description: Time (in seconds since the epoch) at which the task was enqueued.
      queueName?:
        type: string
        description: Name of the queue that the task is in.
      kind?:
        type: string
        default: taskqueues#task
        description: The kind of object returned, in this case set to task.
      id?:
        type: string
        description: Name of the task.
      payloadBase64?:
        type: string
        description: A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.
      leaseTimestamp?:
        type: integer
        format: int64
        description: Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.
  TaskQueue:
    type: object
    properties:
      maxLeases?:
        type: integer
        format: int32
        description: The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.
      stats?:
        type: object
        properties:
          leasedLastMinute?:
            type: integer
            format: int64
            description: Number of tasks leased in the last minute.
          totalTasks?:
            type: integer
            format: int32
            description: Number of tasks in the queue.
          oldestTask?:
            type: integer
            format: int64
            description: The timestamp (in seconds since the epoch) of the oldest unfinished task.
          leasedLastHour?:
            type: integer
            format: int64
            description: Number of tasks leased in the last hour.
        description: Statistics for the TaskQueue object in question.
      kind?:
        type: string
        default: taskqueues#taskqueue
        description: The kind of REST object returned, in this case taskqueue.
      acl?:
        type: object
        properties:
          adminEmails?:
            type: array
            description: Email addresses of users who are "admins" of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.
            items:
              type: string
          producerEmails?:
            type: array
            description: Email addresses of users who can "produce" tasks into the TaskQueue. This means they can Insert tasks into the queue.
            items:
              type: string
          consumerEmails?:
            type: array
            description: Email addresses of users who can "consume" tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.
            items:
              type: string
        description: ACLs that are applicable to this TaskQueue object.
      id?:
        type: string
        description: Name of the taskqueue.
  Tasks:
    type: object
    properties:
      kind?:
        type: string
        default: taskqueue#tasks
        description: The kind of object returned, a list of tasks.
      items?:
        type: array
        description: The actual list of tasks returned as a result of the lease operation.
        items: Task
  Tasks2:
    type: object
    properties:
      kind?:
        type: string
        default: taskqueues#tasks
        description: The kind of object returned, a list of tasks.
      items?:
        type: array
        description: The actual list of tasks currently active in the TaskQueue.
        items: Task
/{project}:
  uriParameters:
    project:
      type: string
      description: The project under which the queue lies.
  /taskqueues:
    /{taskqueue}:
      uriParameters:
        taskqueue:
          type: string
          description: The id of the taskqueue to get the properties of.
      /tasks:
        /{task}:
          uriParameters:
            task:
              type: string
              description: The task to get properties of.
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/taskqueue
                - https://www.googleapis.com/auth/taskqueue.consumer
            description: Get a particular task from a TaskQueue.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Task
            (commons.Id): taskqueue.tasks.get
            (commons.LogicalStructure):
            - Tasks
          delete:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/taskqueue
                - https://www.googleapis.com/auth/taskqueue.consumer
            description: Delete a task from a TaskQueue.
            displayName: Delete
            is:
            - hasParameters
            (commons.Id): taskqueue.tasks.delete
            (commons.LogicalStructure):
            - Tasks
        /lease:
          post:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/taskqueue
                - https://www.googleapis.com/auth/taskqueue.consumer
            description: Lease 1 or more tasks from a TaskQueue.
            displayName: Lease
            is:
            - hasParameters
            queryParameters:
              numTasks:
                type: integer
                format: int32
                description: The number of tasks to lease.
              leaseSecs:
                type: integer
                format: int32
                description: The lease in seconds.
            responses:
              200:
                body:
                  application/json: Tasks
            (commons.Id): taskqueue.tasks.lease
            (commons.LogicalStructure):
            - Tasks
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/taskqueue
              - https://www.googleapis.com/auth/taskqueue.consumer
          description: List Tasks in a TaskQueue
          displayName: List
          is:
          - hasParameters
          responses:
            200:
              body:
                application/json: Tasks2
          (commons.Id): taskqueue.tasks.list
          (commons.LogicalStructure):
          - Tasks
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/taskqueue
            - https://www.googleapis.com/auth/taskqueue.consumer
        description: Get detailed information about a TaskQueue.
        displayName: Get
        is:
        - hasParameters
        queryParameters:
          getStats?:
            type: boolean
            description: Whether to get stats. Optional.
        responses:
          200:
            body:
              application/json: TaskQueue
        (commons.Id): taskqueue.taskqueues.get
        (commons.LogicalStructure):
        - Taskqueues
