#%RAML 1.0
title: Google App Engine Admin API
version: v1
baseUri: https://appengine.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/appengine/docs/admin-api/
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): appengine:v1
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/cloud-platform
    (commons.OathScopeDescriptions):
    - View and manage your data across Google Cloud Platform services
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  ApiConfigHandler:
    type: object
    properties:
      securityLevel?:
        type: string
        description: Security (HTTPS) enforcement for this URL.
        enum:
        - SECURE_UNSPECIFIED
        - SECURE_DEFAULT
        - SECURE_NEVER
        - SECURE_OPTIONAL
        - SECURE_ALWAYS
      authFailAction?:
        type: string
        description: Action to take when users access resources that require authentication. Defaults to `redirect`.
        enum:
        - AUTH_FAIL_ACTION_UNSPECIFIED
        - AUTH_FAIL_ACTION_REDIRECT
        - AUTH_FAIL_ACTION_UNAUTHORIZED
      login?:
        type: string
        description: Level of login required to access this resource. Defaults to `optional`.
        enum:
        - LOGIN_UNSPECIFIED
        - LOGIN_OPTIONAL
        - LOGIN_ADMIN
        - LOGIN_REQUIRED
      script?:
        type: string
        description: Path to the script from the application root directory.
      url?:
        type: string
        description: URL to serve the endpoint at.
    description: '[Google Cloud Endpoints](https://cloud.google.com/appengine/docs/python/endpoints/)
      configuration for API handlers.'
  ApiEndpointHandler:
    type: object
    properties:
      scriptPath?:
        type: string
        description: Path to the script from the application root directory.
    description: Uses Google Cloud Endpoints to handle requests.
  Application:
    type: object
    properties:
      defaultCookieExpiration?:
        type: string
        description: Cookie expiration policy for this application. @OutputOnly
      defaultBucket?:
        type: string
        description: Google Cloud Storage bucket that can be used by this application to store content. @OutputOnly
      locationId?:
        type: string
        description: 'Location from which this application will be run. Application
          instances will run out of data centers in the chosen location, which is
          also where all of the application''s end user content is stored. Defaults
          to `us-central`. Options are: `us-central` - Central US `europe-west` -
          Western Europe `us-east1` - Eastern US'
      dispatchRules?:
        type: array
        description: HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. @OutputOnly
        items: UrlDispatchRule
      name?:
        type: string
        description: 'Full path to the Application resource in the API. Example: `apps/myapp`.
          @OutputOnly'
      id?:
        type: string
        description: 'Identifier of the Application resource. This identifier is equivalent
          to the project ID of the Google Cloud Platform project where you want to
          deploy your application. Example: `myapp`.'
      codeBucket?:
        type: string
        description: Google Cloud Storage bucket that can be used for storing files associated with this application. This bucket is associated with the application and can be used by the gcloud deployment commands. @OutputOnly
      defaultHostname?:
        type: string
        description: Hostname used to reach this application, as resolved by App Engine. @OutputOnly
      authDomain?:
        type: string
        description: Google Apps authentication domain that controls which users can access this application. Defaults to open access for any Google Account.
    description: An Application resource contains the top-level configuration of an App Engine application.
  AutomaticScaling:
    type: object
    properties:
      cpuUtilization?: CpuUtilization
      requestUtilization?: RequestUtilization
      minIdleInstances?:
        type: integer
        format: int32
        description: Minimum number of idle instances that should be maintained for this version. Only applicable for the default version of a service.
      maxPendingLatency?:
        type: string
        description: Maximum amount of time that a request should wait in the pending queue before starting a new instance to handle it.
      minPendingLatency?:
        type: string
        description: Minimum amount of time a request should wait in the pending queue before starting a new instance to handle it.
      maxTotalInstances?:
        type: integer
        format: int32
        description: Maximum number of instances that should be started to handle requests.
      minTotalInstances?:
        type: integer
        format: int32
        description: Minimum number of instances that should be maintained for this version.
      coolDownPeriod?:
        type: string
        description: Amount of time that the [Autoscaler](https://cloud.google.com/compute/docs/autoscaler/) should wait between changes to the number of virtual machines. Only applicable for VM runtimes.
      maxConcurrentRequests?:
        type: integer
        format: int32
        description: Number of concurrent requests an automatic scaling instance can accept before the scheduler spawns a new instance. Defaults to a runtime-specific value.
      networkUtilization?: NetworkUtilization
      diskUtilization?: DiskUtilization
      maxIdleInstances?:
        type: integer
        format: int32
        description: Maximum number of idle instances that should be maintained for this version.
    description: Automatic scaling is based on request rate, response latencies, and other application metrics.
  BasicScaling:
    type: object
    properties:
      idleTimeout?:
        type: string
        description: Duration of time after the last request that an instance must wait before the instance is shut down.
      maxInstances?:
        type: integer
        format: int32
        description: Maximum number of instances to create for this version.
    description: A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
  ContainerInfo:
    type: object
    properties:
      image?:
        type: string
        description: 'URI to the hosted container image in a Docker repository. The
          URI must be fully qualified and include a tag or digest. Examples: "gcr.io/my-project/image:tag"
          or "gcr.io/my-project/image@digest"'
    description: Docker image that is used to start a VM container for the version you deploy.
  CpuUtilization:
    type: object
    properties:
      targetUtilization?:
        type: number
        format: double
        description: Target CPU utilization ratio to maintain when scaling. Must be between 0 and 1.
      aggregationWindowLength?:
        type: string
        description: Period of time over which CPU utilization is calculated.
    description: Target scaling by CPU usage.
  DebugInstanceRequest:
    type: object
    description: Request message for `Instances.DebugInstance`.
  Deployment:
    type: object
    properties:
      container?: ContainerInfo
      zip?: ZipInfo
      files?:
        type: object
        description: Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.
    description: Code and application artifacts used to deploy a version to App Engine.
  DiskUtilization:
    type: object
    properties:
      targetWriteOpsPerSecond?:
        type: integer
        format: int32
        description: Target ops written per second.
      targetReadOpsPerSecond?:
        type: integer
        format: int32
        description: Target ops read per seconds.
      targetWriteBytesPerSecond?:
        type: integer
        format: int32
        description: Target bytes written per second.
      targetReadBytesPerSecond?:
        type: integer
        format: int32
        description: Target bytes read per second.
    description: Target scaling by disk usage. Only applicable for VM runtimes.
  ErrorHandler:
    type: object
    properties:
      errorCode?:
        type: string
        description: Error condition this handler applies to.
        enum:
        - ERROR_CODE_UNSPECIFIED
        - ERROR_CODE_DEFAULT
        - ERROR_CODE_OVER_QUOTA
        - ERROR_CODE_DOS_API_DENIAL
        - ERROR_CODE_TIMEOUT
      mimeType?:
        type: string
        description: MIME type of file. Defaults to `text/html`.
      staticFile?:
        type: string
        description: Static file content to be served for this error.
    description: Custom static error page to be served when an error occurs.
  FileInfo:
    type: object
    properties:
      sourceUrl?:
        type: string
        description: URL source to use to fetch this file. Must be a URL to a resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/\/\'.
      sha1Sum?:
        type: string
        description: The SHA1 hash of the file, in hex.
      mimeType?:
        type: string
        description: The MIME type of the file. Defaults to the value from Google Cloud Storage.
    description: Single source file that is part of the version to be deployed. Each source file that is deployed must be specified separately.
  HealthCheck:
    type: object
    properties:
      checkInterval?:
        type: string
        description: Interval between health checks.
      restartThreshold?:
        type: integer
        format: int32
        description: Number of consecutive failed health checks required before an instance is restarted.
      host?:
        type: string
        description: 'Host header to send when performing an HTTP health check. Example:
          "myapp.appspot.com"'
      unhealthyThreshold?:
        type: integer
        format: int32
        description: Number of consecutive failed health checks required before removing traffic.
      healthyThreshold?:
        type: integer
        format: int32
        description: Number of consecutive successful health checks required before receiving traffic.
      timeout?:
        type: string
        description: Time before the health check is considered failed.
      disableHealthCheck?:
        type: boolean
        description: Whether to explicitly disable health checks for this instance.
    description: Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment.
  Instance:
    type: object
    properties:
      averageLatency?:
        type: integer
        format: int32
        description: Average latency (ms) over the last minute. @OutputOnly
      vmName?:
        type: string
        description: Name of the virtual machine where this instance lives. Only applicable for instances in App Engine flexible environment. @OutputOnly
      memoryUsage?:
        type: integer
        format: int64
        description: Total memory in use (bytes). @OutputOnly
      vmId?:
        type: string
        description: Virtual machine ID of this instance. Only applicable for instances in App Engine flexible environment. @OutputOnly
      appEngineRelease?:
        type: string
        description: App Engine release this instance is running on. @OutputOnly
      vmZoneName?:
        type: string
        description: Zone where the virtual machine is located. Only applicable for instances in App Engine flexible environment. @OutputOnly
      availability?:
        type: string
        description: Availability of the instance. @OutputOnly
        enum:
        - UNSPECIFIED
        - RESIDENT
        - DYNAMIC
      requests?:
        type: integer
        format: int32
        description: Number of requests since this instance was started. @OutputOnly
      vmStatus?:
        type: string
        description: Status of the virtual machine where this instance lives. Only applicable for instances in App Engine flexible environment. @OutputOnly
      vmDebugEnabled?:
        type: boolean
        description: Whether this instance is in debug mode. Only applicable for instances in App Engine flexible environment. @OutputOnly
      qps?:
        type: number
        format: float
        description: Average queries per second (QPS) over the last minute. @OutputOnly
      name?:
        type: string
        description: 'Full path to the Instance resource in the API. Example: `apps/myapp/services/default/versions/v1/instances/instance-1`.
          @OutputOnly'
      startTime?:
        type: string
        description: Time that this instance was started. @OutputOnly
      id?:
        type: string
        description: 'Relative name of the instance within the version. Example: `instance-1`.
          @OutputOnly'
      errors?:
        type: integer
        format: int32
        description: Number of errors since this instance was started. @OutputOnly
    description: An Instance resource is the computing unit that App Engine uses to automatically scale an application.
  Library:
    type: object
    properties:
      name?:
        type: string
        description: 'Name of the library. Example: "django".'
      version?:
        type: string
        description: Version of the library to select, or "latest".
    description: Third-party Python runtime library that is required by the application.
  ListInstancesResponse:
    type: object
    properties:
      instances?:
        type: array
        description: The instances belonging to the requested version.
        items: Instance
      nextPageToken?:
        type: string
        description: Continuation token for fetching the next page of results.
    description: Response message for `Instances.ListInstances`.
  ListLocationsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: The standard List next-page token.
      locations?:
        type: array
        description: A list of locations that matches the specified filter in the request.
        items: Location
    description: The response message for LocationService.ListLocations.
  ListOperationsResponse:
    type: object
    properties:
      operations?:
        type: array
        description: A list of operations that matches the specified filter in the request.
        items: Operation
      nextPageToken?:
        type: string
        description: The standard List next-page token.
    description: The response message for Operations.ListOperations.
  ListServicesResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: Continuation token for fetching the next page of results.
      services?:
        type: array
        description: The services belonging to the requested application.
        items: Service
    description: Response message for `Services.ListServices`.
  ListVersionsResponse:
    type: object
    properties:
      versions?:
        type: array
        description: The versions belonging to the requested service.
        items: Version
      nextPageToken?:
        type: string
        description: Continuation token for fetching the next page of results.
    description: Response message for `Versions.ListVersions`.
  Location:
    type: object
    properties:
      metadata?:
        type: object
        description: Service-specific metadata. For example the available capacity at the given location.
      locationId?:
        type: string
        description: 'The canonical id for this location. For example: `"us-east1"`.'
      name?:
        type: string
        description: 'Resource name for the location, which may vary between implementations.
          For example: `"projects/example-project/locations/us-east1"`'
      labels?:
        type: object
        description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region":
          "us-east1"}'
    description: A resource that represents Google Cloud Platform location.
  LocationMetadata:
    type: object
    properties:
      standardEnvironmentAvailable?:
        type: boolean
        description: App Engine Standard Environment is available in the given location. @OutputOnly
      flexibleEnvironmentAvailable?:
        type: boolean
        description: App Engine Flexible Environment is available in the given location. @OutputOnly
    description: Metadata for the given google.cloud.location.Location.
  ManualScaling:
    type: object
    properties:
      instances?:
        type: integer
        format: int32
        description: Number of instances to assign to the service at the start. This number can later be altered by using the [Modules API](https://cloud.google.com/appengine/docs/python/modules/functions) `set_num_instances()` function.
    description: A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
  Network:
    type: object
    properties:
      instanceTag?:
        type: string
        description: Tag to apply to the VM instance during creation.
      name?:
        type: string
        description: Google Cloud Platform network where the virtual machines are created. Specify the short name, not the resource path. Defaults to `default`.
      forwardedPorts?:
        type: array
        description: List of ports, or port pairs, to forward from the virtual machine to the application container.
        items:
          type: string
    description: Extra network settings. Only applicable for VM runtimes.
  NetworkUtilization:
    type: object
    properties:
      targetSentPacketsPerSecond?:
        type: integer
        format: int32
        description: Target packets sent per second.
      targetReceivedBytesPerSecond?:
        type: integer
        format: int32
        description: Target bytes received per second.
      targetReceivedPacketsPerSecond?:
        type: integer
        format: int32
        description: Target packets received per second.
      targetSentBytesPerSecond?:
        type: integer
        format: int32
        description: Target bytes sent per second.
    description: Target scaling by network usage. Only applicable for VM runtimes.
  Operation:
    type: object
    properties:
      metadata?:
        type: object
        description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
      response?:
        type: object
        description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
      name?:
        type: string
        description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should have the format of `operations/some/unique/name`.
      error?: Status
      done?:
        type: boolean
        description: If the value is `false`, it means the operation is still in progress. If true, the operation is completed, and either `error` or `response` is available.
    description: This resource represents a long-running operation that is the result of a network API call.
  OperationMetadata:
    type: object
    properties:
      insertTime?:
        type: string
        description: Timestamp that this operation was created. @OutputOnly
      method?:
        type: string
        description: 'API method that initiated this operation. Example: `google.appengine.v1beta4.Version.CreateVersion`.
          @OutputOnly'
      operationType?:
        type: string
        description: 'Type of this operation. Deprecated, use method field instead.
          Example: "create_version". @OutputOnly'
      endTime?:
        type: string
        description: Timestamp that this operation completed. @OutputOnly
      user?:
        type: string
        description: User who requested this operation. @OutputOnly
      target?:
        type: string
        description: 'Name of the resource that this operation is acting on. Example:
          `apps/myapp/modules/default`. @OutputOnly'
    description: Metadata for the given google.longrunning.Operation.
  OperationMetadataV1:
    type: object
    properties:
      insertTime?:
        type: string
        description: Time that this operation was created. @OutputOnly
      method?:
        type: string
        description: 'API method that initiated this operation. Example: `google.appengine.v1.Versions.CreateVersion`.
          @OutputOnly'
      endTime?:
        type: string
        description: Time that this operation completed. @OutputOnly
      user?:
        type: string
        description: User who requested this operation. @OutputOnly
      target?:
        type: string
        description: 'Name of the resource that this operation is acting on. Example:
          `apps/myapp/services/default`. @OutputOnly'
    description: Metadata for the given google.longrunning.Operation.
  OperationMetadataV1Beta5:
    type: object
    properties:
      insertTime?:
        type: string
        description: Timestamp that this operation was created. @OutputOnly
      method?:
        type: string
        description: 'API method name that initiated this operation. Example: `google.appengine.v1beta5.Version.CreateVersion`.
          @OutputOnly'
      endTime?:
        type: string
        description: Timestamp that this operation completed. @OutputOnly
      user?:
        type: string
        description: User who requested this operation. @OutputOnly
      target?:
        type: string
        description: 'Name of the resource that this operation is acting on. Example:
          `apps/myapp/services/default`. @OutputOnly'
    description: Metadata for the given google.longrunning.Operation.
  RepairApplicationRequest:
    type: object
    description: Request message for 'Applications.RepairApplication'.
  RequestUtilization:
    type: object
    properties:
      targetConcurrentRequests?:
        type: integer
        format: int32
        description: Target number of concurrent requests.
      targetRequestCountPerSecond?:
        type: integer
        format: int32
        description: Target requests per second.
    description: Target scaling by request utilization. Only applicable for VM runtimes.
  Resources:
    type: object
    properties:
      cpu?:
        type: number
        format: double
        description: Number of CPU cores needed.
      diskGb?:
        type: number
        format: double
        description: Disk size (GB) needed.
      memoryGb?:
        type: number
        format: double
        description: Memory (GB) needed.
    description: Machine resources for a version.
  ScriptHandler:
    type: object
    properties:
      scriptPath?:
        type: string
        description: Path to the script from the application root directory.
    description: Executes a script to handle the request that matches the URL pattern.
  Service:
    type: object
    properties:
      split?: TrafficSplit
      name?:
        type: string
        description: 'Full path to the Service resource in the API. Example: `apps/myapp/services/default`.
          @OutputOnly'
      id?:
        type: string
        description: 'Relative name of the service within the application. Example:
          `default`. @OutputOnly'
    description: A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services. For example, an application that handles customer requests might include separate services to handle tasks such as backend data analysis or API requests from mobile devices. Each service has a collection of versions that define a specific set of code used to implement the functionality of that service.
  StaticFilesHandler:
    type: object
    properties:
      path?:
        type: string
        description: Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
      uploadPathRegex?:
        type: string
        description: Regular expression that matches the file paths for all files that should be referenced by this handler.
      requireMatchingFile?:
        type: boolean
        description: Whether this handler should match the request if the file referenced by the handler does not exist.
      expiration?:
        type: string
        description: Time a static file served by this handler should be cached by web proxies and browsers.
      httpHeaders?:
        type: object
        description: HTTP headers to use for all responses from these URLs.
      mimeType?:
        type: string
        description: MIME type used to serve all files served by this handler. Defaults to file-specific MIME types, which are derived from each file's filename extension.
      applicationReadable?:
        type: boolean
        description: Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.
    description: Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.
  Status:
    type: object
    properties:
      code?:
        type: integer
        format: int32
        description: The status code, which should be an enum value of google.rpc.Code.
      details?:
        type: array
        description: A list of messages that carry the error details. There will be a common set of message types for APIs to use.
        items:
          type: object
      message?:
        type: string
        description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
    description: 'The `Status` type defines a logical error model that is suitable
      for different programming environments, including REST APIs and RPC APIs. It
      is used by [gRPC](https://github.com/grpc). The error model is designed to be:
      - Simple to use and understand for most users - Flexible enough to meet unexpected
      needs # Overview The `Status` message contains three pieces of data: error code,
      error message, and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed. The error
      message should be a developer-facing English message that helps developers *understand*
      and *resolve* the error. If a localized user-facing error message is needed,
      put the localized message in the error details or localize it in the client.
      The optional error details may contain arbitrary information about the error.
      There is a predefined set of error detail types in the package `google.rpc`
      which can be used for common error conditions. # Language mapping The `Status`
      message is the logical representation of the error model, but it is not necessarily
      the actual wire format. When the `Status` message is exposed in different client
      libraries and different wire protocols, it can be mapped differently. For example,
      it will likely be mapped to some exceptions in Java, but more likely mapped
      to some error codes in C. # Other uses The error model and the `Status` message
      can be used in a variety of environments, either with or without APIs, to provide
      a consistent developer experience across different environments. Example uses
      of this error model include: - Partial errors. If a service needs to return
      partial errors to the client, it may embed the `Status` in the normal response
      to indicate the partial errors. - Workflow errors. A typical workflow has multiple
      steps. Each step may have a `Status` message for error reporting purpose. -
      Batch operations. If a client uses batch request and batch response, the `Status`
      message should be used directly inside batch response, one for each error sub-response.
      - Asynchronous operations. If an API call embeds asynchronous operation results
      in its response, the status of those operations should be represented directly
      using the `Status` message. - Logging. If some API errors are stored in logs,
      the message `Status` could be used directly after any stripping needed for security/privacy
      reasons.'
  TrafficSplit:
    type: object
    properties:
      allocations?:
        type: object
        description: Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.
      shardBy?:
        type: string
        description: Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.
        enum:
        - UNSPECIFIED
        - COOKIE
        - IP
    description: Traffic routing configuration for versions within a single service. Traffic splits define how traffic directed to the service is assigned to versions.
  UrlDispatchRule:
    type: object
    properties:
      path?:
        type: string
        description: Pathname within the host. Must start with a "`/`". A single "`*`" can be included at the end of the path. The sum of the lengths of the domain and path may not exceed 100 characters.
      service?:
        type: string
        description: 'Resource ID of a service in this application that should serve
          the matched request. The service must already exist. Example: `default`.'
      domain?:
        type: string
        description: 'Domain name to match against. The wildcard "`*`" is supported
          if specified before a period: "`*.`". Defaults to matching all domains:
          "`*`".'
    description: Rules to match an HTTP request and dispatch that request to a service.
  UrlMap:
    type: object
    properties:
      securityLevel?:
        type: string
        description: Security (HTTPS) enforcement for this URL.
        enum:
        - SECURE_UNSPECIFIED
        - SECURE_DEFAULT
        - SECURE_NEVER
        - SECURE_OPTIONAL
        - SECURE_ALWAYS
      apiEndpoint?: ApiEndpointHandler
      urlRegex?:
        type: string
        description: URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings. All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
      redirectHttpResponseCode?:
        type: string
        description: '`30x` code to use when performing redirects for the `secure`
          field. Defaults to `302`.'
        enum:
        - REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED
        - REDIRECT_HTTP_RESPONSE_CODE_301
        - REDIRECT_HTTP_RESPONSE_CODE_302
        - REDIRECT_HTTP_RESPONSE_CODE_303
        - REDIRECT_HTTP_RESPONSE_CODE_307
      staticFiles?: StaticFilesHandler
      authFailAction?:
        type: string
        description: Action to take when users access resources that require authentication. Defaults to `redirect`.
        enum:
        - AUTH_FAIL_ACTION_UNSPECIFIED
        - AUTH_FAIL_ACTION_REDIRECT
        - AUTH_FAIL_ACTION_UNAUTHORIZED
      login?:
        type: string
        description: Level of login required to access this resource.
        enum:
        - LOGIN_UNSPECIFIED
        - LOGIN_OPTIONAL
        - LOGIN_ADMIN
        - LOGIN_REQUIRED
      script?: ScriptHandler
    description: URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code or by serving static files uploaded with the version, such as images, CSS, or JavaScript.
  Version:
    type: object
    properties:
      diskUsageBytes?:
        type: integer
        format: int64
        description: Total size in bytes of all the files that are included in this version and curerntly hosted on the App Engine disk. @OutputOnly
      network?: Network
      basicScaling?: BasicScaling
      servingStatus?:
        type: string
        description: Current serving status of this version. Only the versions with a `SERVING` status create instances and can be billed. `SERVING_STATUS_UNSPECIFIED` is an invalid value. Defaults to `SERVING`.
        enum:
        - SERVING_STATUS_UNSPECIFIED
        - SERVING
        - STOPPED
      id?:
        type: string
        description: 'Relative name of the version within the service. Example: `v1`.
          Version names can contain only lowercase letters, numbers, or hyphens. Reserved
          names: "default", "latest", and any name with the prefix "ah-".'
      manualScaling?: ManualScaling
      deployment?: Deployment
      errorHandlers?:
        type: array
        description: Custom static error pages. Limited to 10KB per page. Only returned in `GET` requests if `view=FULL` is set.
        items: ErrorHandler
      libraries?:
        type: array
        description: Configuration for third-party Python runtime libraries that are required by the application. Only returned in `GET` requests if `view=FULL` is set.
        items: Library
      defaultExpiration?:
        type: string
        description: Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding [StaticFilesHandler](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#staticfileshandler) does not specify its own expiration time. Only returned in `GET` requests if `view=FULL` is set.
      instanceClass?:
        type: string
        description: 'Instance class that is used to run this version. Valid values
          are: * AutomaticScaling: `F1`, `F2`, `F4`, `F4_1G` * ManualScaling or BasicScaling:
          `B1`, `B2`, `B4`, `B8`, `B4_1G` Defaults to `F1` for AutomaticScaling and
          `B1` for ManualScaling or BasicScaling.'
      resources?: Resources
      runtime?:
        type: string
        description: 'Desired runtime. Example: `python27`.'
      env?:
        type: string
        description: App Engine execution environment for this version. Defaults to `standard`.
      automaticScaling?: AutomaticScaling
      inboundServices?:
        type: array
        description: Before an application can receive email or XMPP messages, the application must be configured to enable the service.
        items:
          type: string
          enum:
          - INBOUND_SERVICE_UNSPECIFIED
          - INBOUND_SERVICE_MAIL
          - INBOUND_SERVICE_MAIL_BOUNCE
          - INBOUND_SERVICE_XMPP_ERROR
          - INBOUND_SERVICE_XMPP_MESSAGE
          - INBOUND_SERVICE_XMPP_SUBSCRIBE
          - INBOUND_SERVICE_XMPP_PRESENCE
          - INBOUND_SERVICE_CHANNEL_PRESENCE
          - INBOUND_SERVICE_WARMUP
      createdBy?:
        type: string
        description: Email address of the user who created this version. @OutputOnly
      createTime?:
        type: string
        description: Time that this version was created. @OutputOnly
      nobuildFilesRegex?:
        type: string
        description: Files that match this pattern will not be built into this version. Only applicable for Go runtimes. Only returned in `GET` requests if `view=FULL` is set.
      handlers?:
        type: array
        description: An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in `GET` requests if `view=FULL` is set.
        items: UrlMap
      envVariables?:
        type: object
        description: Environment variables available to the application. Only returned in `GET` requests if `view=FULL` is set.
      vm?:
        type: boolean
        description: Whether to deploy this version in a container on a virtual machine.
      healthCheck?: HealthCheck
      name?:
        type: string
        description: 'Full path to the Version resource in the API. Example: `apps/myapp/services/default/versions/v1`.
          @OutputOnly'
      apiConfig?: ApiConfigHandler
      threadsafe?:
        type: boolean
        description: Whether multiple requests can be dispatched to this version at once.
      betaSettings?:
        type: object
        description: Metadata settings that are supplied to this version to enable beta runtime features.
      versionUrl?:
        type: string
        description: 'Serving URL for this version. Example: "https://myversion-dot-myservice-dot-myapp.appspot.com"
          @OutputOnly'
    description: A Version resource is a specific set of source code and configuration files that are deployed into a service.
  ZipInfo:
    type: object
    properties:
      sourceUrl?:
        type: string
        description: URL of the zip file to deploy from. Must be a URL to a resource in Google Cloud Storage in the form 'http(s)://storage.googleapis.com/\/\'.
      filesCount?:
        type: integer
        format: int32
        description: An estimate of the number of files in a zip for a zip deployment. If set, must be greater than or equal to the actual number of files. Used for optimizing performance; if not provided, deployment may be slow.
    description: The zip file information for a zip deployment.
/experimental:
  /apps:
    /{appsId}:
      uriParameters:
        appsId:
          type: string
          description: Part of `name`. The name of the operation resource.
      /operations:
        /{operationsId}:
          uriParameters:
            operationsId:
              type: string
              description: Part of `name`. See documentation of `appsId`.
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Operation
            (commons.Id): appengine.experimental.apps.operations.get
            (commons.LogicalStructure):
            - Experimental
            - Apps
            - Operations
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
          description: 'Lists operations that match the specified filter in the request.
            If the server doesn''t support this method, it returns `UNIMPLEMENTED`.
            NOTE: the `name` binding below allows API services to override the binding
            to use different resource name schemes, such as `users/*/operations`.'
          displayName: List
          is:
          - hasParameters
          queryParameters:
            filter?:
              type: string
              description: The standard list filter.
            pageSize?:
              type: integer
              format: int32
              description: The standard list page size.
            pageToken?:
              type: string
              description: The standard list page token.
          responses:
            200:
              body:
                application/json: ListOperationsResponse
          (commons.Id): appengine.experimental.apps.operations.list
          (commons.LogicalStructure):
          - Experimental
          - Apps
          - Operations
/v1:
  /apps:
    /{appsId}:
      uriParameters:
        appsId:
          type: string
          description: 'Part of `name`. Name of the application to update. Example:
            `apps/myapp`.'
      /operations:
        /{operationsId}:
          uriParameters:
            operationsId:
              type: string
              description: Part of `name`. See documentation of `appsId`.
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Operation
            (commons.Id): appengine.apps.operations.get
            (commons.LogicalStructure):
            - Apps
            - Operations
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
          description: 'Lists operations that match the specified filter in the request.
            If the server doesn''t support this method, it returns `UNIMPLEMENTED`.
            NOTE: the `name` binding below allows API services to override the binding
            to use different resource name schemes, such as `users/*/operations`.'
          displayName: List
          is:
          - hasParameters
          queryParameters:
            filter?:
              type: string
              description: The standard list filter.
            pageSize?:
              type: integer
              format: int32
              description: The standard list page size.
            pageToken?:
              type: string
              description: The standard list page token.
          responses:
            200:
              body:
                application/json: ListOperationsResponse
          (commons.Id): appengine.apps.operations.list
          (commons.LogicalStructure):
          - Apps
          - Operations
      /locations:
        /{locationsId}:
          uriParameters:
            locationsId:
              type: string
              description: Part of `name`. See documentation of `appsId`.
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Get information about a location.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Location
            (commons.Id): appengine.apps.locations.get
            (commons.LogicalStructure):
            - Apps
            - Locations
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
          description: Lists information about the supported locations for this service.
          displayName: List
          is:
          - hasParameters
          queryParameters:
            filter?:
              type: string
              description: The standard list filter.
            pageSize?:
              type: integer
              format: int32
              description: The standard list page size.
            pageToken?:
              type: string
              description: The standard list page token.
          responses:
            200:
              body:
                application/json: ListLocationsResponse
          (commons.Id): appengine.apps.locations.list
          (commons.LogicalStructure):
          - Apps
          - Locations
      /services:
        /{servicesId}:
          uriParameters:
            servicesId:
              type: string
              description: Part of `name`. See documentation of `appsId`.
          /versions:
            /{versionsId}:
              uriParameters:
                versionsId:
                  type: string
                  description: Part of `name`. See documentation of `appsId`.
              /instances:
                /{instancesId}:debug:
                  uriParameters:
                    instancesId:
                      type: string
                      description: Part of `name`. See documentation of `appsId`.
                  post:
                    securedBy:
                      oath2:
                        scopes:
                        - https://www.googleapis.com/auth/cloud-platform
                    description: Enables debugging on a VM instance. This allows you to use the SSH command to connect to the virtual machine where the instance lives. While in "debug mode", the instance continues to serve live traffic. You should delete the instance when you are done debugging and then allow the system to take over and determine if another instance should be started. Only applicable for instances in App Engine flexible environment.
                    displayName: Debug
                    is:
                    - hasParameters
                    body:
                      application/json: DebugInstanceRequest
                    responses:
                      200:
                        body:
                          application/json: Operation
                    (commons.Id): appengine.apps.services.versions.instances.debug
                    (commons.LogicalStructure):
                    - Apps
                    - Services
                    - Versions
                    - Instances
                /{instancesId}:
                  uriParameters:
                    instancesId:
                      type: string
                      description: Part of `name`. See documentation of `appsId`.
                  get:
                    securedBy:
                      oath2:
                        scopes:
                        - https://www.googleapis.com/auth/cloud-platform
                    description: Gets instance information.
                    displayName: Get
                    is:
                    - hasParameters
                    responses:
                      200:
                        body:
                          application/json: Instance
                    (commons.Id): appengine.apps.services.versions.instances.get
                    (commons.LogicalStructure):
                    - Apps
                    - Services
                    - Versions
                    - Instances
                  delete:
                    securedBy:
                      oath2:
                        scopes:
                        - https://www.googleapis.com/auth/cloud-platform
                    description: Stops a running instance.
                    displayName: Delete
                    is:
                    - hasParameters
                    responses:
                      200:
                        body:
                          application/json: Operation
                    (commons.Id): appengine.apps.services.versions.instances.delete
                    (commons.LogicalStructure):
                    - Apps
                    - Services
                    - Versions
                    - Instances
                get:
                  securedBy:
                    oath2:
                      scopes:
                      - https://www.googleapis.com/auth/cloud-platform
                  description: Lists the instances of a version.
                  displayName: List
                  is:
                  - hasParameters
                  queryParameters:
                    pageSize?:
                      type: integer
                      format: int32
                      description: Maximum results to return per page.
                    pageToken?:
                      type: string
                      description: Continuation token for fetching the next page of results.
                  responses:
                    200:
                      body:
                        application/json: ListInstancesResponse
                  (commons.Id): appengine.apps.services.versions.instances.list
                  (commons.LogicalStructure):
                  - Apps
                  - Services
                  - Versions
                  - Instances
              patch:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: 'Updates the specified Version resource. You can specify
                  the following fields depending on the App Engine environment and
                  type of scaling that the version resource uses: * [`serving_status`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.serving_status):
                  For Version resources that use basic scaling, manual scaling, or
                  run in the App Engine flexible environment. * [`instance_class`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.instance_class):
                  For Version resources that run in the App Engine standard environment.
                  * [`automatic_scaling.min_idle_instances`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):
                  For Version resources that use automatic scaling and run in the
                  App Engine standard environment. * [`automatic_scaling.max_idle_instances`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#Version.FIELDS.automatic_scaling):
                  For Version resources that use automatic scaling and run in the
                  App Engine standard environment.'
                displayName: Patch
                is:
                - hasParameters
                queryParameters:
                  updateMask?:
                    type: string
                    description: Standard field mask for the set of fields to be updated.
                body:
                  application/json: Version
                responses:
                  200:
                    body:
                      application/json: Operation
                (commons.Id): appengine.apps.services.versions.patch
                (commons.LogicalStructure):
                - Apps
                - Services
                - Versions
              get:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Gets the specified Version resource. By default, only a `BASIC_VIEW` will be returned. Specify the `FULL_VIEW` parameter to get the full resource.
                displayName: Get
                is:
                - hasParameters
                queryParameters:
                  view?:
                    type: string
                    description: Controls the set of fields returned in the `Get` response.
                    enum:
                    - BASIC
                    - FULL
                responses:
                  200:
                    body:
                      application/json: Version
                (commons.Id): appengine.apps.services.versions.get
                (commons.LogicalStructure):
                - Apps
                - Services
                - Versions
              delete:
                securedBy:
                  oath2:
                    scopes:
                    - https://www.googleapis.com/auth/cloud-platform
                description: Deletes an existing Version resource.
                displayName: Delete
                is:
                - hasParameters
                responses:
                  200:
                    body:
                      application/json: Operation
                (commons.Id): appengine.apps.services.versions.delete
                (commons.LogicalStructure):
                - Apps
                - Services
                - Versions
            post:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Deploys code and resource files to a new version.
              displayName: Create
              is:
              - hasParameters
              body:
                application/json: Version
              responses:
                200:
                  body:
                    application/json: Operation
              (commons.Id): appengine.apps.services.versions.create
              (commons.LogicalStructure):
              - Apps
              - Services
              - Versions
            get:
              securedBy:
                oath2:
                  scopes:
                  - https://www.googleapis.com/auth/cloud-platform
              description: Lists the versions of a service.
              displayName: List
              is:
              - hasParameters
              queryParameters:
                view?:
                  type: string
                  description: Controls the set of fields returned in the `List` response.
                  enum:
                  - BASIC
                  - FULL
                pageSize?:
                  type: integer
                  format: int32
                  description: Maximum results to return per page.
                pageToken?:
                  type: string
                  description: Continuation token for fetching the next page of results.
              responses:
                200:
                  body:
                    application/json: ListVersionsResponse
              (commons.Id): appengine.apps.services.versions.list
              (commons.LogicalStructure):
              - Apps
              - Services
              - Versions
          patch:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Updates the configuration of the specified service.
            displayName: Patch
            is:
            - hasParameters
            queryParameters:
              migrateTraffic?:
                type: boolean
                description: Set to `true` to gradually shift traffic from one version to another single version. By default, traffic is shifted immediately. For gradual traffic migration, the target version must be located within instances that are configured for both [warmup requests](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#inboundservicetype) and [automatic scaling](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#automaticscaling). You must specify the [`shardBy`](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services#shardby) field in the Service resource. Gradual traffic migration is not supported in the App Engine flexible environment. For examples, see [Migrating and Splitting Traffic](https://cloud.google.com/appengine/docs/admin-api/migrating-splitting-traffic).
              updateMask?:
                type: string
                description: Standard field mask for the set of fields to be updated.
            body:
              application/json: Service
            responses:
              200:
                body:
                  application/json: Operation
            (commons.Id): appengine.apps.services.patch
            (commons.LogicalStructure):
            - Apps
            - Services
          get:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Gets the current configuration of the specified service.
            displayName: Get
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Service
            (commons.Id): appengine.apps.services.get
            (commons.LogicalStructure):
            - Apps
            - Services
          delete:
            securedBy:
              oath2:
                scopes:
                - https://www.googleapis.com/auth/cloud-platform
            description: Deletes the specified service and all enclosed versions.
            displayName: Delete
            is:
            - hasParameters
            responses:
              200:
                body:
                  application/json: Operation
            (commons.Id): appengine.apps.services.delete
            (commons.LogicalStructure):
            - Apps
            - Services
        get:
          securedBy:
            oath2:
              scopes:
              - https://www.googleapis.com/auth/cloud-platform
          description: Lists all the services in the application.
          displayName: List
          is:
          - hasParameters
          queryParameters:
            pageSize?:
              type: integer
              format: int32
              description: Maximum results to return per page.
            pageToken?:
              type: string
              description: Continuation token for fetching the next page of results.
          responses:
            200:
              body:
                application/json: ListServicesResponse
          (commons.Id): appengine.apps.services.list
          (commons.LogicalStructure):
          - Apps
          - Services
      patch:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Updates application parameters.
        displayName: Patch
        is:
        - hasParameters
        queryParameters:
          updateMask?:
            type: string
            description: Standard field mask for the set of fields to be updated.
        body:
          application/json: Application
        responses:
          200:
            body:
              application/json: Operation
        (commons.Id): appengine.apps.patch
        (commons.LogicalStructure):
        - Apps
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Gets information about an application.
        displayName: Get
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Application
        (commons.Id): appengine.apps.get
        (commons.LogicalStructure):
        - Apps
    /{appsId}:repair:
      uriParameters:
        appsId:
          type: string
          description: 'Part of `name`. Name of the application to repair. Example:
            `apps/myapp`'
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
        description: Recreates the required App Engine features for the application in your project, for example a Cloud Storage bucket or App Engine service account. Use this method if you receive an error message about a missing feature, for example "*Error retrieving the App Engine service account*".
        displayName: Repair
        is:
        - hasParameters
        body:
          application/json: RepairApplicationRequest
        responses:
          200:
            body:
              application/json: Operation
        (commons.Id): appengine.apps.repair
        (commons.LogicalStructure):
        - Apps
