#%RAML 1.0
title: Google Cloud Pub/Sub API
version: v1beta1a
baseUri: https://pubsub.googleapis.com/
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
(commons.Links):
- title: Developer Documentation
  url: https://cloud.google.com/pubsub/docs
  role: documentation
(commons.Icons):
- url: http://www.google.com/images/icons/product/search-32.gif
  name: x32
- url: http://www.google.com/images/icons/product/search-16.gif
  name: x16
(commons.Id): pubsub:v1beta1a
securitySchemes:
  oath2:
    type: OAuth 2.0
    description: Google Oath2.0 authorization. Detailed documentation can be found at https://developers.google.com/identity/protocols/OAuth2
    settings:
      authorizationGrants:
      - authorization_code
      - implicit
      authorizationUri: https://accounts.google.com/o/oauth2/v2/auth
      accessTokenUri: https://accounts.google.com/o/oauth2/v2/auth
      scopes:
      - https://www.googleapis.com/auth/pubsub
      - https://www.googleapis.com/auth/cloud-platform
traits:
  hasParameters:
    queryParameters:
      pp?:
        type: boolean
        default: true
        description: Pretty-print response.
      quotaUser?:
        type: string
        description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      prettyPrint?:
        type: boolean
        default: true
        description: Returns response with indentations and line breaks.
      upload_protocol?:
        type: string
        description: Upload protocol for media (e.g. "raw", "multipart").
      $.xgafv?:
        type: string
        description: V1 error format.
        (commons.EnumDescriptions):
        - v1 error format
        - v2 error format
      uploadType?:
        type: string
        description: Legacy upload protocol for media (e.g. "media", "multipart").
      callback?:
        type: string
        description: JSONP
      fields?:
        type: string
        description: Selector specifying which fields to include in a partial response.
securedBy:
  oath2: 
types:
  AcknowledgeRequest:
    type: object
    properties:
      ackId?:
        type: array
        description: The acknowledgment ID for the message being acknowledged. This was returned by the Pub/Sub system in the Pull response.
        items:
          type: string
      subscription?:
        type: string
        description: The subscription whose message is being acknowledged.
    description: Request for the Acknowledge method.
  Empty:
    type: object
    description: 'An empty message that you can re-use to avoid defining duplicated
      empty messages in your project. A typical example is to use it as argument or
      the return value of a service API. For instance: service Foo { rpc Bar (proto2.Empty)
      returns (proto2.Empty) { }; }; BEGIN GOOGLE-INTERNAL The difference between
      this one and net/rpc/empty-message.proto is that 1) The generated message here
      is in proto2 C++ API. 2) The proto2.Empty has minimum dependencies (no message_set
      or net/rpc dependencies) END GOOGLE-INTERNAL'
  Label:
    type: object
    properties:
      strValue?:
        type: string
        description: A string value.
      key?:
        type: string
        description: 'The key of a label is a syntactically valid URL (as per RFC
          1738) with the "scheme" and initial slashes omitted and with the additional
          restrictions noted below. Each key should be globally unique. The "host"
          portion is called the "namespace" and is not necessarily resolvable to a
          network endpoint. Instead, the namespace indicates what system or entity
          defines the semantics of the label. Namespaces do not restrict the set of
          objects to which a label may be associated. Keys are defined by the following
          grammar: key = hostname "/" kpath kpath = ksegment *[ "/" ksegment ] ksegment
          = alphadigit | *[ alphadigit | "-" | "_" | "." ] where "hostname" and "alphadigit"
          are defined as in RFC 1738. Example key: spanner.google.com/universe'
      numValue?:
        type: integer
        format: int64
        description: An integer value.
    description: A key-value pair applied to a given object.
  ListSubscriptionsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: If not empty, indicates that there are more subscriptions that match the request and this value should be passed to the next ListSubscriptionsRequest to continue.
      subscription?:
        type: array
        description: The subscriptions that match the request.
        items: Subscription
    description: Response for the ListSubscriptions method.
  ListTopicsResponse:
    type: object
    properties:
      nextPageToken?:
        type: string
        description: If not empty, indicates that there are more topics that match the request, and this value should be passed to the next ListTopicsRequest to continue.
      topic?:
        type: array
        description: The resulting topics.
        items: Topic
    description: Response for the ListTopics method.
  ModifyAckDeadlineRequest:
    type: object
    properties:
      ackId?:
        type: string
        description: The acknowledgment ID. Either this or ack_ids must be populated, not both.
      ackIds?:
        type: array
        description: List of acknowledgment IDs. Either this field or ack_id should be populated, not both.
        items:
          type: string
      subscription?:
        type: string
        description: 'Next Index: 5 The name of the subscription from which messages
          are being pulled.'
      ackDeadlineSeconds?:
        type: integer
        format: int32
        description: The new ack deadline with respect to the time this request was sent to the Pub/Sub system. Must be >= 0. For example, if the value is 10, the new ack deadline will expire 10 seconds after the ModifyAckDeadline call was made. Specifying zero may immediately make the message available for another pull request.
    description: Request for the ModifyAckDeadline method.
  ModifyPushConfigRequest:
    type: object
    properties:
      pushConfig?: PushConfig
      subscription?:
        type: string
        description: The name of the subscription.
    description: Request for the ModifyPushConfig method.
  PublishBatchRequest:
    type: object
    properties:
      topic?:
        type: string
        description: The messages in the request will be published on this topic.
      messages?:
        type: array
        description: The messages to publish.
        items: PubsubMessage
    description: Request for the PublishBatch method.
  PublishBatchResponse:
    type: object
    properties:
      messageIds?:
        type: array
        description: The server-assigned ID of each published message, in the same order as the messages in the request. IDs are guaranteed to be unique within the topic.
        items:
          type: string
    description: Response for the PublishBatch method.
  PublishRequest:
    type: object
    properties:
      topic?:
        type: string
        description: The message in the request will be published on this topic.
      message?: PubsubMessage
    description: Request for the Publish method.
  PubsubEvent:
    type: object
    properties:
      deleted?:
        type: boolean
        description: Indicates that this subscription has been deleted. (Note that pull subscribers will always receive NOT_FOUND in response in their pull request on the subscription, rather than seeing this boolean.)
      truncated?:
        type: boolean
        description: Indicates that this subscription has been truncated.
      subscription?:
        type: string
        description: The subscription that received the event.
      message?: PubsubMessage
    description: An event indicating a received message or truncation event.
  PubsubMessage:
    type: object
    properties:
      publishTime?:
        type: integer
        format: int64
        description: The time at which the message was published. The time is milliseconds since the UNIX epoch.
      data?:
        type: string
        description: The message payload.
      messageId?:
        type: string
        description: ID of this message assigned by the server at publication time. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a PubsubMessage via a Pull call or a push delivery. It must not be populated by a publisher in a Publish call.
      label?:
        type: array
        description: Optional list of labels for this message. Keys in this collection must be unique.
        items: Label
    description: A message data and its labels.
  PullBatchRequest:
    type: object
    properties:
      maxEvents?:
        type: integer
        format: int32
        description: The maximum number of PubsubEvents returned for this request. The Pub/Sub system may return fewer than the number of events specified.
      returnImmediately?:
        type: boolean
        description: If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning no messages. The client may cancel the request if it does not wish to wait any longer for the response.
      subscription?:
        type: string
        description: The subscription from which messages should be pulled.
    description: Request for the PullBatch method.
  PullBatchResponse:
    type: object
    properties:
      pullResponses?:
        type: array
        description: Received Pub/Sub messages or status events. The Pub/Sub system will return zero messages if there are no more messages available in the backlog. The Pub/Sub system may return fewer than the max_events requested even if there are more messages available in the backlog.
        items: PullResponse
    description: Response for the PullBatch method.
  PullRequest:
    type: object
    properties:
      returnImmediately?:
        type: boolean
        description: If this is specified as true the system will respond immediately even if it is not able to return a message in the Pull response. Otherwise the system is allowed to wait until at least one message is available rather than returning FAILED_PRECONDITION. The client may cancel the request if it does not wish to wait any longer for the response.
      subscription?:
        type: string
        description: The subscription from which a message should be pulled.
    description: Request for the Pull method.
  PullResponse:
    type: object
    properties:
      ackId?:
        type: string
        description: This ID must be used to acknowledge the received event or message.
      pubsubEvent?: PubsubEvent
    description: Either a PubsubMessage or a truncation event. One of these two must be populated.
  PushConfig:
    type: object
    properties:
      pushEndpoint?:
        type: string
        description: A URL locating the endpoint to which messages should be pushed. For example, a Webhook endpoint might use "https://example.com/push".
    description: Configuration for a push delivery endpoint.
  Subscription:
    type: object
    properties:
      pushConfig?: PushConfig
      name?:
        type: string
        description: Name of the subscription.
      topic?:
        type: string
        description: The name of the topic from which this subscription is receiving messages.
      ackDeadlineSeconds?:
        type: integer
        format: int32
        description: For either push or pull delivery, the value is the maximum time after a subscriber receives a message before the subscriber should acknowledge or Nack the message. If the Ack deadline for a message passes without an Ack or a Nack, the Pub/Sub system will eventually redeliver the message. If a subscriber acknowledges after the deadline, the Pub/Sub system may accept the Ack, but it is possible that the message has been already delivered again. Multiple Acks to the message are allowed and will succeed. For push delivery, this value is used to set the request timeout for the call to the push endpoint. For pull delivery, this value is used as the initial value for the Ack deadline. It may be overridden for each message using its corresponding ack_id with ModifyAckDeadline. While a message is outstanding (i.e. it has been delivered to a pull subscriber and the subscriber has not yet Acked or Nacked), the Pub/Sub system will not deliver that message to another pull subscriber (on a best-effort basis).
    description: A subscription resource.
  Topic:
    type: object
    properties:
      name?:
        type: string
        description: Name of the topic.
    description: A topic resource.
/v1beta1a:
  /subscriptions:
    /pull:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Pulls a single message from the server. If return_immediately is true, and no messages are available in the subscription, this method returns FAILED_PRECONDITION. The system is free to return an UNAVAILABLE error if no messages are available in a reasonable amount of time (to reduce system load).
        displayName: Pull
        is:
        - hasParameters
        body:
          application/json: PullRequest
        responses:
          200:
            body:
              application/json: PullResponse
        (commons.Id): pubsub.subscriptions.pull
        (commons.LogicalStructure):
        - Subscriptions
    /pullBatch:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Pulls messages from the server. Returns an empty list if there are no messages available in the backlog. The system is free to return UNAVAILABLE if there are too many pull requests outstanding for the given subscription.
        displayName: Pull Batch
        is:
        - hasParameters
        body:
          application/json: PullBatchRequest
        responses:
          200:
            body:
              application/json: PullBatchResponse
        (commons.Id): pubsub.subscriptions.pullBatch
        (commons.LogicalStructure):
        - Subscriptions
    /acknowledge:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: 'Acknowledges a particular received message: the Pub/Sub system
          can remove the given message from the subscription. Acknowledging a message
          whose Ack deadline has expired may succeed, but the message could have been
          already redelivered. Acknowledging a message more than once will not result
          in an error. This is only used for messages received via pull.'
        displayName: Acknowledge
        is:
        - hasParameters
        body:
          application/json: AcknowledgeRequest
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.subscriptions.acknowledge
        (commons.LogicalStructure):
        - Subscriptions
    /{subscription}:
      uriParameters:
        subscription:
          type: string
          pattern: ^.*$
          description: The name of the subscription to get.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Gets the configuration details of a subscription.
        displayName: Get
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Subscription
        (commons.Id): pubsub.subscriptions.get
        (commons.LogicalStructure):
        - Subscriptions
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Deletes an existing subscription. All pending messages in the subscription are immediately dropped. Calls to Pull after deletion will return NOT_FOUND.
        displayName: Delete
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.subscriptions.delete
        (commons.LogicalStructure):
        - Subscriptions
    /modifyAckDeadline:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Modifies the Ack deadline for a message received from a pull request.
        displayName: Modify Ack Deadline
        is:
        - hasParameters
        body:
          application/json: ModifyAckDeadlineRequest
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.subscriptions.modifyAckDeadline
        (commons.LogicalStructure):
        - Subscriptions
    /modifyPushConfig:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Modifies the PushConfig for a specified subscription. This method can be used to suspend the flow of messages to an endpoint by clearing the PushConfig field in the request. Messages will be accumulated for delivery even if no push configuration is defined or while the configuration is modified.
        displayName: Modify Push Config
        is:
        - hasParameters
        body:
          application/json: ModifyPushConfigRequest
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.subscriptions.modifyPushConfig
        (commons.LogicalStructure):
        - Subscriptions
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/pubsub
      description: Creates a subscription on a given topic for a given subscriber. If the subscription already exists, returns ALREADY_EXISTS. If the corresponding topic doesn't exist, returns NOT_FOUND. If the name is not provided in the request, the server will assign a random name for this subscription on the same project as the topic.
      displayName: Create
      is:
      - hasParameters
      body:
        application/json: Subscription
      responses:
        200:
          body:
            application/json: Subscription
      (commons.Id): pubsub.subscriptions.create
      (commons.LogicalStructure):
      - Subscriptions
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/pubsub
      description: Lists matching subscriptions.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: Maximum number of subscriptions to return.
        query?:
          type: string
          description: A valid label query expression.
        pageToken?:
          type: string
          description: The value obtained in the last ListSubscriptionsResponse for continuation.
      responses:
        200:
          body:
            application/json: ListSubscriptionsResponse
      (commons.Id): pubsub.subscriptions.list
      (commons.LogicalStructure):
      - Subscriptions
  /topics:
    /publishBatch:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Adds one or more messages to the topic. Returns NOT_FOUND if the topic does not exist.
        displayName: Publish Batch
        is:
        - hasParameters
        body:
          application/json: PublishBatchRequest
        responses:
          200:
            body:
              application/json: PublishBatchResponse
        (commons.Id): pubsub.topics.publishBatch
        (commons.LogicalStructure):
        - Topics
    /publish:
      post:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Adds a message to the topic. Returns NOT_FOUND if the topic does not exist.
        displayName: Publish
        is:
        - hasParameters
        body:
          application/json: PublishRequest
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.topics.publish
        (commons.LogicalStructure):
        - Topics
    /{topic}:
      uriParameters:
        topic:
          type: string
          pattern: ^.*$
          description: The name of the topic to get.
      get:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Gets the configuration of a topic. Since the topic only has the name attribute, this method is only useful to check the existence of a topic. If other attributes are added in the future, they will be returned here.
        displayName: Get
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Topic
        (commons.Id): pubsub.topics.get
        (commons.LogicalStructure):
        - Topics
      delete:
        securedBy:
          oath2:
            scopes:
            - https://www.googleapis.com/auth/cloud-platform
            - https://www.googleapis.com/auth/pubsub
        description: Deletes the topic with the given name. Returns NOT_FOUND if the topic does not exist. After a topic is deleted, a new topic may be created with the same name.
        displayName: Delete
        is:
        - hasParameters
        responses:
          200:
            body:
              application/json: Empty
        (commons.Id): pubsub.topics.delete
        (commons.LogicalStructure):
        - Topics
    post:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/pubsub
      description: Creates the given topic with the given name.
      displayName: Create
      is:
      - hasParameters
      body:
        application/json: Topic
      responses:
        200:
          body:
            application/json: Topic
      (commons.Id): pubsub.topics.create
      (commons.LogicalStructure):
      - Topics
    get:
      securedBy:
        oath2:
          scopes:
          - https://www.googleapis.com/auth/cloud-platform
          - https://www.googleapis.com/auth/pubsub
      description: Lists matching topics.
      displayName: List
      is:
      - hasParameters
      queryParameters:
        maxResults?:
          type: integer
          format: int32
          description: Maximum number of topics to return.
        query?:
          type: string
          description: A valid label query expression.
        pageToken?:
          type: string
          description: The value obtained in the last ListTopicsResponse for continuation.
      responses:
        200:
          body:
            application/json: ListTopicsResponse
      (commons.Id): pubsub.topics.list
      (commons.LogicalStructure):
      - Topics
